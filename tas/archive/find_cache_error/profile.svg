<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1189.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1189.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;module&gt; (firedrake/__init__.py:19) (51 samples, 1.33%)</title><rect x="0.1569%" y="148" width="1.3337%" height="15" fill="rgb(227,0,7)"/><text x="0.4069%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (51 samples, 1.33%)</title><rect x="0.1569%" y="164" width="1.3337%" height="15" fill="rgb(217,0,24)"/><text x="0.4069%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (51 samples, 1.33%)</title><rect x="0.1569%" y="180" width="1.3337%" height="15" fill="rgb(221,193,54)"/><text x="0.4069%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (51 samples, 1.33%)</title><rect x="0.1569%" y="196" width="1.3337%" height="15" fill="rgb(248,212,6)"/><text x="0.4069%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (51 samples, 1.33%)</title><rect x="0.1569%" y="212" width="1.3337%" height="15" fill="rgb(208,68,35)"/><text x="0.4069%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (51 samples, 1.33%)</title><rect x="0.1569%" y="228" width="1.3337%" height="15" fill="rgb(232,128,0)"/><text x="0.4069%" y="238.50"></text></g><g><title>&lt;module&gt; (firedrake/petsc.py:4) (51 samples, 1.33%)</title><rect x="0.1569%" y="244" width="1.3337%" height="15" fill="rgb(207,160,47)"/><text x="0.4069%" y="254.50"></text></g><g><title>&lt;module&gt; (pyop2/sequential.py:42) (72 samples, 1.88%)</title><rect x="2.0136%" y="436" width="1.8828%" height="15" fill="rgb(228,23,34)"/><text x="2.2636%" y="446.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1023) (72 samples, 1.88%)</title><rect x="2.0136%" y="452" width="1.8828%" height="15" fill="rgb(218,30,26)"/><text x="2.2636%" y="462.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (72 samples, 1.88%)</title><rect x="2.0136%" y="468" width="1.8828%" height="15" fill="rgb(220,122,19)"/><text x="2.2636%" y="478.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (72 samples, 1.88%)</title><rect x="2.0136%" y="484" width="1.8828%" height="15" fill="rgb(250,228,42)"/><text x="2.2636%" y="494.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (72 samples, 1.88%)</title><rect x="2.0136%" y="500" width="1.8828%" height="15" fill="rgb(240,193,28)"/><text x="2.2636%" y="510.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (72 samples, 1.88%)</title><rect x="2.0136%" y="516" width="1.8828%" height="15" fill="rgb(216,20,37)"/><text x="2.2636%" y="526.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (72 samples, 1.88%)</title><rect x="2.0136%" y="532" width="1.8828%" height="15" fill="rgb(206,188,39)"/><text x="2.2636%" y="542.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (72 samples, 1.88%)</title><rect x="2.0136%" y="548" width="1.8828%" height="15" fill="rgb(217,207,13)"/><text x="2.2636%" y="558.50">_..</text></g><g><title>&lt;module&gt; (pyop2/base.py:64) (71 samples, 1.86%)</title><rect x="2.0397%" y="564" width="1.8567%" height="15" fill="rgb(231,73,38)"/><text x="2.2897%" y="574.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (71 samples, 1.86%)</title><rect x="2.0397%" y="580" width="1.8567%" height="15" fill="rgb(225,20,46)"/><text x="2.2897%" y="590.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (71 samples, 1.86%)</title><rect x="2.0397%" y="596" width="1.8567%" height="15" fill="rgb(210,31,41)"/><text x="2.2897%" y="606.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (71 samples, 1.86%)</title><rect x="2.0397%" y="612" width="1.8567%" height="15" fill="rgb(221,200,47)"/><text x="2.2897%" y="622.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (71 samples, 1.86%)</title><rect x="2.0397%" y="628" width="1.8567%" height="15" fill="rgb(226,26,5)"/><text x="2.2897%" y="638.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (71 samples, 1.86%)</title><rect x="2.0397%" y="644" width="1.8567%" height="15" fill="rgb(249,33,26)"/><text x="2.2897%" y="654.50">_..</text></g><g><title>&lt;module&gt; (pyop2/__init__.py:4) (78 samples, 2.04%)</title><rect x="1.9090%" y="244" width="2.0397%" height="15" fill="rgb(235,183,28)"/><text x="2.1590%" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (78 samples, 2.04%)</title><rect x="1.9090%" y="260" width="2.0397%" height="15" fill="rgb(221,5,38)"/><text x="2.1590%" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (78 samples, 2.04%)</title><rect x="1.9090%" y="276" width="2.0397%" height="15" fill="rgb(247,18,42)"/><text x="2.1590%" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (78 samples, 2.04%)</title><rect x="1.9090%" y="292" width="2.0397%" height="15" fill="rgb(241,131,45)"/><text x="2.1590%" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (78 samples, 2.04%)</title><rect x="1.9090%" y="308" width="2.0397%" height="15" fill="rgb(249,31,29)"/><text x="2.1590%" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (78 samples, 2.04%)</title><rect x="1.9090%" y="324" width="2.0397%" height="15" fill="rgb(225,111,53)"/><text x="2.1590%" y="334.50">_..</text></g><g><title>&lt;module&gt; (pyop2/op2.py:42) (74 samples, 1.94%)</title><rect x="2.0136%" y="340" width="1.9351%" height="15" fill="rgb(238,160,17)"/><text x="2.2636%" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (74 samples, 1.94%)</title><rect x="2.0136%" y="356" width="1.9351%" height="15" fill="rgb(214,148,48)"/><text x="2.2636%" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (74 samples, 1.94%)</title><rect x="2.0136%" y="372" width="1.9351%" height="15" fill="rgb(232,36,49)"/><text x="2.2636%" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (74 samples, 1.94%)</title><rect x="2.0136%" y="388" width="1.9351%" height="15" fill="rgb(209,103,24)"/><text x="2.2636%" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (74 samples, 1.94%)</title><rect x="2.0136%" y="404" width="1.9351%" height="15" fill="rgb(229,88,8)"/><text x="2.2636%" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (74 samples, 1.94%)</title><rect x="2.0136%" y="420" width="1.9351%" height="15" fill="rgb(213,181,19)"/><text x="2.2636%" y="430.50">_..</text></g><g><title>&lt;module&gt; (firedrake/__init__.py:54) (85 samples, 2.22%)</title><rect x="1.9090%" y="148" width="2.2228%" height="15" fill="rgb(254,191,54)"/><text x="2.1590%" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (85 samples, 2.22%)</title><rect x="1.9090%" y="164" width="2.2228%" height="15" fill="rgb(241,83,37)"/><text x="2.1590%" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (85 samples, 2.22%)</title><rect x="1.9090%" y="180" width="2.2228%" height="15" fill="rgb(233,36,39)"/><text x="2.1590%" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (85 samples, 2.22%)</title><rect x="1.9090%" y="196" width="2.2228%" height="15" fill="rgb(226,3,54)"/><text x="2.1590%" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (85 samples, 2.22%)</title><rect x="1.9090%" y="212" width="2.2228%" height="15" fill="rgb(245,192,40)"/><text x="2.1590%" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (85 samples, 2.22%)</title><rect x="1.9090%" y="228" width="2.2228%" height="15" fill="rgb(238,167,29)"/><text x="2.1590%" y="238.50">_..</text></g><g><title>&lt;module&gt; (tsfc/driver.py:21) (138 samples, 3.61%)</title><rect x="4.2103%" y="564" width="3.6088%" height="15" fill="rgb(232,182,51)"/><text x="4.4603%" y="574.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (138 samples, 3.61%)</title><rect x="4.2103%" y="580" width="3.6088%" height="15" fill="rgb(231,60,39)"/><text x="4.4603%" y="590.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (138 samples, 3.61%)</title><rect x="4.2103%" y="596" width="3.6088%" height="15" fill="rgb(208,69,12)"/><text x="4.4603%" y="606.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (138 samples, 3.61%)</title><rect x="4.2103%" y="612" width="3.6088%" height="15" fill="rgb(235,93,37)"/><text x="4.4603%" y="622.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (138 samples, 3.61%)</title><rect x="4.2103%" y="628" width="3.6088%" height="15" fill="rgb(213,116,39)"/><text x="4.4603%" y="638.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (138 samples, 3.61%)</title><rect x="4.2103%" y="644" width="3.6088%" height="15" fill="rgb(222,207,29)"/><text x="4.4603%" y="654.50">_cal..</text></g><g><title>&lt;module&gt; (FIAT/__init__.py:8) (135 samples, 3.53%)</title><rect x="4.2887%" y="660" width="3.5303%" height="15" fill="rgb(206,96,30)"/><text x="4.5387%" y="670.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (135 samples, 3.53%)</title><rect x="4.2887%" y="676" width="3.5303%" height="15" fill="rgb(218,138,4)"/><text x="4.5387%" y="686.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (135 samples, 3.53%)</title><rect x="4.2887%" y="692" width="3.5303%" height="15" fill="rgb(250,191,14)"/><text x="4.5387%" y="702.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (135 samples, 3.53%)</title><rect x="4.2887%" y="708" width="3.5303%" height="15" fill="rgb(239,60,40)"/><text x="4.5387%" y="718.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (135 samples, 3.53%)</title><rect x="4.2887%" y="724" width="3.5303%" height="15" fill="rgb(206,27,48)"/><text x="4.5387%" y="734.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (135 samples, 3.53%)</title><rect x="4.2887%" y="740" width="3.5303%" height="15" fill="rgb(225,35,8)"/><text x="4.5387%" y="750.50">_ca..</text></g><g><title>&lt;module&gt; (FIAT/finite_element.py:13) (135 samples, 3.53%)</title><rect x="4.2887%" y="756" width="3.5303%" height="15" fill="rgb(250,213,24)"/><text x="4.5387%" y="766.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (135 samples, 3.53%)</title><rect x="4.2887%" y="772" width="3.5303%" height="15" fill="rgb(247,123,22)"/><text x="4.5387%" y="782.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (135 samples, 3.53%)</title><rect x="4.2887%" y="788" width="3.5303%" height="15" fill="rgb(231,138,38)"/><text x="4.5387%" y="798.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (135 samples, 3.53%)</title><rect x="4.2887%" y="804" width="3.5303%" height="15" fill="rgb(231,145,46)"/><text x="4.5387%" y="814.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (135 samples, 3.53%)</title><rect x="4.2887%" y="820" width="3.5303%" height="15" fill="rgb(251,118,11)"/><text x="4.5387%" y="830.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (135 samples, 3.53%)</title><rect x="4.2887%" y="836" width="3.5303%" height="15" fill="rgb(217,147,25)"/><text x="4.5387%" y="846.50">_ca..</text></g><g><title>&lt;module&gt; (FIAT/polynomial_set.py:19) (135 samples, 3.53%)</title><rect x="4.2887%" y="852" width="3.5303%" height="15" fill="rgb(247,81,37)"/><text x="4.5387%" y="862.50">&lt;mo..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1023) (135 samples, 3.53%)</title><rect x="4.2887%" y="868" width="3.5303%" height="15" fill="rgb(209,12,38)"/><text x="4.5387%" y="878.50">_ha..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (135 samples, 3.53%)</title><rect x="4.2887%" y="884" width="3.5303%" height="15" fill="rgb(227,1,9)"/><text x="4.5387%" y="894.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (135 samples, 3.53%)</title><rect x="4.2887%" y="900" width="3.5303%" height="15" fill="rgb(248,47,43)"/><text x="4.5387%" y="910.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (135 samples, 3.53%)</title><rect x="4.2887%" y="916" width="3.5303%" height="15" fill="rgb(221,10,30)"/><text x="4.5387%" y="926.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (135 samples, 3.53%)</title><rect x="4.2887%" y="932" width="3.5303%" height="15" fill="rgb(210,229,1)"/><text x="4.5387%" y="942.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (135 samples, 3.53%)</title><rect x="4.2887%" y="948" width="3.5303%" height="15" fill="rgb(222,148,37)"/><text x="4.5387%" y="958.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (135 samples, 3.53%)</title><rect x="4.2887%" y="964" width="3.5303%" height="15" fill="rgb(234,67,33)"/><text x="4.5387%" y="974.50">_ca..</text></g><g><title>&lt;module&gt; (FIAT/expansions.py:12) (135 samples, 3.53%)</title><rect x="4.2887%" y="980" width="3.5303%" height="15" fill="rgb(247,98,35)"/><text x="4.5387%" y="990.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (135 samples, 3.53%)</title><rect x="4.2887%" y="996" width="3.5303%" height="15" fill="rgb(247,138,52)"/><text x="4.5387%" y="1006.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (135 samples, 3.53%)</title><rect x="4.2887%" y="1012" width="3.5303%" height="15" fill="rgb(213,79,30)"/><text x="4.5387%" y="1022.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (135 samples, 3.53%)</title><rect x="4.2887%" y="1028" width="3.5303%" height="15" fill="rgb(246,177,23)"/><text x="4.5387%" y="1038.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (135 samples, 3.53%)</title><rect x="4.2887%" y="1044" width="3.5303%" height="15" fill="rgb(230,62,27)"/><text x="4.5387%" y="1054.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (135 samples, 3.53%)</title><rect x="4.2887%" y="1060" width="3.5303%" height="15" fill="rgb(216,154,8)"/><text x="4.5387%" y="1070.50">_ca..</text></g><g><title>&lt;module&gt; (sympy/__init__.py:72) (46 samples, 1.20%)</title><rect x="6.6161%" y="1076" width="1.2029%" height="15" fill="rgb(244,35,45)"/><text x="6.8661%" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (46 samples, 1.20%)</title><rect x="6.6161%" y="1092" width="1.2029%" height="15" fill="rgb(251,115,12)"/><text x="6.8661%" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (46 samples, 1.20%)</title><rect x="6.6161%" y="1108" width="1.2029%" height="15" fill="rgb(240,54,50)"/><text x="6.8661%" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (46 samples, 1.20%)</title><rect x="6.6161%" y="1124" width="1.2029%" height="15" fill="rgb(233,84,52)"/><text x="6.8661%" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (46 samples, 1.20%)</title><rect x="6.6161%" y="1140" width="1.2029%" height="15" fill="rgb(207,117,47)"/><text x="6.8661%" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (46 samples, 1.20%)</title><rect x="6.6161%" y="1156" width="1.2029%" height="15" fill="rgb(249,43,39)"/><text x="6.8661%" y="1166.50"></text></g><g><title>&lt;module&gt; (firedrake/assemble_expressions.py:15) (157 samples, 4.11%)</title><rect x="4.1841%" y="372" width="4.1056%" height="15" fill="rgb(209,38,44)"/><text x="4.4341%" y="382.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (157 samples, 4.11%)</title><rect x="4.1841%" y="388" width="4.1056%" height="15" fill="rgb(236,212,23)"/><text x="4.4341%" y="398.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (156 samples, 4.08%)</title><rect x="4.2103%" y="404" width="4.0795%" height="15" fill="rgb(242,79,21)"/><text x="4.4603%" y="414.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (156 samples, 4.08%)</title><rect x="4.2103%" y="420" width="4.0795%" height="15" fill="rgb(211,96,35)"/><text x="4.4603%" y="430.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (156 samples, 4.08%)</title><rect x="4.2103%" y="436" width="4.0795%" height="15" fill="rgb(253,215,40)"/><text x="4.4603%" y="446.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (156 samples, 4.08%)</title><rect x="4.2103%" y="452" width="4.0795%" height="15" fill="rgb(211,81,21)"/><text x="4.4603%" y="462.50">_cal..</text></g><g><title>&lt;module&gt; (tsfc/__init__.py:1) (156 samples, 4.08%)</title><rect x="4.2103%" y="468" width="4.0795%" height="15" fill="rgb(208,190,38)"/><text x="4.4603%" y="478.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (156 samples, 4.08%)</title><rect x="4.2103%" y="484" width="4.0795%" height="15" fill="rgb(235,213,38)"/><text x="4.4603%" y="494.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (156 samples, 4.08%)</title><rect x="4.2103%" y="500" width="4.0795%" height="15" fill="rgb(237,122,38)"/><text x="4.4603%" y="510.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (156 samples, 4.08%)</title><rect x="4.2103%" y="516" width="4.0795%" height="15" fill="rgb(244,218,35)"/><text x="4.4603%" y="526.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (156 samples, 4.08%)</title><rect x="4.2103%" y="532" width="4.0795%" height="15" fill="rgb(240,68,47)"/><text x="4.4603%" y="542.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (156 samples, 4.08%)</title><rect x="4.2103%" y="548" width="4.0795%" height="15" fill="rgb(210,16,53)"/><text x="4.4603%" y="558.50">_cal..</text></g><g><title>&lt;module&gt; (firedrake/__init__.py:57) (175 samples, 4.58%)</title><rect x="4.1318%" y="148" width="4.5764%" height="15" fill="rgb(235,124,12)"/><text x="4.3818%" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (175 samples, 4.58%)</title><rect x="4.1318%" y="164" width="4.5764%" height="15" fill="rgb(224,169,11)"/><text x="4.3818%" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (175 samples, 4.58%)</title><rect x="4.1318%" y="180" width="4.5764%" height="15" fill="rgb(250,166,2)"/><text x="4.3818%" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (175 samples, 4.58%)</title><rect x="4.1318%" y="196" width="4.5764%" height="15" fill="rgb(242,216,29)"/><text x="4.3818%" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (173 samples, 4.52%)</title><rect x="4.1841%" y="212" width="4.5241%" height="15" fill="rgb(230,116,27)"/><text x="4.4341%" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (173 samples, 4.52%)</title><rect x="4.1841%" y="228" width="4.5241%" height="15" fill="rgb(228,99,48)"/><text x="4.4341%" y="238.50">_call..</text></g><g><title>&lt;module&gt; (firedrake/assemble.py:10) (173 samples, 4.52%)</title><rect x="4.1841%" y="244" width="4.5241%" height="15" fill="rgb(253,11,6)"/><text x="4.4341%" y="254.50">&lt;modu..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1023) (173 samples, 4.52%)</title><rect x="4.1841%" y="260" width="4.5241%" height="15" fill="rgb(247,143,39)"/><text x="4.4341%" y="270.50">_hand..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (173 samples, 4.52%)</title><rect x="4.1841%" y="276" width="4.5241%" height="15" fill="rgb(236,97,10)"/><text x="4.4341%" y="286.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (173 samples, 4.52%)</title><rect x="4.1841%" y="292" width="4.5241%" height="15" fill="rgb(233,208,19)"/><text x="4.4341%" y="302.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (173 samples, 4.52%)</title><rect x="4.1841%" y="308" width="4.5241%" height="15" fill="rgb(216,164,2)"/><text x="4.4341%" y="318.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (173 samples, 4.52%)</title><rect x="4.1841%" y="324" width="4.5241%" height="15" fill="rgb(220,129,5)"/><text x="4.4341%" y="334.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (173 samples, 4.52%)</title><rect x="4.1841%" y="340" width="4.5241%" height="15" fill="rgb(242,17,10)"/><text x="4.4341%" y="350.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (173 samples, 4.52%)</title><rect x="4.1841%" y="356" width="4.5241%" height="15" fill="rgb(242,107,0)"/><text x="4.4341%" y="366.50">_call..</text></g><g><title>&lt;module&gt; (firedrake/__init__.py:79) (71 samples, 1.86%)</title><rect x="9.4927%" y="148" width="1.8567%" height="15" fill="rgb(251,28,31)"/><text x="9.7427%" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (71 samples, 1.86%)</title><rect x="9.4927%" y="164" width="1.8567%" height="15" fill="rgb(233,223,10)"/><text x="9.7427%" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (71 samples, 1.86%)</title><rect x="9.4927%" y="180" width="1.8567%" height="15" fill="rgb(215,21,27)"/><text x="9.7427%" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (71 samples, 1.86%)</title><rect x="9.4927%" y="196" width="1.8567%" height="15" fill="rgb(232,23,21)"/><text x="9.7427%" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (71 samples, 1.86%)</title><rect x="9.4927%" y="212" width="1.8567%" height="15" fill="rgb(244,5,23)"/><text x="9.7427%" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (71 samples, 1.86%)</title><rect x="9.4927%" y="228" width="1.8567%" height="15" fill="rgb(226,81,46)"/><text x="9.7427%" y="238.50">_..</text></g><g><title>&lt;module&gt; (firedrake/plot.py:3) (71 samples, 1.86%)</title><rect x="9.4927%" y="244" width="1.8567%" height="15" fill="rgb(247,70,30)"/><text x="9.7427%" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (71 samples, 1.86%)</title><rect x="9.4927%" y="260" width="1.8567%" height="15" fill="rgb(212,68,19)"/><text x="9.7427%" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (54 samples, 1.41%)</title><rect x="9.9372%" y="276" width="1.4121%" height="15" fill="rgb(240,187,13)"/><text x="10.1872%" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (54 samples, 1.41%)</title><rect x="9.9372%" y="292" width="1.4121%" height="15" fill="rgb(223,113,26)"/><text x="10.1872%" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (54 samples, 1.41%)</title><rect x="9.9372%" y="308" width="1.4121%" height="15" fill="rgb(206,192,2)"/><text x="10.1872%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (54 samples, 1.41%)</title><rect x="9.9372%" y="324" width="1.4121%" height="15" fill="rgb(241,108,4)"/><text x="10.1872%" y="334.50"></text></g><g><title>&lt;module&gt; (solve.py:1) (437 samples, 11.43%)</title><rect x="0.0000%" y="52" width="11.4278%" height="15" fill="rgb(247,173,49)"/><text x="0.2500%" y="62.50">&lt;module&gt; (solve.p..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (437 samples, 11.43%)</title><rect x="0.0000%" y="68" width="11.4278%" height="15" fill="rgb(224,114,35)"/><text x="0.2500%" y="78.50">_find_and_load (&lt;..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (437 samples, 11.43%)</title><rect x="0.0000%" y="84" width="11.4278%" height="15" fill="rgb(245,159,27)"/><text x="0.2500%" y="94.50">_find_and_load_un..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (437 samples, 11.43%)</title><rect x="0.0000%" y="100" width="11.4278%" height="15" fill="rgb(245,172,44)"/><text x="0.2500%" y="110.50">_load_unlocked (&lt;..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (437 samples, 11.43%)</title><rect x="0.0000%" y="116" width="11.4278%" height="15" fill="rgb(236,23,11)"/><text x="0.2500%" y="126.50">exec_module (&lt;fro..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (437 samples, 11.43%)</title><rect x="0.0000%" y="132" width="11.4278%" height="15" fill="rgb(205,117,38)"/><text x="0.2500%" y="142.50">_call_with_frames..</text></g><g><title>_tabulate_dpts (FIAT/expansions.py:85) (42 samples, 1.10%)</title><rect x="12.6046%" y="260" width="1.0983%" height="15" fill="rgb(237,72,25)"/><text x="12.8546%" y="270.50"></text></g><g><title>__new__ (sympy/core/function.py:1468) (39 samples, 1.02%)</title><rect x="13.8337%" y="484" width="1.0199%" height="15" fill="rgb(244,70,9)"/><text x="14.0837%" y="494.50"></text></g><g><title>_dispatch_eval_derivative_n_times (sympy/core/function.py:1931) (39 samples, 1.02%)</title><rect x="13.8337%" y="500" width="1.0199%" height="15" fill="rgb(217,125,39)"/><text x="14.0837%" y="510.50"></text></g><g><title>wrapper (sympy/core/cache.py:72) (39 samples, 1.02%)</title><rect x="13.8337%" y="516" width="1.0199%" height="15" fill="rgb(235,36,10)"/><text x="14.0837%" y="526.50"></text></g><g><title>_eval_derivative_n_times (sympy/core/basic.py:1705) (62 samples, 1.62%)</title><rect x="13.8337%" y="388" width="1.6213%" height="15" fill="rgb(251,123,47)"/><text x="14.0837%" y="398.50"></text></g><g><title>wrapper (sympy/core/cache.py:72) (62 samples, 1.62%)</title><rect x="13.8337%" y="404" width="1.6213%" height="15" fill="rgb(221,13,13)"/><text x="14.0837%" y="414.50"></text></g><g><title>_eval_derivative (sympy/core/add.py:403) (62 samples, 1.62%)</title><rect x="13.8337%" y="420" width="1.6213%" height="15" fill="rgb(238,131,9)"/><text x="14.0837%" y="430.50"></text></g><g><title>&lt;listcomp&gt; (sympy/core/add.py:403) (62 samples, 1.62%)</title><rect x="13.8337%" y="436" width="1.6213%" height="15" fill="rgb(211,50,8)"/><text x="14.0837%" y="446.50"></text></g><g><title>diff (sympy/core/expr.py:3474) (62 samples, 1.62%)</title><rect x="13.8337%" y="452" width="1.6213%" height="15" fill="rgb(245,182,24)"/><text x="14.0837%" y="462.50"></text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (62 samples, 1.62%)</title><rect x="13.8337%" y="468" width="1.6213%" height="15" fill="rgb(242,14,37)"/><text x="14.0837%" y="478.50"></text></g><g><title>__new__ (sympy/core/function.py:1468) (67 samples, 1.75%)</title><rect x="13.8337%" y="356" width="1.7521%" height="15" fill="rgb(246,228,12)"/><text x="14.0837%" y="366.50"></text></g><g><title>_dispatch_eval_derivative_n_times (sympy/core/function.py:1931) (67 samples, 1.75%)</title><rect x="13.8337%" y="372" width="1.7521%" height="15" fill="rgb(213,55,15)"/><text x="14.0837%" y="382.50"></text></g><g><title>diff (sympy/core/function.py:2492) (84 samples, 2.20%)</title><rect x="13.8337%" y="308" width="2.1967%" height="15" fill="rgb(209,9,3)"/><text x="14.0837%" y="318.50">d..</text></g><g><title>diff (sympy/core/expr.py:3474) (84 samples, 2.20%)</title><rect x="13.8337%" y="324" width="2.1967%" height="15" fill="rgb(230,59,30)"/><text x="14.0837%" y="334.50">d..</text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (84 samples, 2.20%)</title><rect x="13.8337%" y="340" width="2.1967%" height="15" fill="rgb(209,121,21)"/><text x="14.0837%" y="350.50">_..</text></g><g><title>form_derivative (FIAT/expansions.py:37) (100 samples, 2.62%)</title><rect x="13.8337%" y="276" width="2.6151%" height="15" fill="rgb(220,109,13)"/><text x="14.0837%" y="286.50">fo..</text></g><g><title>&lt;listcomp&gt; (FIAT/expansions.py:37) (100 samples, 2.62%)</title><rect x="13.8337%" y="292" width="2.6151%" height="15" fill="rgb(232,18,1)"/><text x="14.0837%" y="302.50">&lt;l..</text></g><g><title>__new__ (sympy/core/function.py:1468) (53 samples, 1.39%)</title><rect x="16.5010%" y="500" width="1.3860%" height="15" fill="rgb(215,41,42)"/><text x="16.7510%" y="510.50"></text></g><g><title>_dispatch_eval_derivative_n_times (sympy/core/function.py:1931) (53 samples, 1.39%)</title><rect x="16.5010%" y="516" width="1.3860%" height="15" fill="rgb(224,123,36)"/><text x="16.7510%" y="526.50"></text></g><g><title>wrapper (sympy/core/cache.py:72) (53 samples, 1.39%)</title><rect x="16.5010%" y="532" width="1.3860%" height="15" fill="rgb(240,125,3)"/><text x="16.7510%" y="542.50"></text></g><g><title>_eval_derivative_n_times (sympy/core/mul.py:933) (52 samples, 1.36%)</title><rect x="16.5272%" y="548" width="1.3598%" height="15" fill="rgb(205,98,50)"/><text x="16.7772%" y="558.50"></text></g><g><title>_eval_derivative_n_times (sympy/core/basic.py:1705) (58 samples, 1.52%)</title><rect x="16.4749%" y="404" width="1.5167%" height="15" fill="rgb(205,185,37)"/><text x="16.7249%" y="414.50"></text></g><g><title>wrapper (sympy/core/cache.py:72) (58 samples, 1.52%)</title><rect x="16.4749%" y="420" width="1.5167%" height="15" fill="rgb(238,207,15)"/><text x="16.7249%" y="430.50"></text></g><g><title>_eval_derivative (sympy/core/add.py:403) (58 samples, 1.52%)</title><rect x="16.4749%" y="436" width="1.5167%" height="15" fill="rgb(213,199,42)"/><text x="16.7249%" y="446.50"></text></g><g><title>&lt;listcomp&gt; (sympy/core/add.py:403) (58 samples, 1.52%)</title><rect x="16.4749%" y="452" width="1.5167%" height="15" fill="rgb(235,201,11)"/><text x="16.7249%" y="462.50"></text></g><g><title>diff (sympy/core/expr.py:3474) (58 samples, 1.52%)</title><rect x="16.4749%" y="468" width="1.5167%" height="15" fill="rgb(207,46,11)"/><text x="16.7249%" y="478.50"></text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (58 samples, 1.52%)</title><rect x="16.4749%" y="484" width="1.5167%" height="15" fill="rgb(241,35,35)"/><text x="16.7249%" y="494.50"></text></g><g><title>__new__ (sympy/core/function.py:1468) (60 samples, 1.57%)</title><rect x="16.4749%" y="372" width="1.5690%" height="15" fill="rgb(243,32,47)"/><text x="16.7249%" y="382.50"></text></g><g><title>_dispatch_eval_derivative_n_times (sympy/core/function.py:1931) (60 samples, 1.57%)</title><rect x="16.4749%" y="388" width="1.5690%" height="15" fill="rgb(247,202,23)"/><text x="16.7249%" y="398.50"></text></g><g><title>&lt;module&gt; (solve.py:16) (236 samples, 6.17%)</title><rect x="12.0816%" y="52" width="6.1715%" height="15" fill="rgb(219,102,11)"/><text x="12.3316%" y="62.50">&lt;module&gt;..</text></g><g><title>FunctionSpace (&lt;decorator-gen-24&gt;:2) (236 samples, 6.17%)</title><rect x="12.0816%" y="68" width="6.1715%" height="15" fill="rgb(243,110,44)"/><text x="12.3316%" y="78.50">Function..</text></g><g><title>wrapper (pyop2/profiling.py:60) (236 samples, 6.17%)</title><rect x="12.0816%" y="84" width="6.1715%" height="15" fill="rgb(222,74,54)"/><text x="12.3316%" y="94.50">wrapper ..</text></g><g><title>FunctionSpace (firedrake/functionspace.py:140) (236 samples, 6.17%)</title><rect x="12.0816%" y="100" width="6.1715%" height="15" fill="rgb(216,99,12)"/><text x="12.3316%" y="110.50">Function..</text></g><g><title>__init__ (firedrake/functionspaceimpl.py:277) (236 samples, 6.17%)</title><rect x="12.0816%" y="116" width="6.1715%" height="15" fill="rgb(226,22,26)"/><text x="12.3316%" y="126.50">__init__..</text></g><g><title>create_element (tsfc/finatinterface.py:278) (236 samples, 6.17%)</title><rect x="12.0816%" y="132" width="6.1715%" height="15" fill="rgb(217,163,10)"/><text x="12.3316%" y="142.50">create_e..</text></g><g><title>_create_element (tsfc/finatinterface.py:305) (236 samples, 6.17%)</title><rect x="12.0816%" y="148" width="6.1715%" height="15" fill="rgb(213,25,53)"/><text x="12.3316%" y="158.50">_create_..</text></g><g><title>wrapper (functools.py:807) (236 samples, 6.17%)</title><rect x="12.0816%" y="164" width="6.1715%" height="15" fill="rgb(252,105,26)"/><text x="12.3316%" y="174.50">wrapper ..</text></g><g><title>convert_finiteelement (tsfc/finatinterface.py:177) (236 samples, 6.17%)</title><rect x="12.0816%" y="180" width="6.1715%" height="15" fill="rgb(220,39,43)"/><text x="12.3316%" y="190.50">convert_..</text></g><g><title>__init__ (finat/fiat_elements.py:333) (236 samples, 6.17%)</title><rect x="12.0816%" y="196" width="6.1715%" height="15" fill="rgb(229,68,48)"/><text x="12.3316%" y="206.50">__init__..</text></g><g><title>__init__ (FIAT/lagrange.py:43) (236 samples, 6.17%)</title><rect x="12.0816%" y="212" width="6.1715%" height="15" fill="rgb(252,8,32)"/><text x="12.3316%" y="222.50">__init__..</text></g><g><title>__init__ (FIAT/polynomial_set.py:168) (236 samples, 6.17%)</title><rect x="12.0816%" y="228" width="6.1715%" height="15" fill="rgb(223,20,43)"/><text x="12.3316%" y="238.50">__init__..</text></g><g><title>tabulate_derivatives (FIAT/expansions.py:277) (236 samples, 6.17%)</title><rect x="12.0816%" y="244" width="6.1715%" height="15" fill="rgb(229,81,49)"/><text x="12.3316%" y="254.50">tabulate..</text></g><g><title>_tabulate_dpts (FIAT/expansions.py:91) (169 samples, 4.42%)</title><rect x="13.8337%" y="260" width="4.4195%" height="15" fill="rgb(236,28,36)"/><text x="14.0837%" y="270.50">_tabu..</text></g><g><title>form_derivative (FIAT/expansions.py:43) (69 samples, 1.80%)</title><rect x="16.4487%" y="276" width="1.8044%" height="15" fill="rgb(249,185,26)"/><text x="16.6987%" y="286.50">f..</text></g><g><title>form_derivative (FIAT/expansions.py:37) (69 samples, 1.80%)</title><rect x="16.4487%" y="292" width="1.8044%" height="15" fill="rgb(249,174,33)"/><text x="16.6987%" y="302.50">f..</text></g><g><title>&lt;listcomp&gt; (FIAT/expansions.py:37) (69 samples, 1.80%)</title><rect x="16.4487%" y="308" width="1.8044%" height="15" fill="rgb(233,201,37)"/><text x="16.6987%" y="318.50">&lt;..</text></g><g><title>diff (sympy/core/function.py:2492) (69 samples, 1.80%)</title><rect x="16.4487%" y="324" width="1.8044%" height="15" fill="rgb(221,78,26)"/><text x="16.6987%" y="334.50">d..</text></g><g><title>diff (sympy/core/expr.py:3474) (69 samples, 1.80%)</title><rect x="16.4487%" y="340" width="1.8044%" height="15" fill="rgb(250,127,30)"/><text x="16.6987%" y="350.50">d..</text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (69 samples, 1.80%)</title><rect x="16.4487%" y="356" width="1.8044%" height="15" fill="rgb(230,49,44)"/><text x="16.6987%" y="366.50">_..</text></g><g><title>map_integrands (ufl/algorithms/map_integrands.py:28) (43 samples, 1.12%)</title><rect x="20.6328%" y="212" width="1.1245%" height="15" fill="rgb(229,67,23)"/><text x="20.8828%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (ufl/algorithms/map_integrands.py:28) (42 samples, 1.10%)</title><rect x="20.6590%" y="228" width="1.0983%" height="15" fill="rgb(249,83,47)"/><text x="20.9090%" y="238.50"></text></g><g><title>map_integrands (ufl/algorithms/map_integrands.py:35) (42 samples, 1.10%)</title><rect x="20.6590%" y="244" width="1.0983%" height="15" fill="rgb(215,43,3)"/><text x="20.9090%" y="254.50"></text></g><g><title>&lt;lambda&gt; (ufl/algorithms/map_integrands.py:46) (42 samples, 1.10%)</title><rect x="20.6590%" y="260" width="1.0983%" height="15" fill="rgb(238,154,13)"/><text x="20.9090%" y="270.50"></text></g><g><title>map_expr_dag (ufl/corealg/map_dag.py:26) (42 samples, 1.10%)</title><rect x="20.6590%" y="276" width="1.0983%" height="15" fill="rgb(219,56,2)"/><text x="20.9090%" y="286.50"></text></g><g><title>expand_derivatives (ufl/algorithms/ad.py:31) (63 samples, 1.65%)</title><rect x="20.3452%" y="164" width="1.6475%" height="15" fill="rgb(233,0,4)"/><text x="20.5952%" y="174.50"></text></g><g><title>apply_algebra_lowering (ufl/algorithms/apply_algebra_lowering.py:175) (63 samples, 1.65%)</title><rect x="20.3452%" y="180" width="1.6475%" height="15" fill="rgb(235,30,7)"/><text x="20.5952%" y="190.50"></text></g><g><title>map_integrand_dags (ufl/algorithms/map_integrands.py:47) (53 samples, 1.39%)</title><rect x="20.6067%" y="196" width="1.3860%" height="15" fill="rgb(250,79,13)"/><text x="20.8567%" y="206.50"></text></g><g><title>map_integrands (ufl/algorithms/map_integrands.py:28) (49 samples, 1.28%)</title><rect x="22.1234%" y="212" width="1.2814%" height="15" fill="rgb(211,146,34)"/><text x="22.3734%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (ufl/algorithms/map_integrands.py:28) (49 samples, 1.28%)</title><rect x="22.1234%" y="228" width="1.2814%" height="15" fill="rgb(228,22,38)"/><text x="22.3734%" y="238.50"></text></g><g><title>map_integrands (ufl/algorithms/map_integrands.py:35) (48 samples, 1.26%)</title><rect x="22.1496%" y="244" width="1.2552%" height="15" fill="rgb(235,168,5)"/><text x="22.3996%" y="254.50"></text></g><g><title>&lt;lambda&gt; (ufl/algorithms/map_integrands.py:46) (48 samples, 1.26%)</title><rect x="22.1496%" y="260" width="1.2552%" height="15" fill="rgb(221,155,16)"/><text x="22.3996%" y="270.50"></text></g><g><title>map_expr_dag (ufl/corealg/map_dag.py:26) (48 samples, 1.26%)</title><rect x="22.1496%" y="276" width="1.2552%" height="15" fill="rgb(215,215,53)"/><text x="22.3996%" y="286.50"></text></g><g><title>action (ufl/formoperators.py:109) (122 samples, 3.19%)</title><rect x="20.3452%" y="148" width="3.1904%" height="15" fill="rgb(223,4,10)"/><text x="20.5952%" y="158.50">act..</text></g><g><title>expand_derivatives (ufl/algorithms/ad.py:34) (59 samples, 1.54%)</title><rect x="21.9927%" y="164" width="1.5429%" height="15" fill="rgb(234,103,6)"/><text x="22.2427%" y="174.50"></text></g><g><title>apply_derivatives (ufl/algorithms/apply_derivatives.py:1095) (54 samples, 1.41%)</title><rect x="22.1234%" y="180" width="1.4121%" height="15" fill="rgb(227,97,0)"/><text x="22.3734%" y="190.50"></text></g><g><title>map_integrand_dags (ufl/algorithms/map_integrands.py:47) (54 samples, 1.41%)</title><rect x="22.1234%" y="196" width="1.4121%" height="15" fill="rgb(234,150,53)"/><text x="22.3734%" y="206.50"></text></g><g><title>__init__ (firedrake/variational_solver.py:308) (203 samples, 5.31%)</title><rect x="19.7699%" y="116" width="5.3086%" height="15" fill="rgb(228,201,54)"/><text x="20.0199%" y="126.50">__init..</text></g><g><title>action (firedrake/ufl_expr.py:203) (182 samples, 4.76%)</title><rect x="20.3190%" y="132" width="4.7594%" height="15" fill="rgb(222,22,37)"/><text x="20.5690%" y="142.50">action..</text></g><g><title>action (ufl/formoperators.py:110) (59 samples, 1.54%)</title><rect x="23.5356%" y="148" width="1.5429%" height="15" fill="rgb(237,53,32)"/><text x="23.7856%" y="158.50"></text></g><g><title>compute_form_action (ufl/algorithms/formtransformations.py:418) (48 samples, 1.26%)</title><rect x="23.8232%" y="164" width="1.2552%" height="15" fill="rgb(233,25,53)"/><text x="24.0732%" y="174.50"></text></g><g><title>replace (ufl/algorithms/replace.py:61) (46 samples, 1.20%)</title><rect x="23.8755%" y="180" width="1.2029%" height="15" fill="rgb(210,40,34)"/><text x="24.1255%" y="190.50"></text></g><g><title>map_integrand_dags (ufl/algorithms/map_integrands.py:47) (40 samples, 1.05%)</title><rect x="24.0324%" y="196" width="1.0460%" height="15" fill="rgb(241,220,44)"/><text x="24.2824%" y="206.50"></text></g><g><title>_solve_varproblem (firedrake/solving.py:153) (219 samples, 5.73%)</title><rect x="19.7699%" y="100" width="5.7270%" height="15" fill="rgb(235,28,35)"/><text x="20.0199%" y="110.50">_solve_..</text></g><g><title>inflate (libz.so.1.2.11) (43 samples, 1.12%)</title><rect x="29.1056%" y="324" width="1.1245%" height="15" fill="rgb(210,56,17)"/><text x="29.3556%" y="334.50"></text></g><g><title>read (gzip.py:471) (49 samples, 1.28%)</title><rect x="28.9749%" y="308" width="1.2814%" height="15" fill="rgb(224,130,29)"/><text x="29.2249%" y="318.50"></text></g><g><title>_read_from_disk (firedrake/tsfc_interface.py:80) (110 samples, 2.88%)</title><rect x="28.1904%" y="276" width="2.8766%" height="15" fill="rgb(235,212,8)"/><text x="28.4404%" y="286.50">_r..</text></g><g><title>read (gzip.py:276) (109 samples, 2.85%)</title><rect x="28.2165%" y="292" width="2.8504%" height="15" fill="rgb(223,33,50)"/><text x="28.4665%" y="302.50">re..</text></g><g><title>get_or_register_dtype (loopy/target/c/__init__.py:56) (51 samples, 1.33%)</title><rect x="38.3107%" y="324" width="1.3337%" height="15" fill="rgb(219,149,13)"/><text x="38.5607%" y="334.50"></text></g><g><title>get_or_register_dtype (loopy/target/c/compyte/dtypes.py:93) (41 samples, 1.07%)</title><rect x="38.5722%" y="340" width="1.0722%" height="15" fill="rgb(250,156,29)"/><text x="38.8222%" y="350.50"></text></g><g><title>get_dtype_registry (loopy/target/c/__init__.py:1151) (42 samples, 1.10%)</title><rect x="39.6967%" y="340" width="1.0983%" height="15" fill="rgb(216,193,19)"/><text x="39.9467%" y="350.50"></text></g><g><title>wrapper (pytools/__init__.py:684) (56 samples, 1.46%)</title><rect x="39.6705%" y="324" width="1.4644%" height="15" fill="rgb(216,135,14)"/><text x="39.9205%" y="334.50"></text></g><g><title>__setstate__ (loopy/types.py:116) (135 samples, 3.53%)</title><rect x="37.6308%" y="292" width="3.5303%" height="15" fill="rgb(241,47,5)"/><text x="37.8808%" y="302.50">__s..</text></g><g><title>get_or_register_dtype (loopy/target/c/__init__.py:370) (126 samples, 3.29%)</title><rect x="37.8661%" y="308" width="3.2950%" height="15" fill="rgb(233,42,35)"/><text x="38.1161%" y="318.50">get..</text></g><g><title>obj_read (isl_input.c:2832) (104 samples, 2.72%)</title><rect x="42.7824%" y="452" width="2.7197%" height="15" fill="rgb(231,13,6)"/><text x="43.0324%" y="462.50">ob..</text></g><g><title>obj_read_disjuncts (isl_input.c:2731) (104 samples, 2.72%)</title><rect x="42.7824%" y="468" width="2.7197%" height="15" fill="rgb(207,181,40)"/><text x="43.0324%" y="478.50">ob..</text></g><g><title>obj_read_body (isl_input.c:2555) (72 samples, 1.88%)</title><rect x="43.6192%" y="484" width="1.8828%" height="15" fill="rgb(254,173,49)"/><text x="43.8692%" y="494.50">o..</text></g><g><title>read_formula (isl_input.c:1963) (72 samples, 1.88%)</title><rect x="43.6192%" y="500" width="1.8828%" height="15" fill="rgb(221,1,38)"/><text x="43.8692%" y="510.50">r..</text></g><g><title>read_disjuncts (isl_input.c:1922) (72 samples, 1.88%)</title><rect x="43.6192%" y="516" width="1.8828%" height="15" fill="rgb(206,124,46)"/><text x="43.8692%" y="526.50">r..</text></g><g><title>read_disjuncts (isl_input.c:1925) (72 samples, 1.88%)</title><rect x="43.6192%" y="532" width="1.8828%" height="15" fill="rgb(249,21,11)"/><text x="43.8692%" y="542.50">r..</text></g><g><title>read_conjuncts (isl_input.c:1899) (72 samples, 1.88%)</title><rect x="43.6192%" y="548" width="1.8828%" height="15" fill="rgb(222,201,40)"/><text x="43.8692%" y="558.50">r..</text></g><g><title>read_conjunct (isl_input.c:1885) (71 samples, 1.86%)</title><rect x="43.6454%" y="564" width="1.8567%" height="15" fill="rgb(235,61,29)"/><text x="43.8954%" y="574.50">r..</text></g><g><title>isl_basic_set_read_from_str (isl_input.c:3048) (106 samples, 2.77%)</title><rect x="42.7563%" y="404" width="2.7720%" height="15" fill="rgb(219,207,3)"/><text x="43.0063%" y="414.50">is..</text></g><g><title>basic_set_read (isl_input.c:2993) (106 samples, 2.77%)</title><rect x="42.7563%" y="420" width="2.7720%" height="15" fill="rgb(222,56,46)"/><text x="43.0063%" y="430.50">ba..</text></g><g><title>basic_map_read (isl_input.c:2964) (106 samples, 2.77%)</title><rect x="42.7563%" y="436" width="2.7720%" height="15" fill="rgb(239,76,54)"/><text x="43.0063%" y="446.50">ba..</text></g><g><title>isl::basic_set_read_from_str (islpy/_isl.cpython-36m-x86_64-linux-gnu.so) (124 samples, 3.24%)</title><rect x="42.3117%" y="388" width="3.2427%" height="15" fill="rgb(231,124,27)"/><text x="42.5617%" y="398.50">isl..</text></g><g><title>pybind11::cpp_function::dispatcher (islpy/_isl.cpython-36m-x86_64-linux-gnu.so) (134 samples, 3.50%)</title><rect x="42.0764%" y="308" width="3.5042%" height="15" fill="rgb(249,195,6)"/><text x="42.3264%" y="318.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::object (*&amp;)(isl::ctx const&amp;, char*), pybind11::object, isl::ctx const&amp;, char*, pybind11::name, pybind11::scope, pybind11::sibling, pybind11::arg, pybind11::arg, char [100]&gt;(pybind11::object (*&amp;&amp;&amp;)(isl::ctx const&amp;, char*), pybind11::object (*)(isl::ctx const&amp;, char*), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, pybind11::arg, pybind11::arg, char [100])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (islpy/_isl.cpython-36m-x86_64-linux-gnu.so) (131 samples, 3.43%)</title><rect x="42.1548%" y="324" width="3.4257%" height="15" fill="rgb(237,174,47)"/><text x="42.4048%" y="334.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::object (*&amp;)(isl::ctx const&amp;, char*), pybind11::object, isl::ctx const&amp;, char*, pybind11::name, pybind11::scope, pybind11::sibling, pybind11::arg, pybind11::arg, char [100]&gt;(pybind11::object (*&amp;&amp;&amp;)(isl::ctx const&amp;, char*), pybind11::object (*)(isl::ctx const&amp;, char*), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, pybind11::arg, pybind11::arg, char [100])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (islpy/_isl.cpython-36m-x86_64-linux-gnu.so) (129 samples, 3.37%)</title><rect x="42.2071%" y="340" width="3.3734%" height="15" fill="rgb(206,201,31)"/><text x="42.4571%" y="350.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;isl::ctx const&amp;, char*&gt;::call&lt;pybind11::object, pybind11::detail::void_type, pybind11::object (*&amp;)(isl::ctx const&amp;, char*)&gt; &amp;&amp; (islpy/_isl.cpython-36m-x86_64-linux-gnu.so) (127 samples, 3.32%)</title><rect x="42.2594%" y="356" width="3.3211%" height="15" fill="rgb(231,57,52)"/><text x="42.5094%" y="366.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;isl::ctx const&amp;, char*&gt;::call_impl&lt;pybind11::object, pybind11::object (*&amp;)(isl::ctx const&amp;, char*), (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; &amp;&amp; (islpy/_isl.cpython-36m-x86_64-linux-gnu.so) (125 samples, 3.27%)</title><rect x="42.3117%" y="372" width="3.2688%" height="15" fill="rgb(248,177,22)"/><text x="42.5617%" y="382.50">pyb..</text></g><g><title>_read_from_str_wrapper (islpy/__init__.py:162) (136 samples, 3.56%)</title><rect x="42.0502%" y="292" width="3.5565%" height="15" fill="rgb(215,211,37)"/><text x="42.3002%" y="302.50">_rea..</text></g><g><title>compile_form (firedrake/tsfc_interface.py:229) (716 samples, 18.72%)</title><rect x="27.2751%" y="228" width="18.7238%" height="15" fill="rgb(241,128,51)"/><text x="27.5251%" y="238.50">compile_form (firedrake/tsfc_..</text></g><g><title>__new__ (pyop2/caching.py:197) (697 samples, 18.23%)</title><rect x="27.7720%" y="244" width="18.2270%" height="15" fill="rgb(227,165,31)"/><text x="28.0220%" y="254.50">__new__ (pyop2/caching.py:19..</text></g><g><title>_cache_lookup (firedrake/tsfc_interface.py:68) (694 samples, 18.15%)</title><rect x="27.8504%" y="260" width="18.1485%" height="15" fill="rgb(228,167,24)"/><text x="28.1004%" y="270.50">_cache_lookup (firedrake/tsf..</text></g><g><title>_read_from_disk (firedrake/tsfc_interface.py:90) (568 samples, 14.85%)</title><rect x="31.1454%" y="276" width="14.8536%" height="15" fill="rgb(228,143,12)"/><text x="31.3954%" y="286.50">_read_from_disk (firedr..</text></g><g><title>create_parloops (firedrake/assemble.py:520) (744 samples, 19.46%)</title><rect x="26.5952%" y="212" width="19.4561%" height="15" fill="rgb(249,149,8)"/><text x="26.8452%" y="222.50">create_parloops (firedrake/ass..</text></g><g><title>_assemble (firedrake/assemble.py:748) (784 samples, 20.50%)</title><rect x="26.5690%" y="196" width="20.5021%" height="15" fill="rgb(243,35,44)"/><text x="26.8190%" y="206.50">_assemble (firedrake/assemble.py..</text></g><g><title>__init__ (firedrake/solving_utils.py:237) (795 samples, 20.79%)</title><rect x="26.3337%" y="164" width="20.7897%" height="15" fill="rgb(246,89,9)"/><text x="26.5837%" y="174.50">__init__ (firedrake/solving_utils..</text></g><g><title>create_assembly_callable (firedrake/assemble.py:177) (791 samples, 20.69%)</title><rect x="26.4383%" y="180" width="20.6851%" height="15" fill="rgb(233,213,13)"/><text x="26.6883%" y="190.50">create_assembly_callable (firedra..</text></g><g><title>__init__ (firedrake/variational_solver.py:196) (816 samples, 21.34%)</title><rect x="25.8107%" y="148" width="21.3389%" height="15" fill="rgb(233,141,41)"/><text x="26.0607%" y="158.50">__init__ (firedrake/variational_so..</text></g><g><title>fill_with_zeros (pyop2/sparsity.pyx:231) (39 samples, 1.02%)</title><rect x="49.1893%" y="324" width="1.0199%" height="15" fill="rgb(239,167,4)"/><text x="49.4393%" y="334.50"></text></g><g><title>sparsity_CHKERR (pyop2/sparsity.pyx:86) (39 samples, 1.02%)</title><rect x="49.1893%" y="340" width="1.0199%" height="15" fill="rgb(209,217,16)"/><text x="49.4393%" y="350.50"></text></g><g><title>_init_block (pyop2/petsc_base.py:763) (55 samples, 1.44%)</title><rect x="48.8755%" y="292" width="1.4383%" height="15" fill="rgb(219,88,35)"/><text x="49.1255%" y="302.50"></text></g><g><title>fill_with_zeros (pyop2/sparsity.pyx:175) (55 samples, 1.44%)</title><rect x="48.8755%" y="308" width="1.4383%" height="15" fill="rgb(220,193,23)"/><text x="49.1255%" y="318.50"></text></g><g><title>set_jacobian (firedrake/solving_utils.py:301) (101 samples, 2.64%)</title><rect x="47.8033%" y="164" width="2.6412%" height="15" fill="rgb(230,90,52)"/><text x="48.0533%" y="174.50">se..</text></g><g><title>__get__ (pyop2/utils.py:62) (100 samples, 2.62%)</title><rect x="47.8295%" y="180" width="2.6151%" height="15" fill="rgb(252,106,19)"/><text x="48.0795%" y="190.50">__..</text></g><g><title>_jac (firedrake/solving_utils.py:507) (100 samples, 2.62%)</title><rect x="47.8295%" y="196" width="2.6151%" height="15" fill="rgb(206,74,20)"/><text x="48.0795%" y="206.50">_j..</text></g><g><title>allocate_matrix (firedrake/assemble.py:149) (100 samples, 2.62%)</title><rect x="47.8295%" y="212" width="2.6151%" height="15" fill="rgb(230,138,44)"/><text x="48.0795%" y="222.50">al..</text></g><g><title>get_matrix (firedrake/assemble.py:281) (86 samples, 2.25%)</title><rect x="48.1956%" y="228" width="2.2490%" height="15" fill="rgb(235,182,43)"/><text x="48.4456%" y="238.50">g..</text></g><g><title>__init__ (firedrake/matrix.py:99) (76 samples, 1.99%)</title><rect x="48.4571%" y="244" width="1.9874%" height="15" fill="rgb(242,16,51)"/><text x="48.7071%" y="254.50">_..</text></g><g><title>__init__ (pyop2/petsc_base.py:603) (71 samples, 1.86%)</title><rect x="48.5879%" y="260" width="1.8567%" height="15" fill="rgb(248,9,4)"/><text x="48.8379%" y="270.50">_..</text></g><g><title>_init (pyop2/petsc_base.py:628) (71 samples, 1.86%)</title><rect x="48.5879%" y="276" width="1.8567%" height="15" fill="rgb(210,31,22)"/><text x="48.8379%" y="286.50">_..</text></g><g><title>__init__ (firedrake/variational_solver.py:207) (102 samples, 2.67%)</title><rect x="47.8033%" y="148" width="2.6674%" height="15" fill="rgb(239,54,39)"/><text x="48.0533%" y="158.50">__..</text></g><g><title>SNESSetFromOptions (snes.c:1116) (49 samples, 1.28%)</title><rect x="50.7584%" y="228" width="1.2814%" height="15" fill="rgb(230,99,41)"/><text x="51.0084%" y="238.50"></text></g><g><title>set_from_options (firedrake/petsc.py:184) (57 samples, 1.49%)</title><rect x="50.6276%" y="164" width="1.4906%" height="15" fill="rgb(253,106,12)"/><text x="50.8776%" y="174.50"></text></g><g><title>setFromOptions (petsc4py.PETSc.c:191728) (57 samples, 1.49%)</title><rect x="50.6276%" y="180" width="1.4906%" height="15" fill="rgb(213,46,41)"/><text x="50.8776%" y="190.50"></text></g><g><title>setFromOptions (petsc4py.PETSc.c:191751) (57 samples, 1.49%)</title><rect x="50.6276%" y="196" width="1.4906%" height="15" fill="rgb(215,133,35)"/><text x="50.8776%" y="206.50"></text></g><g><title>PETSc_CHKERR (petsc4py.PETSc.c:10267) (57 samples, 1.49%)</title><rect x="50.6276%" y="212" width="1.4906%" height="15" fill="rgb(213,28,5)"/><text x="50.8776%" y="222.50"></text></g><g><title>wrapper (firedrake/adjoint/variational_solver.py:34) (1,022 samples, 26.73%)</title><rect x="25.5230%" y="132" width="26.7259%" height="15" fill="rgb(215,77,49)"/><text x="25.7730%" y="142.50">wrapper (firedrake/adjoint/variational_solv..</text></g><g><title>__init__ (firedrake/variational_solver.py:224) (65 samples, 1.70%)</title><rect x="50.5492%" y="148" width="1.6998%" height="15" fill="rgb(248,100,22)"/><text x="50.7992%" y="158.50"></text></g><g><title>_solve_varproblem (firedrake/solving.py:160) (1,023 samples, 26.75%)</title><rect x="25.5230%" y="100" width="26.7521%" height="15" fill="rgb(208,67,9)"/><text x="25.7730%" y="110.50">_solve_varproblem (firedrake/solving.py:160)</text></g><g><title>wrapper (pyadjoint/tape.py:46) (1,023 samples, 26.75%)</title><rect x="25.5230%" y="116" width="26.7521%" height="15" fill="rgb(219,133,21)"/><text x="25.7730%" y="126.50">wrapper (pyadjoint/tape.py:46)</text></g><g><title>solve (firedrake/variational_solver.py:256) (48 samples, 1.26%)</title><rect x="52.3797%" y="132" width="1.2552%" height="15" fill="rgb(246,46,29)"/><text x="52.6297%" y="142.50"></text></g><g><title>apply (&lt;decorator-gen-45&gt;:2) (47 samples, 1.23%)</title><rect x="52.4059%" y="148" width="1.2291%" height="15" fill="rgb(246,185,52)"/><text x="52.6559%" y="158.50"></text></g><g><title>wrapper (pyop2/profiling.py:60) (47 samples, 1.23%)</title><rect x="52.4059%" y="164" width="1.2291%" height="15" fill="rgb(252,136,11)"/><text x="52.6559%" y="174.50"></text></g><g><title>wrapper (firedrake/adjoint/dirichletbc.py:32) (47 samples, 1.23%)</title><rect x="52.4059%" y="180" width="1.2291%" height="15" fill="rgb(219,138,53)"/><text x="52.6559%" y="190.50"></text></g><g><title>apply (firedrake/bcs.py:422) (43 samples, 1.12%)</title><rect x="52.5105%" y="196" width="1.1245%" height="15" fill="rgb(211,51,23)"/><text x="52.7605%" y="206.50"></text></g><g><title>SNESSolve_KSPONLY (ksponly.c:28) (113 samples, 2.96%)</title><rect x="54.1056%" y="212" width="2.9550%" height="15" fill="rgb(247,221,28)"/><text x="54.3556%" y="222.50">SNE..</text></g><g><title>SNESComputeFunction (snes.c:2381) (113 samples, 2.96%)</title><rect x="54.1056%" y="228" width="2.9550%" height="15" fill="rgb(251,222,45)"/><text x="54.3556%" y="238.50">SNE..</text></g><g><title>PETSc_SNES_Function (petsc4py.PETSc.c:38905) (111 samples, 2.90%)</title><rect x="54.1579%" y="244" width="2.9027%" height="15" fill="rgb(217,162,53)"/><text x="54.4079%" y="254.50">PE..</text></g><g><title>form_function (firedrake/solving_utils.py:413) (103 samples, 2.69%)</title><rect x="54.3672%" y="260" width="2.6935%" height="15" fill="rgb(229,93,14)"/><text x="54.6172%" y="270.50">fo..</text></g><g><title>thunk (firedrake/assemble.py:181) (103 samples, 2.69%)</title><rect x="54.3672%" y="276" width="2.6935%" height="15" fill="rgb(209,67,49)"/><text x="54.6172%" y="286.50">th..</text></g><g><title>matrix_arg (firedrake/assemble.py:349) (44 samples, 1.15%)</title><rect x="57.6098%" y="356" width="1.1506%" height="15" fill="rgb(213,87,29)"/><text x="57.8598%" y="366.50"></text></g><g><title>create_parloops (firedrake/assemble.py:599) (72 samples, 1.88%)</title><rect x="57.4529%" y="340" width="1.8828%" height="15" fill="rgb(205,151,52)"/><text x="57.7029%" y="350.50">c..</text></g><g><title>_assemble (firedrake/assemble.py:748) (89 samples, 2.33%)</title><rect x="57.2960%" y="324" width="2.3274%" height="15" fill="rgb(253,215,39)"/><text x="57.5460%" y="334.50">_..</text></g><g><title>__get__ (pyop2/utils.py:62) (114 samples, 2.98%)</title><rect x="57.1653%" y="276" width="2.9812%" height="15" fill="rgb(221,220,41)"/><text x="57.4153%" y="286.50">__g..</text></g><g><title>_assemble_jac (firedrake/solving_utils.py:516) (113 samples, 2.96%)</title><rect x="57.1914%" y="292" width="2.9550%" height="15" fill="rgb(218,133,21)"/><text x="57.4414%" y="302.50">_as..</text></g><g><title>create_assembly_callable (firedrake/assemble.py:177) (113 samples, 2.96%)</title><rect x="57.1914%" y="308" width="2.9550%" height="15" fill="rgb(221,193,43)"/><text x="57.4414%" y="318.50">cre..</text></g><g><title>compute (pyop2/base.py:3579) (42 samples, 1.10%)</title><rect x="60.9310%" y="292" width="1.0983%" height="15" fill="rgb(240,128,52)"/><text x="61.1810%" y="302.50"></text></g><g><title>_compute (pyop2/sequential.py:218) (40 samples, 1.05%)</title><rect x="60.9833%" y="308" width="1.0460%" height="15" fill="rgb(253,114,12)"/><text x="61.2333%" y="318.50"></text></g><g><title>__call__ (pyop2/sequential.py:106) (39 samples, 1.02%)</title><rect x="61.0094%" y="324" width="1.0199%" height="15" fill="rgb(215,223,47)"/><text x="61.2594%" y="334.50"></text></g><g><title>0x7fae7a7f7d54 (_ctypes.cpython-36m-x86_64-linux-gnu.so) (39 samples, 1.02%)</title><rect x="61.0094%" y="340" width="1.0199%" height="15" fill="rgb(248,225,23)"/><text x="61.2594%" y="350.50"></text></g><g><title>_ctypes_callproc (_ctypes.cpython-36m-x86_64-linux-gnu.so) (39 samples, 1.02%)</title><rect x="61.0094%" y="356" width="1.0199%" height="15" fill="rgb(250,108,0)"/><text x="61.2594%" y="366.50"></text></g><g><title>ffi_call (libffi.so.6.0.4) (39 samples, 1.02%)</title><rect x="61.0094%" y="372" width="1.0199%" height="15" fill="rgb(228,208,7)"/><text x="61.2594%" y="382.50"></text></g><g><title>ffi_call_unix64 (libffi.so.6.0.4) (39 samples, 1.02%)</title><rect x="61.0094%" y="388" width="1.0199%" height="15" fill="rgb(244,45,10)"/><text x="61.2594%" y="398.50"></text></g><g><title>SNESComputeJacobian (snes.c:2715) (206 samples, 5.39%)</title><rect x="57.0607%" y="228" width="5.3870%" height="15" fill="rgb(207,125,25)"/><text x="57.3107%" y="238.50">SNESCom..</text></g><g><title>PETSc_SNES_Jacobian (petsc4py.PETSc.c:39428) (205 samples, 5.36%)</title><rect x="57.0868%" y="244" width="5.3609%" height="15" fill="rgb(210,195,18)"/><text x="57.3368%" y="254.50">PETSc_S..</text></g><g><title>form_jacobian (firedrake/solving_utils.py:452) (202 samples, 5.28%)</title><rect x="57.1653%" y="260" width="5.2824%" height="15" fill="rgb(249,80,12)"/><text x="57.4153%" y="270.50">form_j..</text></g><g><title>thunk (firedrake/assemble.py:181) (88 samples, 2.30%)</title><rect x="60.1464%" y="276" width="2.3013%" height="15" fill="rgb(221,65,9)"/><text x="60.3964%" y="286.50">t..</text></g><g><title>SNESSolve_KSPONLY (ksponly.c:43) (213 samples, 5.57%)</title><rect x="57.0607%" y="212" width="5.5701%" height="15" fill="rgb(235,49,36)"/><text x="57.3107%" y="222.50">SNESSol..</text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:1224) (46 samples, 1.20%)</title><rect x="63.5460%" y="324" width="1.2029%" height="15" fill="rgb(225,32,20)"/><text x="63.7960%" y="334.50"></text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:2748) (50 samples, 1.31%)</title><rect x="65.6904%" y="324" width="1.3075%" height="15" fill="rgb(215,141,46)"/><text x="65.9404%" y="334.50"></text></g><g><title>KSPSolve_Private (itfunc.c:658) (172 samples, 4.50%)</title><rect x="62.6308%" y="244" width="4.4979%" height="15" fill="rgb(250,160,47)"/><text x="62.8808%" y="254.50">KSPSo..</text></g><g><title>KSPSetUp (itfunc.c:406) (165 samples, 4.31%)</title><rect x="62.8138%" y="260" width="4.3149%" height="15" fill="rgb(216,222,40)"/><text x="63.0638%" y="270.50">KSPSe..</text></g><g><title>PCSetUp (precon.c:1009) (165 samples, 4.31%)</title><rect x="62.8138%" y="276" width="4.3149%" height="15" fill="rgb(234,217,39)"/><text x="63.0638%" y="286.50">PCSet..</text></g><g><title>PCSetUp_HYPRE (hypre.c:408) (157 samples, 4.11%)</title><rect x="63.0230%" y="292" width="4.1056%" height="15" fill="rgb(207,178,40)"/><text x="63.2730%" y="302.50">PCSe..</text></g><g><title>HYPRE_BoomerAMGSetup (HYPRE_parcsr_amg.c:51) (157 samples, 4.11%)</title><rect x="63.0230%" y="308" width="4.1056%" height="15" fill="rgb(221,136,13)"/><text x="63.2730%" y="318.50">HYPR..</text></g><g><title>KSP_PCApply (kspimpl.h:283) (50 samples, 1.31%)</title><rect x="67.7563%" y="276" width="1.3075%" height="15" fill="rgb(249,199,10)"/><text x="68.0063%" y="286.50"></text></g><g><title>PCApply (precon.c:444) (49 samples, 1.28%)</title><rect x="67.7824%" y="292" width="1.2814%" height="15" fill="rgb(249,222,13)"/><text x="68.0324%" y="302.50"></text></g><g><title>PCApply_HYPRE (hypre.c:434) (49 samples, 1.28%)</title><rect x="67.7824%" y="308" width="1.2814%" height="15" fill="rgb(244,185,38)"/><text x="68.0324%" y="318.50"></text></g><g><title>HYPRE_BoomerAMGSolve (HYPRE_parcsr_amg.c:69) (49 samples, 1.28%)</title><rect x="67.7824%" y="324" width="1.2814%" height="15" fill="rgb(236,202,9)"/><text x="68.0324%" y="334.50"></text></g><g><title>hypre_BoomerAMGSolve (par_amg_solve.c:250) (49 samples, 1.28%)</title><rect x="67.7824%" y="340" width="1.2814%" height="15" fill="rgb(250,229,37)"/><text x="68.0324%" y="350.50"></text></g><g><title>KSPSolve_CG (cg.c:210) (51 samples, 1.33%)</title><rect x="67.7563%" y="260" width="1.3337%" height="15" fill="rgb(206,174,23)"/><text x="68.0063%" y="270.50"></text></g><g><title>SNESSolve (snes.c:4567) (574 samples, 15.01%)</title><rect x="54.1056%" y="196" width="15.0105%" height="15" fill="rgb(211,33,43)"/><text x="54.3556%" y="206.50">SNESSolve (snes.c:4567)</text></g><g><title>SNESSolve_KSPONLY (ksponly.c:51) (248 samples, 6.49%)</title><rect x="62.6308%" y="212" width="6.4854%" height="15" fill="rgb(245,58,50)"/><text x="62.8808%" y="222.50">SNESSolv..</text></g><g><title>KSPSolve (itfunc.c:889) (248 samples, 6.49%)</title><rect x="62.6308%" y="228" width="6.4854%" height="15" fill="rgb(244,68,36)"/><text x="62.8808%" y="238.50">KSPSolve..</text></g><g><title>KSPSolve_Private (itfunc.c:719) (76 samples, 1.99%)</title><rect x="67.1287%" y="244" width="1.9874%" height="15" fill="rgb(232,229,15)"/><text x="67.3787%" y="254.50">K..</text></g><g><title>solve (firedrake/variational_solver.py:271) (590 samples, 15.43%)</title><rect x="53.7395%" y="132" width="15.4289%" height="15" fill="rgb(254,30,23)"/><text x="53.9895%" y="142.50">solve (firedrake/variati..</text></g><g><title>solve (petsc4py.PETSc.c:201060) (580 samples, 15.17%)</title><rect x="54.0010%" y="148" width="15.1674%" height="15" fill="rgb(235,160,14)"/><text x="54.2510%" y="158.50">solve (petsc4py.PETSc.c..</text></g><g><title>solve (petsc4py.PETSc.c:201114) (580 samples, 15.17%)</title><rect x="54.0010%" y="164" width="15.1674%" height="15" fill="rgb(212,155,44)"/><text x="54.2510%" y="174.50">solve (petsc4py.PETSc.c..</text></g><g><title>PETSc_CHKERR (petsc4py.PETSc.c:10267) (580 samples, 15.17%)</title><rect x="54.0010%" y="180" width="15.1674%" height="15" fill="rgb(226,2,50)"/><text x="54.2510%" y="190.50">PETSc_CHKERR (petsc4py...</text></g><g><title>&lt;module&gt; (solve.py:61) (1,905 samples, 49.82%)</title><rect x="19.4561%" y="52" width="49.8169%" height="15" fill="rgb(234,177,6)"/><text x="19.7061%" y="62.50">&lt;module&gt; (solve.py:61)</text></g><g><title>wrapper (firedrake/adjoint/solving.py:50) (1,904 samples, 49.79%)</title><rect x="19.4822%" y="68" width="49.7908%" height="15" fill="rgb(217,24,9)"/><text x="19.7322%" y="78.50">wrapper (firedrake/adjoint/solving.py:50)</text></g><g><title>solve (firedrake/solving.py:129) (1,903 samples, 49.76%)</title><rect x="19.5084%" y="84" width="49.7646%" height="15" fill="rgb(220,13,46)"/><text x="19.7584%" y="94.50">solve (firedrake/solving.py:129)</text></g><g><title>_solve_varproblem (firedrake/solving.py:161) (650 samples, 17.00%)</title><rect x="52.2751%" y="100" width="16.9979%" height="15" fill="rgb(239,221,27)"/><text x="52.5251%" y="110.50">_solve_varproblem (firedra..</text></g><g><title>wrapper (firedrake/adjoint/variational_solver.py:75) (648 samples, 16.95%)</title><rect x="52.3274%" y="116" width="16.9456%" height="15" fill="rgb(222,198,25)"/><text x="52.5774%" y="126.50">wrapper (firedrake/adjoint..</text></g><g><title>all (3,824 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(211,99,13)"/><text x="0.2500%" y="46.50"></text></g><g><title>_bootstrap (threading.py:884) (1,175 samples, 30.73%)</title><rect x="69.2730%" y="52" width="30.7270%" height="15" fill="rgb(232,111,31)"/><text x="69.5230%" y="62.50">_bootstrap (threading.py:884)</text></g><g><title>_bootstrap_inner (threading.py:916) (1,175 samples, 30.73%)</title><rect x="69.2730%" y="68" width="30.7270%" height="15" fill="rgb(245,82,37)"/><text x="69.5230%" y="78.50">_bootstrap_inner (threading.py:916)</text></g><g><title>run (threading.py:864) (1,175 samples, 30.73%)</title><rect x="69.2730%" y="84" width="30.7270%" height="15" fill="rgb(227,149,46)"/><text x="69.5230%" y="94.50">run (threading.py:864)</text></g><g><title>_log_start_if_long (pytools/__init__.py:2424) (1,175 samples, 30.73%)</title><rect x="69.2730%" y="100" width="30.7270%" height="15" fill="rgb(218,36,50)"/><text x="69.5230%" y="110.50">_log_start_if_long (pytools/__init__.py:2424)</text></g><g><title>select (libc-2.27.so) (1,173 samples, 30.67%)</title><rect x="69.3253%" y="116" width="30.6747%" height="15" fill="rgb(226,80,48)"/><text x="69.5753%" y="126.50">select (libc-2.27.so)</text></g></svg></svg>
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1093.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1093.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;module&gt; (numpy/__init__.py:140) (80 samples, 1.28%)</title><rect x="0.0801%" y="532" width="1.2808%" height="15" fill="rgb(227,0,7)"/><text x="0.3301%" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (80 samples, 1.28%)</title><rect x="0.0801%" y="548" width="1.2808%" height="15" fill="rgb(217,0,24)"/><text x="0.3301%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (80 samples, 1.28%)</title><rect x="0.0801%" y="564" width="1.2808%" height="15" fill="rgb(221,193,54)"/><text x="0.3301%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (80 samples, 1.28%)</title><rect x="0.0801%" y="580" width="1.2808%" height="15" fill="rgb(248,212,6)"/><text x="0.3301%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (80 samples, 1.28%)</title><rect x="0.0801%" y="596" width="1.2808%" height="15" fill="rgb(208,68,35)"/><text x="0.3301%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (80 samples, 1.28%)</title><rect x="0.0801%" y="612" width="1.2808%" height="15" fill="rgb(232,128,0)"/><text x="0.3301%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (80 samples, 1.28%)</title><rect x="0.0801%" y="628" width="1.2808%" height="15" fill="rgb(207,160,47)"/><text x="0.3301%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (80 samples, 1.28%)</title><rect x="0.0801%" y="644" width="1.2808%" height="15" fill="rgb(228,23,34)"/><text x="0.3301%" y="654.50"></text></g><g><title>init (petsc4py/__init__.py:42) (180 samples, 2.88%)</title><rect x="0.0320%" y="260" width="2.8818%" height="15" fill="rgb(218,30,26)"/><text x="0.2820%" y="270.50">in..</text></g><g><title>ImportPETSc (petsc4py/lib/__init__.py:29) (180 samples, 2.88%)</title><rect x="0.0320%" y="276" width="2.8818%" height="15" fill="rgb(220,122,19)"/><text x="0.2820%" y="286.50">Im..</text></g><g><title>Import (petsc4py/lib/__init__.py:73) (180 samples, 2.88%)</title><rect x="0.0320%" y="292" width="2.8818%" height="15" fill="rgb(250,228,42)"/><text x="0.2820%" y="302.50">Im..</text></g><g><title>import_module (petsc4py/lib/__init__.py:58) (180 samples, 2.88%)</title><rect x="0.0320%" y="308" width="2.8818%" height="15" fill="rgb(240,193,28)"/><text x="0.2820%" y="318.50">im..</text></g><g><title>load_module (imp.py:242) (180 samples, 2.88%)</title><rect x="0.0320%" y="324" width="2.8818%" height="15" fill="rgb(216,20,37)"/><text x="0.2820%" y="334.50">lo..</text></g><g><title>load_dynamic (imp.py:342) (180 samples, 2.88%)</title><rect x="0.0320%" y="340" width="2.8818%" height="15" fill="rgb(206,188,39)"/><text x="0.2820%" y="350.50">lo..</text></g><g><title>_load (&lt;frozen importlib._bootstrap&gt;:702) (180 samples, 2.88%)</title><rect x="0.0320%" y="356" width="2.8818%" height="15" fill="rgb(217,207,13)"/><text x="0.2820%" y="366.50">_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (178 samples, 2.85%)</title><rect x="0.0640%" y="372" width="2.8498%" height="15" fill="rgb(231,73,38)"/><text x="0.3140%" y="382.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (178 samples, 2.85%)</title><rect x="0.0640%" y="388" width="2.8498%" height="15" fill="rgb(225,20,46)"/><text x="0.3140%" y="398.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (178 samples, 2.85%)</title><rect x="0.0640%" y="404" width="2.8498%" height="15" fill="rgb(210,31,41)"/><text x="0.3140%" y="414.50">_c..</text></g><g><title>__pyx_pymod_exec_PETSc (petsc4py.PETSc.c:326339) (177 samples, 2.83%)</title><rect x="0.0801%" y="420" width="2.8338%" height="15" fill="rgb(221,200,47)"/><text x="0.3301%" y="430.50">__..</text></g><g><title>__Pyx_modinit_type_init_code (petsc4py.PETSc.c:325821) (177 samples, 2.83%)</title><rect x="0.0801%" y="436" width="2.8338%" height="15" fill="rgb(226,26,5)"/><text x="0.3301%" y="446.50">__..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (177 samples, 2.83%)</title><rect x="0.0801%" y="452" width="2.8338%" height="15" fill="rgb(249,33,26)"/><text x="0.3301%" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (177 samples, 2.83%)</title><rect x="0.0801%" y="468" width="2.8338%" height="15" fill="rgb(235,183,28)"/><text x="0.3301%" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (177 samples, 2.83%)</title><rect x="0.0801%" y="484" width="2.8338%" height="15" fill="rgb(221,5,38)"/><text x="0.3301%" y="494.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (177 samples, 2.83%)</title><rect x="0.0801%" y="500" width="2.8338%" height="15" fill="rgb(247,18,42)"/><text x="0.3301%" y="510.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (177 samples, 2.83%)</title><rect x="0.0801%" y="516" width="2.8338%" height="15" fill="rgb(241,131,45)"/><text x="0.3301%" y="526.50">_c..</text></g><g><title>&lt;module&gt; (firedrake/__init__.py:19) (212 samples, 3.39%)</title><rect x="0.0160%" y="148" width="3.3942%" height="15" fill="rgb(249,31,29)"/><text x="0.2660%" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (212 samples, 3.39%)</title><rect x="0.0160%" y="164" width="3.3942%" height="15" fill="rgb(225,111,53)"/><text x="0.2660%" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (212 samples, 3.39%)</title><rect x="0.0160%" y="180" width="3.3942%" height="15" fill="rgb(238,160,17)"/><text x="0.2660%" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (212 samples, 3.39%)</title><rect x="0.0160%" y="196" width="3.3942%" height="15" fill="rgb(214,148,48)"/><text x="0.2660%" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (212 samples, 3.39%)</title><rect x="0.0160%" y="212" width="3.3942%" height="15" fill="rgb(232,36,49)"/><text x="0.2660%" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (212 samples, 3.39%)</title><rect x="0.0160%" y="228" width="3.3942%" height="15" fill="rgb(209,103,24)"/><text x="0.2660%" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (firedrake/petsc.py:4) (211 samples, 3.38%)</title><rect x="0.0320%" y="244" width="3.3782%" height="15" fill="rgb(229,88,8)"/><text x="0.2820%" y="254.50">&lt;mo..</text></g><g><title>&lt;module&gt; (tsfc/driver.py:21) (70 samples, 1.12%)</title><rect x="4.3228%" y="564" width="1.1207%" height="15" fill="rgb(213,181,19)"/><text x="4.5728%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (70 samples, 1.12%)</title><rect x="4.3228%" y="580" width="1.1207%" height="15" fill="rgb(254,191,54)"/><text x="4.5728%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (70 samples, 1.12%)</title><rect x="4.3228%" y="596" width="1.1207%" height="15" fill="rgb(241,83,37)"/><text x="4.5728%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (70 samples, 1.12%)</title><rect x="4.3228%" y="612" width="1.1207%" height="15" fill="rgb(233,36,39)"/><text x="4.5728%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (70 samples, 1.12%)</title><rect x="4.3228%" y="628" width="1.1207%" height="15" fill="rgb(226,3,54)"/><text x="4.5728%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (70 samples, 1.12%)</title><rect x="4.3228%" y="644" width="1.1207%" height="15" fill="rgb(245,192,40)"/><text x="4.5728%" y="654.50"></text></g><g><title>&lt;module&gt; (FIAT/__init__.py:8) (66 samples, 1.06%)</title><rect x="4.3868%" y="660" width="1.0567%" height="15" fill="rgb(238,167,29)"/><text x="4.6368%" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (66 samples, 1.06%)</title><rect x="4.3868%" y="676" width="1.0567%" height="15" fill="rgb(232,182,51)"/><text x="4.6368%" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (66 samples, 1.06%)</title><rect x="4.3868%" y="692" width="1.0567%" height="15" fill="rgb(231,60,39)"/><text x="4.6368%" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (66 samples, 1.06%)</title><rect x="4.3868%" y="708" width="1.0567%" height="15" fill="rgb(208,69,12)"/><text x="4.6368%" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (66 samples, 1.06%)</title><rect x="4.3868%" y="724" width="1.0567%" height="15" fill="rgb(235,93,37)"/><text x="4.6368%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (66 samples, 1.06%)</title><rect x="4.3868%" y="740" width="1.0567%" height="15" fill="rgb(213,116,39)"/><text x="4.6368%" y="750.50"></text></g><g><title>&lt;module&gt; (FIAT/finite_element.py:13) (66 samples, 1.06%)</title><rect x="4.3868%" y="756" width="1.0567%" height="15" fill="rgb(222,207,29)"/><text x="4.6368%" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (66 samples, 1.06%)</title><rect x="4.3868%" y="772" width="1.0567%" height="15" fill="rgb(206,96,30)"/><text x="4.6368%" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (66 samples, 1.06%)</title><rect x="4.3868%" y="788" width="1.0567%" height="15" fill="rgb(218,138,4)"/><text x="4.6368%" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (66 samples, 1.06%)</title><rect x="4.3868%" y="804" width="1.0567%" height="15" fill="rgb(250,191,14)"/><text x="4.6368%" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (66 samples, 1.06%)</title><rect x="4.3868%" y="820" width="1.0567%" height="15" fill="rgb(239,60,40)"/><text x="4.6368%" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (66 samples, 1.06%)</title><rect x="4.3868%" y="836" width="1.0567%" height="15" fill="rgb(206,27,48)"/><text x="4.6368%" y="846.50"></text></g><g><title>&lt;module&gt; (FIAT/polynomial_set.py:19) (66 samples, 1.06%)</title><rect x="4.3868%" y="852" width="1.0567%" height="15" fill="rgb(225,35,8)"/><text x="4.6368%" y="862.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (66 samples, 1.06%)</title><rect x="4.3868%" y="868" width="1.0567%" height="15" fill="rgb(250,213,24)"/><text x="4.6368%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (66 samples, 1.06%)</title><rect x="4.3868%" y="884" width="1.0567%" height="15" fill="rgb(247,123,22)"/><text x="4.6368%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (66 samples, 1.06%)</title><rect x="4.3868%" y="900" width="1.0567%" height="15" fill="rgb(231,138,38)"/><text x="4.6368%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (66 samples, 1.06%)</title><rect x="4.3868%" y="916" width="1.0567%" height="15" fill="rgb(231,145,46)"/><text x="4.6368%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (66 samples, 1.06%)</title><rect x="4.3868%" y="932" width="1.0567%" height="15" fill="rgb(251,118,11)"/><text x="4.6368%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (66 samples, 1.06%)</title><rect x="4.3868%" y="948" width="1.0567%" height="15" fill="rgb(217,147,25)"/><text x="4.6368%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (66 samples, 1.06%)</title><rect x="4.3868%" y="964" width="1.0567%" height="15" fill="rgb(247,81,37)"/><text x="4.6368%" y="974.50"></text></g><g><title>&lt;module&gt; (FIAT/expansions.py:12) (66 samples, 1.06%)</title><rect x="4.3868%" y="980" width="1.0567%" height="15" fill="rgb(209,12,38)"/><text x="4.6368%" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (66 samples, 1.06%)</title><rect x="4.3868%" y="996" width="1.0567%" height="15" fill="rgb(227,1,9)"/><text x="4.6368%" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (66 samples, 1.06%)</title><rect x="4.3868%" y="1012" width="1.0567%" height="15" fill="rgb(248,47,43)"/><text x="4.6368%" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (66 samples, 1.06%)</title><rect x="4.3868%" y="1028" width="1.0567%" height="15" fill="rgb(221,10,30)"/><text x="4.6368%" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (66 samples, 1.06%)</title><rect x="4.3868%" y="1044" width="1.0567%" height="15" fill="rgb(210,229,1)"/><text x="4.6368%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (66 samples, 1.06%)</title><rect x="4.3868%" y="1060" width="1.0567%" height="15" fill="rgb(222,148,37)"/><text x="4.6368%" y="1070.50"></text></g><g><title>&lt;module&gt; (firedrake/assemble_expressions.py:15) (87 samples, 1.39%)</title><rect x="4.3228%" y="372" width="1.3929%" height="15" fill="rgb(234,67,33)"/><text x="4.5728%" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (87 samples, 1.39%)</title><rect x="4.3228%" y="388" width="1.3929%" height="15" fill="rgb(247,98,35)"/><text x="4.5728%" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (87 samples, 1.39%)</title><rect x="4.3228%" y="404" width="1.3929%" height="15" fill="rgb(247,138,52)"/><text x="4.5728%" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (87 samples, 1.39%)</title><rect x="4.3228%" y="420" width="1.3929%" height="15" fill="rgb(213,79,30)"/><text x="4.5728%" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (87 samples, 1.39%)</title><rect x="4.3228%" y="436" width="1.3929%" height="15" fill="rgb(246,177,23)"/><text x="4.5728%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (87 samples, 1.39%)</title><rect x="4.3228%" y="452" width="1.3929%" height="15" fill="rgb(230,62,27)"/><text x="4.5728%" y="462.50"></text></g><g><title>&lt;module&gt; (tsfc/__init__.py:1) (87 samples, 1.39%)</title><rect x="4.3228%" y="468" width="1.3929%" height="15" fill="rgb(216,154,8)"/><text x="4.5728%" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (87 samples, 1.39%)</title><rect x="4.3228%" y="484" width="1.3929%" height="15" fill="rgb(244,35,45)"/><text x="4.5728%" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (87 samples, 1.39%)</title><rect x="4.3228%" y="500" width="1.3929%" height="15" fill="rgb(251,115,12)"/><text x="4.5728%" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (87 samples, 1.39%)</title><rect x="4.3228%" y="516" width="1.3929%" height="15" fill="rgb(240,54,50)"/><text x="4.5728%" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (87 samples, 1.39%)</title><rect x="4.3228%" y="532" width="1.3929%" height="15" fill="rgb(233,84,52)"/><text x="4.5728%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (87 samples, 1.39%)</title><rect x="4.3228%" y="548" width="1.3929%" height="15" fill="rgb(207,117,47)"/><text x="4.5728%" y="558.50"></text></g><g><title>&lt;module&gt; (firedrake/__init__.py:57) (95 samples, 1.52%)</title><rect x="4.3228%" y="148" width="1.5210%" height="15" fill="rgb(249,43,39)"/><text x="4.5728%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (95 samples, 1.52%)</title><rect x="4.3228%" y="164" width="1.5210%" height="15" fill="rgb(209,38,44)"/><text x="4.5728%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (95 samples, 1.52%)</title><rect x="4.3228%" y="180" width="1.5210%" height="15" fill="rgb(236,212,23)"/><text x="4.5728%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (95 samples, 1.52%)</title><rect x="4.3228%" y="196" width="1.5210%" height="15" fill="rgb(242,79,21)"/><text x="4.5728%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (95 samples, 1.52%)</title><rect x="4.3228%" y="212" width="1.5210%" height="15" fill="rgb(211,96,35)"/><text x="4.5728%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (95 samples, 1.52%)</title><rect x="4.3228%" y="228" width="1.5210%" height="15" fill="rgb(253,215,40)"/><text x="4.5728%" y="238.50"></text></g><g><title>&lt;module&gt; (firedrake/assemble.py:10) (95 samples, 1.52%)</title><rect x="4.3228%" y="244" width="1.5210%" height="15" fill="rgb(211,81,21)"/><text x="4.5728%" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (95 samples, 1.52%)</title><rect x="4.3228%" y="260" width="1.5210%" height="15" fill="rgb(208,190,38)"/><text x="4.5728%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (95 samples, 1.52%)</title><rect x="4.3228%" y="276" width="1.5210%" height="15" fill="rgb(235,213,38)"/><text x="4.5728%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (95 samples, 1.52%)</title><rect x="4.3228%" y="292" width="1.5210%" height="15" fill="rgb(237,122,38)"/><text x="4.5728%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (95 samples, 1.52%)</title><rect x="4.3228%" y="308" width="1.5210%" height="15" fill="rgb(244,218,35)"/><text x="4.5728%" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (95 samples, 1.52%)</title><rect x="4.3228%" y="324" width="1.5210%" height="15" fill="rgb(240,68,47)"/><text x="4.5728%" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (95 samples, 1.52%)</title><rect x="4.3228%" y="340" width="1.5210%" height="15" fill="rgb(210,16,53)"/><text x="4.5728%" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (95 samples, 1.52%)</title><rect x="4.3228%" y="356" width="1.5210%" height="15" fill="rgb(235,124,12)"/><text x="4.5728%" y="366.50"></text></g><g><title>&lt;module&gt; (mod.py:1) (407 samples, 6.52%)</title><rect x="0.0160%" y="52" width="6.5162%" height="15" fill="rgb(224,169,11)"/><text x="0.2660%" y="62.50">&lt;module&gt; ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (407 samples, 6.52%)</title><rect x="0.0160%" y="68" width="6.5162%" height="15" fill="rgb(250,166,2)"/><text x="0.2660%" y="78.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (407 samples, 6.52%)</title><rect x="0.0160%" y="84" width="6.5162%" height="15" fill="rgb(242,216,29)"/><text x="0.2660%" y="94.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (407 samples, 6.52%)</title><rect x="0.0160%" y="100" width="6.5162%" height="15" fill="rgb(230,116,27)"/><text x="0.2660%" y="110.50">_load_unl..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (407 samples, 6.52%)</title><rect x="0.0160%" y="116" width="6.5162%" height="15" fill="rgb(228,99,48)"/><text x="0.2660%" y="126.50">exec_modu..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (407 samples, 6.52%)</title><rect x="0.0160%" y="132" width="6.5162%" height="15" fill="rgb(253,11,6)"/><text x="0.2660%" y="142.50">_call_wit..</text></g><g><title>RectangleMesh (firedrake/utility_meshes.py:392) (65 samples, 1.04%)</title><rect x="6.6443%" y="100" width="1.0407%" height="15" fill="rgb(247,143,39)"/><text x="6.8943%" y="110.50"></text></g><g><title>_from_cell_list (firedrake/mesh.py:326) (65 samples, 1.04%)</title><rect x="6.6443%" y="116" width="1.0407%" height="15" fill="rgb(236,97,10)"/><text x="6.8943%" y="126.50"></text></g><g><title>createFromCellList (petsc4py.PETSc.c:261917) (65 samples, 1.04%)</title><rect x="6.6443%" y="132" width="1.0407%" height="15" fill="rgb(233,208,19)"/><text x="6.8943%" y="142.50"></text></g><g><title>createFromCellList (petsc4py.PETSc.c:262225) (65 samples, 1.04%)</title><rect x="6.6443%" y="148" width="1.0407%" height="15" fill="rgb(216,164,2)"/><text x="6.8943%" y="158.50"></text></g><g><title>PETSc_CHKERR (petsc4py.PETSc.c:10267) (65 samples, 1.04%)</title><rect x="6.6443%" y="164" width="1.0407%" height="15" fill="rgb(220,129,5)"/><text x="6.8943%" y="174.50"></text></g><g><title>DMPlexCreateFromCellList (plexcreate.c:3391) (65 samples, 1.04%)</title><rect x="6.6443%" y="180" width="1.0407%" height="15" fill="rgb(242,17,10)"/><text x="6.8943%" y="190.50"></text></g><g><title>&lt;module&gt; (mod.py:14) (92 samples, 1.47%)</title><rect x="6.5322%" y="52" width="1.4729%" height="15" fill="rgb(242,107,0)"/><text x="6.7822%" y="62.50"></text></g><g><title>UnitSquareMesh (firedrake/utility_meshes.py:459) (92 samples, 1.47%)</title><rect x="6.5322%" y="68" width="1.4729%" height="15" fill="rgb(251,28,31)"/><text x="6.7822%" y="78.50"></text></g><g><title>SquareMesh (firedrake/utility_meshes.py:435) (92 samples, 1.47%)</title><rect x="6.5322%" y="84" width="1.4729%" height="15" fill="rgb(233,223,10)"/><text x="6.7822%" y="94.50"></text></g><g><title>&lt;module&gt; (mod.py:15) (76 samples, 1.22%)</title><rect x="8.0051%" y="52" width="1.2168%" height="15" fill="rgb(215,21,27)"/><text x="8.2551%" y="62.50"></text></g><g><title>FunctionSpace (&lt;decorator-gen-24&gt;:2) (76 samples, 1.22%)</title><rect x="8.0051%" y="68" width="1.2168%" height="15" fill="rgb(232,23,21)"/><text x="8.2551%" y="78.50"></text></g><g><title>wrapper (pyop2/profiling.py:60) (76 samples, 1.22%)</title><rect x="8.0051%" y="84" width="1.2168%" height="15" fill="rgb(244,5,23)"/><text x="8.2551%" y="94.50"></text></g><g><title>FunctionSpace (firedrake/functionspace.py:117) (76 samples, 1.22%)</title><rect x="8.0051%" y="100" width="1.2168%" height="15" fill="rgb(226,81,46)"/><text x="8.2551%" y="110.50"></text></g><g><title>make_scalar_element (firedrake/functionspace.py:40) (76 samples, 1.22%)</title><rect x="8.0051%" y="116" width="1.2168%" height="15" fill="rgb(247,70,30)"/><text x="8.2551%" y="126.50"></text></g><g><title>init (firedrake/mesh.py:1295) (76 samples, 1.22%)</title><rect x="8.0051%" y="132" width="1.2168%" height="15" fill="rgb(212,68,19)"/><text x="8.2551%" y="142.50"></text></g><g><title>__init__ (firedrake/functionspaceimpl.py:277) (150 samples, 2.40%)</title><rect x="9.2219%" y="116" width="2.4015%" height="15" fill="rgb(240,187,13)"/><text x="9.4719%" y="126.50">__..</text></g><g><title>create_element (tsfc/finatinterface.py:275) (150 samples, 2.40%)</title><rect x="9.2219%" y="132" width="2.4015%" height="15" fill="rgb(223,113,26)"/><text x="9.4719%" y="142.50">cr..</text></g><g><title>_create_element (tsfc/finatinterface.py:305) (150 samples, 2.40%)</title><rect x="9.2219%" y="148" width="2.4015%" height="15" fill="rgb(206,192,2)"/><text x="9.4719%" y="158.50">_c..</text></g><g><title>wrapper (functools.py:875) (150 samples, 2.40%)</title><rect x="9.2219%" y="164" width="2.4015%" height="15" fill="rgb(241,108,4)"/><text x="9.4719%" y="174.50">wr..</text></g><g><title>convert_finiteelement (tsfc/finatinterface.py:177) (150 samples, 2.40%)</title><rect x="9.2219%" y="180" width="2.4015%" height="15" fill="rgb(247,173,49)"/><text x="9.4719%" y="190.50">co..</text></g><g><title>__init__ (finat/fiat_elements.py:333) (150 samples, 2.40%)</title><rect x="9.2219%" y="196" width="2.4015%" height="15" fill="rgb(224,114,35)"/><text x="9.4719%" y="206.50">__..</text></g><g><title>__init__ (FIAT/lagrange.py:43) (150 samples, 2.40%)</title><rect x="9.2219%" y="212" width="2.4015%" height="15" fill="rgb(245,159,27)"/><text x="9.4719%" y="222.50">__..</text></g><g><title>__init__ (FIAT/polynomial_set.py:168) (150 samples, 2.40%)</title><rect x="9.2219%" y="228" width="2.4015%" height="15" fill="rgb(245,172,44)"/><text x="9.4719%" y="238.50">__..</text></g><g><title>tabulate_derivatives (FIAT/expansions.py:277) (150 samples, 2.40%)</title><rect x="9.2219%" y="244" width="2.4015%" height="15" fill="rgb(236,23,11)"/><text x="9.4719%" y="254.50">ta..</text></g><g><title>_tabulate_dpts (FIAT/expansions.py:91) (116 samples, 1.86%)</title><rect x="9.7663%" y="260" width="1.8572%" height="15" fill="rgb(205,117,38)"/><text x="10.0163%" y="270.50">_..</text></g><g><title>form_derivative (FIAT/expansions.py:43) (70 samples, 1.12%)</title><rect x="10.5027%" y="276" width="1.1207%" height="15" fill="rgb(237,72,25)"/><text x="10.7527%" y="286.50"></text></g><g><title>form_derivative (FIAT/expansions.py:37) (70 samples, 1.12%)</title><rect x="10.5027%" y="292" width="1.1207%" height="15" fill="rgb(244,70,9)"/><text x="10.7527%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (FIAT/expansions.py:37) (70 samples, 1.12%)</title><rect x="10.5027%" y="308" width="1.1207%" height="15" fill="rgb(217,125,39)"/><text x="10.7527%" y="318.50"></text></g><g><title>diff (sympy/core/function.py:2492) (70 samples, 1.12%)</title><rect x="10.5027%" y="324" width="1.1207%" height="15" fill="rgb(235,36,10)"/><text x="10.7527%" y="334.50"></text></g><g><title>diff (sympy/core/expr.py:3474) (70 samples, 1.12%)</title><rect x="10.5027%" y="340" width="1.1207%" height="15" fill="rgb(251,123,47)"/><text x="10.7527%" y="350.50"></text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (70 samples, 1.12%)</title><rect x="10.5027%" y="356" width="1.1207%" height="15" fill="rgb(221,13,13)"/><text x="10.7527%" y="366.50"></text></g><g><title>&lt;module&gt; (mod.py:16) (156 samples, 2.50%)</title><rect x="9.2219%" y="52" width="2.4976%" height="15" fill="rgb(238,131,9)"/><text x="9.4719%" y="62.50">&lt;m..</text></g><g><title>FunctionSpace (&lt;decorator-gen-24&gt;:2) (156 samples, 2.50%)</title><rect x="9.2219%" y="68" width="2.4976%" height="15" fill="rgb(211,50,8)"/><text x="9.4719%" y="78.50">Fu..</text></g><g><title>wrapper (pyop2/profiling.py:60) (156 samples, 2.50%)</title><rect x="9.2219%" y="84" width="2.4976%" height="15" fill="rgb(245,182,24)"/><text x="9.4719%" y="94.50">wr..</text></g><g><title>FunctionSpace (firedrake/functionspace.py:140) (156 samples, 2.50%)</title><rect x="9.2219%" y="100" width="2.4976%" height="15" fill="rgb(242,14,37)"/><text x="9.4719%" y="110.50">Fu..</text></g><g><title>create_parloops (firedrake/assemble.py:520) (169 samples, 2.71%)</title><rect x="13.0484%" y="212" width="2.7057%" height="15" fill="rgb(246,228,12)"/><text x="13.2984%" y="222.50">cr..</text></g><g><title>compile_form (firedrake/tsfc_interface.py:228) (166 samples, 2.66%)</title><rect x="13.0964%" y="228" width="2.6577%" height="15" fill="rgb(213,55,15)"/><text x="13.3464%" y="238.50">co..</text></g><g><title>__new__ (pyop2/caching.py:197) (164 samples, 2.63%)</title><rect x="13.1284%" y="244" width="2.6257%" height="15" fill="rgb(209,9,3)"/><text x="13.3784%" y="254.50">__..</text></g><g><title>_cache_lookup (firedrake/tsfc_interface.py:68) (164 samples, 2.63%)</title><rect x="13.1284%" y="260" width="2.6257%" height="15" fill="rgb(230,59,30)"/><text x="13.3784%" y="270.50">_c..</text></g><g><title>_read_from_disk (firedrake/tsfc_interface.py:90) (135 samples, 2.16%)</title><rect x="13.5927%" y="276" width="2.1614%" height="15" fill="rgb(209,121,21)"/><text x="13.8427%" y="286.50">_..</text></g><g><title>_assemble (firedrake/assemble.py:745) (176 samples, 2.82%)</title><rect x="13.0484%" y="196" width="2.8178%" height="15" fill="rgb(220,109,13)"/><text x="13.2984%" y="206.50">_a..</text></g><g><title>__init__ (firedrake/solving_utils.py:234) (178 samples, 2.85%)</title><rect x="13.0323%" y="164" width="2.8498%" height="15" fill="rgb(232,18,1)"/><text x="13.2823%" y="174.50">__..</text></g><g><title>create_assembly_callable (firedrake/assemble.py:177) (178 samples, 2.85%)</title><rect x="13.0323%" y="180" width="2.8498%" height="15" fill="rgb(215,41,42)"/><text x="13.2823%" y="190.50">cr..</text></g><g><title>__init__ (firedrake/variational_solver.py:188) (182 samples, 2.91%)</title><rect x="13.0323%" y="148" width="2.9139%" height="15" fill="rgb(224,123,36)"/><text x="13.2823%" y="158.50">__..</text></g><g><title>MatSetValues (matrix.c:1393) (122 samples, 1.95%)</title><rect x="18.7160%" y="372" width="1.9533%" height="15" fill="rgb(240,125,3)"/><text x="18.9660%" y="382.50">M..</text></g><g><title>MatSetValuesLocal (matrix.c:2234) (153 samples, 2.45%)</title><rect x="18.3477%" y="356" width="2.4496%" height="15" fill="rgb(205,98,50)"/><text x="18.5977%" y="366.50">Ma..</text></g><g><title>fill_with_zeros (pyop2/sparsity.pyx:209) (294 samples, 4.71%)</title><rect x="16.8748%" y="324" width="4.7070%" height="15" fill="rgb(205,185,37)"/><text x="17.1248%" y="334.50">fill_..</text></g><g><title>sparsity_CHKERR (pyop2/sparsity.pyx:86) (289 samples, 4.63%)</title><rect x="16.9549%" y="340" width="4.6270%" height="15" fill="rgb(238,207,15)"/><text x="17.2049%" y="350.50">spars..</text></g><g><title>MatSetValues (matrix.c:1393) (448 samples, 7.17%)</title><rect x="25.6164%" y="388" width="7.1726%" height="15" fill="rgb(213,199,42)"/><text x="25.8664%" y="398.50">MatSetValu..</text></g><g><title>MatSetValuesBlocked (matrix.c:1869) (479 samples, 7.67%)</title><rect x="25.3122%" y="372" width="7.6689%" height="15" fill="rgb(235,201,11)"/><text x="25.5622%" y="382.50">MatSetValu..</text></g><g><title>MatSetValuesBlockedLocal (matrix.c:2328) (641 samples, 10.26%)</title><rect x="23.4550%" y="356" width="10.2626%" height="15" fill="rgb(207,46,11)"/><text x="23.7050%" y="366.50">MatSetValuesBlo..</text></g><g><title>_init_block (pyop2/petsc_base.py:761) (1,116 samples, 17.87%)</title><rect x="16.8268%" y="292" width="17.8674%" height="15" fill="rgb(241,35,35)"/><text x="17.0768%" y="302.50">_init_block (pyop2/petsc_bas..</text></g><g><title>fill_with_zeros (pyop2/sparsity.pyx:175) (1,115 samples, 17.85%)</title><rect x="16.8428%" y="308" width="17.8514%" height="15" fill="rgb(243,32,47)"/><text x="17.0928%" y="318.50">fill_with_zeros (pyop2/spars..</text></g><g><title>fill_with_zeros (pyop2/sparsity.pyx:231) (811 samples, 12.98%)</title><rect x="21.7099%" y="324" width="12.9843%" height="15" fill="rgb(247,202,23)"/><text x="21.9599%" y="334.50">fill_with_zeros (pyo..</text></g><g><title>sparsity_CHKERR (pyop2/sparsity.pyx:86) (802 samples, 12.84%)</title><rect x="21.8540%" y="340" width="12.8402%" height="15" fill="rgb(219,102,11)"/><text x="22.1040%" y="350.50">sparsity_CHKERR (py..</text></g><g><title>__init__ (firedrake/variational_solver.py:207) (1,184 samples, 18.96%)</title><rect x="16.0903%" y="148" width="18.9561%" height="15" fill="rgb(243,110,44)"/><text x="16.3403%" y="158.50">__init__ (firedrake/variationa..</text></g><g><title>set_jacobian (firedrake/solving_utils.py:301) (1,184 samples, 18.96%)</title><rect x="16.0903%" y="164" width="18.9561%" height="15" fill="rgb(222,74,54)"/><text x="16.3403%" y="174.50">set_jacobian (firedrake/solvin..</text></g><g><title>__get__ (pyop2/utils.py:62) (1,184 samples, 18.96%)</title><rect x="16.0903%" y="180" width="18.9561%" height="15" fill="rgb(216,99,12)"/><text x="16.3403%" y="190.50">__get__ (pyop2/utils.py:62)</text></g><g><title>_jac (firedrake/solving_utils.py:502) (1,184 samples, 18.96%)</title><rect x="16.0903%" y="196" width="18.9561%" height="15" fill="rgb(226,22,26)"/><text x="16.3403%" y="206.50">_jac (firedrake/solving_utils...</text></g><g><title>allocate_matrix (firedrake/assemble.py:145) (1,184 samples, 18.96%)</title><rect x="16.0903%" y="212" width="18.9561%" height="15" fill="rgb(217,163,10)"/><text x="16.3403%" y="222.50">allocate_matrix (firedrake/ass..</text></g><g><title>get_matrix (firedrake/assemble.py:280) (1,152 samples, 18.44%)</title><rect x="16.6026%" y="228" width="18.4438%" height="15" fill="rgb(213,25,53)"/><text x="16.8526%" y="238.50">get_matrix (firedrake/assembl..</text></g><g><title>__init__ (firedrake/matrix.py:99) (1,152 samples, 18.44%)</title><rect x="16.6026%" y="244" width="18.4438%" height="15" fill="rgb(252,105,26)"/><text x="16.8526%" y="254.50">__init__ (firedrake/matrix.py..</text></g><g><title>__init__ (pyop2/petsc_base.py:603) (1,152 samples, 18.44%)</title><rect x="16.6026%" y="260" width="18.4438%" height="15" fill="rgb(220,39,43)"/><text x="16.8526%" y="270.50">__init__ (pyop2/petsc_base.py..</text></g><g><title>_init (pyop2/petsc_base.py:628) (1,152 samples, 18.44%)</title><rect x="16.6026%" y="276" width="18.4438%" height="15" fill="rgb(229,68,48)"/><text x="16.8526%" y="286.50">_init (pyop2/petsc_base.py:62..</text></g><g><title>_solve_varproblem (firedrake/solving.py:155) (1,381 samples, 22.11%)</title><rect x="13.0163%" y="100" width="22.1102%" height="15" fill="rgb(252,8,32)"/><text x="13.2663%" y="110.50">_solve_varproblem (firedrake/solvin..</text></g><g><title>wrapper (pyadjoint/tape.py:46) (1,381 samples, 22.11%)</title><rect x="13.0163%" y="116" width="22.1102%" height="15" fill="rgb(223,20,43)"/><text x="13.2663%" y="126.50">wrapper (pyadjoint/tape.py:46)</text></g><g><title>wrapper (firedrake/adjoint/variational_solver.py:34) (1,380 samples, 22.09%)</title><rect x="13.0323%" y="132" width="22.0941%" height="15" fill="rgb(229,81,49)"/><text x="13.2823%" y="142.50">wrapper (firedrake/adjoint/variatio..</text></g><g><title>MatSetValues (matrix.c:1393) (239 samples, 3.83%)</title><rect x="39.0330%" y="452" width="3.8264%" height="15" fill="rgb(236,28,36)"/><text x="39.2830%" y="462.50">MatS..</text></g><g><title>MatSetValuesBlocked (matrix.c:1869) (254 samples, 4.07%)</title><rect x="38.8088%" y="436" width="4.0666%" height="15" fill="rgb(249,185,26)"/><text x="39.0588%" y="446.50">MatS..</text></g><g><title>MatSetValuesBlockedLocal (matrix.c:2328) (331 samples, 5.30%)</title><rect x="37.9443%" y="420" width="5.2994%" height="15" fill="rgb(249,174,33)"/><text x="38.1943%" y="430.50">MatSet..</text></g><g><title>wrap_form00_cell_integral_otherwise (073b3cf74c5149dc75de4412398ed2_p7162.c:59) (446 samples, 7.14%)</title><rect x="36.5194%" y="404" width="7.1406%" height="15" fill="rgb(233,201,37)"/><text x="36.7694%" y="414.50">wrap_form0..</text></g><g><title>compute (pyop2/base.py:3579) (501 samples, 8.02%)</title><rect x="36.5034%" y="292" width="8.0211%" height="15" fill="rgb(221,78,26)"/><text x="36.7534%" y="302.50">compute (py..</text></g><g><title>_compute (pyop2/sequential.py:218) (501 samples, 8.02%)</title><rect x="36.5034%" y="308" width="8.0211%" height="15" fill="rgb(250,127,30)"/><text x="36.7534%" y="318.50">_compute (p..</text></g><g><title>__call__ (pyop2/sequential.py:106) (501 samples, 8.02%)</title><rect x="36.5034%" y="324" width="8.0211%" height="15" fill="rgb(230,49,44)"/><text x="36.7534%" y="334.50">__call__ (p..</text></g><g><title>0x7fe7195be894 (_ctypes.cpython-38-x86_64-linux-gnu.so) (501 samples, 8.02%)</title><rect x="36.5034%" y="340" width="8.0211%" height="15" fill="rgb(229,67,23)"/><text x="36.7534%" y="350.50">0x7fe7195be..</text></g><g><title>_ctypes_callproc (_ctypes.cpython-38-x86_64-linux-gnu.so) (501 samples, 8.02%)</title><rect x="36.5034%" y="356" width="8.0211%" height="15" fill="rgb(249,83,47)"/><text x="36.7534%" y="366.50">_ctypes_cal..</text></g><g><title>0x7fe7195a540a (libffi.so.7.1.0) (501 samples, 8.02%)</title><rect x="36.5034%" y="372" width="8.0211%" height="15" fill="rgb(215,43,3)"/><text x="36.7534%" y="382.50">0x7fe7195a5..</text></g><g><title>0x7fe7195a5ff5 (libffi.so.7.1.0) (501 samples, 8.02%)</title><rect x="36.5034%" y="388" width="8.0211%" height="15" fill="rgb(238,154,13)"/><text x="36.7534%" y="398.50">0x7fe7195a5..</text></g><g><title>form_jacobian (firedrake/solving_utils.py:452) (526 samples, 8.42%)</title><rect x="36.1671%" y="260" width="8.4214%" height="15" fill="rgb(219,56,2)"/><text x="36.4171%" y="270.50">form_jacobia..</text></g><g><title>thunk (firedrake/assemble.py:181) (508 samples, 8.13%)</title><rect x="36.4553%" y="276" width="8.1332%" height="15" fill="rgb(233,0,4)"/><text x="36.7053%" y="286.50">thunk (fire..</text></g><g><title>SNESComputeJacobian (snes.c:2715) (529 samples, 8.47%)</title><rect x="36.1351%" y="228" width="8.4694%" height="15" fill="rgb(235,30,7)"/><text x="36.3851%" y="238.50">SNESComputeJ..</text></g><g><title>PETSc_SNES_Jacobian (petsc4py.PETSc.c:39428) (529 samples, 8.47%)</title><rect x="36.1351%" y="244" width="8.4694%" height="15" fill="rgb(250,79,13)"/><text x="36.3851%" y="254.50">PETSc_SNES_J..</text></g><g><title>SNESSolve_KSPONLY (ksponly.c:43) (530 samples, 8.49%)</title><rect x="36.1351%" y="212" width="8.4854%" height="15" fill="rgb(211,146,34)"/><text x="36.3851%" y="222.50">SNESSolve_KS..</text></g><g><title>hypre_BoomerAMGCoarsenFalgout (par_coarsen.c:2005) (193 samples, 3.09%)</title><rect x="46.2376%" y="340" width="3.0900%" height="15" fill="rgb(228,22,38)"/><text x="46.4876%" y="350.50">hyp..</text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:1224) (300 samples, 4.80%)</title><rect x="46.2376%" y="324" width="4.8031%" height="15" fill="rgb(235,168,5)"/><text x="46.4876%" y="334.50">hypre_..</text></g><g><title>hypre_BoomerAMGCoarsenFalgout (par_coarsen.c:2008) (107 samples, 1.71%)</title><rect x="49.3276%" y="340" width="1.7131%" height="15" fill="rgb(221,155,16)"/><text x="49.5776%" y="350.50"></text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:2165) (177 samples, 2.83%)</title><rect x="51.0727%" y="324" width="2.8338%" height="15" fill="rgb(215,215,53)"/><text x="51.3227%" y="334.50">hy..</text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:2748) (357 samples, 5.72%)</title><rect x="53.9065%" y="324" width="5.7157%" height="15" fill="rgb(223,4,10)"/><text x="54.1565%" y="334.50">hypre_B..</text></g><g><title>KSPSolve_Private (itfunc.c:658) (938 samples, 15.02%)</title><rect x="44.6206%" y="244" width="15.0176%" height="15" fill="rgb(234,103,6)"/><text x="44.8706%" y="254.50">KSPSolve_Private (itfun..</text></g><g><title>KSPSetUp (itfunc.c:406) (936 samples, 14.99%)</title><rect x="44.6526%" y="260" width="14.9856%" height="15" fill="rgb(227,97,0)"/><text x="44.9026%" y="270.50">KSPSetUp (itfunc.c:406)</text></g><g><title>PCSetUp (precon.c:1009) (936 samples, 14.99%)</title><rect x="44.6526%" y="276" width="14.9856%" height="15" fill="rgb(234,150,53)"/><text x="44.9026%" y="286.50">PCSetUp (precon.c:1009)</text></g><g><title>PCSetUp_HYPRE (hypre.c:408) (899 samples, 14.39%)</title><rect x="45.2450%" y="292" width="14.3932%" height="15" fill="rgb(228,201,54)"/><text x="45.4950%" y="302.50">PCSetUp_HYPRE (hypre.c..</text></g><g><title>HYPRE_BoomerAMGSetup (HYPRE_parcsr_amg.c:51) (899 samples, 14.39%)</title><rect x="45.2450%" y="308" width="14.3932%" height="15" fill="rgb(222,22,37)"/><text x="45.4950%" y="318.50">HYPRE_BoomerAMGSetup (..</text></g><g><title>hypre_BoomerAMGCycle (par_cycle.c:589) (189 samples, 3.03%)</title><rect x="59.7182%" y="356" width="3.0259%" height="15" fill="rgb(237,53,32)"/><text x="59.9682%" y="366.50">hyp..</text></g><g><title>hypre_BoomerAMGRelaxIF (par_relax_interface.c:49) (188 samples, 3.01%)</title><rect x="59.7342%" y="372" width="3.0099%" height="15" fill="rgb(233,25,53)"/><text x="59.9842%" y="382.50">hyp..</text></g><g><title>KSPSolve_CG (cg.c:133) (244 samples, 3.91%)</title><rect x="59.7022%" y="260" width="3.9065%" height="15" fill="rgb(210,40,34)"/><text x="59.9522%" y="270.50">KSPS..</text></g><g><title>KSP_PCApply (kspimpl.h:283) (244 samples, 3.91%)</title><rect x="59.7022%" y="276" width="3.9065%" height="15" fill="rgb(241,220,44)"/><text x="59.9522%" y="286.50">KSP_..</text></g><g><title>PCApply (precon.c:444) (243 samples, 3.89%)</title><rect x="59.7182%" y="292" width="3.8905%" height="15" fill="rgb(235,28,35)"/><text x="59.9682%" y="302.50">PCAp..</text></g><g><title>PCApply_HYPRE (hypre.c:434) (243 samples, 3.89%)</title><rect x="59.7182%" y="308" width="3.8905%" height="15" fill="rgb(210,56,17)"/><text x="59.9682%" y="318.50">PCAp..</text></g><g><title>HYPRE_BoomerAMGSolve (HYPRE_parcsr_amg.c:69) (243 samples, 3.89%)</title><rect x="59.7182%" y="324" width="3.8905%" height="15" fill="rgb(224,130,29)"/><text x="59.9682%" y="334.50">HYPR..</text></g><g><title>hypre_BoomerAMGSolve (par_amg_solve.c:250) (243 samples, 3.89%)</title><rect x="59.7182%" y="340" width="3.8905%" height="15" fill="rgb(235,212,8)"/><text x="59.9682%" y="350.50">hypr..</text></g><g><title>MatMult_SeqAIJ (aij.c:1515) (81 samples, 1.30%)</title><rect x="64.0890%" y="308" width="1.2968%" height="15" fill="rgb(223,33,50)"/><text x="64.3390%" y="318.50"></text></g><g><title>KSPSolve_CG (cg.c:194) (92 samples, 1.47%)</title><rect x="63.9289%" y="260" width="1.4729%" height="15" fill="rgb(219,149,13)"/><text x="64.1789%" y="270.50"></text></g><g><title>KSP_MatMult (kspimpl.h:264) (92 samples, 1.47%)</title><rect x="63.9289%" y="276" width="1.4729%" height="15" fill="rgb(250,156,29)"/><text x="64.1789%" y="286.50"></text></g><g><title>MatMult (matrix.c:2421) (91 samples, 1.46%)</title><rect x="63.9449%" y="292" width="1.4569%" height="15" fill="rgb(216,193,19)"/><text x="64.1949%" y="302.50"></text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1929) (66 samples, 1.06%)</title><rect x="67.6913%" y="388" width="1.0567%" height="15" fill="rgb(216,135,14)"/><text x="67.9413%" y="398.50"></text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1932) (267 samples, 4.27%)</title><rect x="68.8120%" y="388" width="4.2747%" height="15" fill="rgb(241,47,5)"/><text x="69.0620%" y="398.50">hypre..</text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1935) (193 samples, 3.09%)</title><rect x="73.0868%" y="388" width="3.0900%" height="15" fill="rgb(233,42,35)"/><text x="73.3368%" y="398.50">hyp..</text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1942) (83 samples, 1.33%)</title><rect x="76.3689%" y="388" width="1.3289%" height="15" fill="rgb(231,13,6)"/><text x="76.6189%" y="398.50"></text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1955) (138 samples, 2.21%)</title><rect x="78.7704%" y="388" width="2.2094%" height="15" fill="rgb(207,181,40)"/><text x="79.0204%" y="398.50">h..</text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1958) (243 samples, 3.89%)</title><rect x="81.0439%" y="388" width="3.8905%" height="15" fill="rgb(254,173,49)"/><text x="81.2939%" y="398.50">hypr..</text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1961) (272 samples, 4.35%)</title><rect x="84.9344%" y="388" width="4.3548%" height="15" fill="rgb(221,1,38)"/><text x="85.1844%" y="398.50">hypre..</text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1968) (81 samples, 1.30%)</title><rect x="89.4332%" y="388" width="1.2968%" height="15" fill="rgb(206,124,46)"/><text x="89.6832%" y="398.50"></text></g><g><title>hypre_BoomerAMGCycle (par_cycle.c:589) (1,522 samples, 24.37%)</title><rect x="66.4105%" y="356" width="24.3676%" height="15" fill="rgb(249,21,11)"/><text x="66.6605%" y="366.50">hypre_BoomerAMGCycle (par_cycle.c:589)</text></g><g><title>hypre_BoomerAMGRelaxIF (par_relax_interface.c:49) (1,521 samples, 24.35%)</title><rect x="66.4265%" y="372" width="24.3516%" height="15" fill="rgb(222,201,40)"/><text x="66.6765%" y="382.50">hypre_BoomerAMGRelaxIF (par_relax_inter..</text></g><g><title>hypre_CSRMatrixMatvecOutOfPlace (csr_matvec.c:298) (134 samples, 2.15%)</title><rect x="90.9702%" y="388" width="2.1454%" height="15" fill="rgb(235,61,29)"/><text x="91.2202%" y="398.50">h..</text></g><g><title>hypre_ParCSRMatrixMatvecOutOfPlace (par_csr_matvec.c:298) (223 samples, 3.57%)</title><rect x="90.8581%" y="372" width="3.5703%" height="15" fill="rgb(219,207,3)"/><text x="91.1081%" y="382.50">hypr..</text></g><g><title>hypre_CSRMatrixMatvecOutOfPlace (csr_matvec.c:300) (82 samples, 1.31%)</title><rect x="93.1156%" y="388" width="1.3128%" height="15" fill="rgb(222,56,46)"/><text x="93.3656%" y="398.50"></text></g><g><title>hypre_BoomerAMGCycle (par_cycle.c:681) (227 samples, 3.63%)</title><rect x="90.8421%" y="356" width="3.6343%" height="15" fill="rgb(239,76,54)"/><text x="91.0921%" y="366.50">hypr..</text></g><g><title>hypre_ParCSRMatrixMatvecT (par_csr_matvec.c:594) (113 samples, 1.81%)</title><rect x="94.5565%" y="372" width="1.8092%" height="15" fill="rgb(231,124,27)"/><text x="94.8065%" y="382.50">h..</text></g><g><title>hypre_CSRMatrixMatvecT (csr_matvec.c:614) (90 samples, 1.44%)</title><rect x="94.9248%" y="388" width="1.4409%" height="15" fill="rgb(249,195,6)"/><text x="95.1748%" y="398.50"></text></g><g><title>hypre_BoomerAMGCycle (par_cycle.c:689) (121 samples, 1.94%)</title><rect x="94.4765%" y="356" width="1.9372%" height="15" fill="rgb(237,174,47)"/><text x="94.7265%" y="366.50">h..</text></g><g><title>PCApply_HYPRE (hypre.c:434) (1,948 samples, 31.19%)</title><rect x="66.3465%" y="308" width="31.1880%" height="15" fill="rgb(206,201,31)"/><text x="66.5965%" y="318.50">PCApply_HYPRE (hypre.c:434)</text></g><g><title>HYPRE_BoomerAMGSolve (HYPRE_parcsr_amg.c:69) (1,948 samples, 31.19%)</title><rect x="66.3465%" y="324" width="31.1880%" height="15" fill="rgb(231,57,52)"/><text x="66.5965%" y="334.50">HYPRE_BoomerAMGSolve (HYPRE_parcsr_amg.c:69)</text></g><g><title>hypre_BoomerAMGSolve (par_amg_solve.c:250) (1,948 samples, 31.19%)</title><rect x="66.3465%" y="340" width="31.1880%" height="15" fill="rgb(248,177,22)"/><text x="66.5965%" y="350.50">hypre_BoomerAMGSolve (par_amg_solve.c:250)</text></g><g><title>hypre_BoomerAMGCycle (par_cycle.c:725) (69 samples, 1.10%)</title><rect x="96.4297%" y="356" width="1.1047%" height="15" fill="rgb(215,211,37)"/><text x="96.6797%" y="366.50"></text></g><g><title>hypre_ParCSRMatrixMatvec (par_csr_matvec.c:357) (69 samples, 1.10%)</title><rect x="96.4297%" y="372" width="1.1047%" height="15" fill="rgb(241,128,51)"/><text x="96.6797%" y="382.50"></text></g><g><title>hypre_ParCSRMatrixMatvecOutOfPlace (par_csr_matvec.c:298) (69 samples, 1.10%)</title><rect x="96.4297%" y="388" width="1.1047%" height="15" fill="rgb(227,165,31)"/><text x="96.6797%" y="398.50"></text></g><g><title>KSP_PCApply (kspimpl.h:283) (1,952 samples, 31.25%)</title><rect x="66.2984%" y="276" width="31.2520%" height="15" fill="rgb(228,167,24)"/><text x="66.5484%" y="286.50">KSP_PCApply (kspimpl.h:283)</text></g><g><title>PCApply (precon.c:444) (1,952 samples, 31.25%)</title><rect x="66.2984%" y="292" width="31.2520%" height="15" fill="rgb(228,143,12)"/><text x="66.5484%" y="302.50">PCApply (precon.c:444)</text></g><g><title>KSPSolve_CG (cg.c:210) (1,953 samples, 31.27%)</title><rect x="66.2984%" y="260" width="31.2680%" height="15" fill="rgb(249,149,8)"/><text x="66.5484%" y="270.50">KSPSolve_CG (cg.c:210)</text></g><g><title>SNESSolve_KSPONLY (ksponly.c:51) (3,352 samples, 53.67%)</title><rect x="44.6206%" y="212" width="53.6663%" height="15" fill="rgb(243,35,44)"/><text x="44.8706%" y="222.50">SNESSolve_KSPONLY (ksponly.c:51)</text></g><g><title>KSPSolve (itfunc.c:889) (3,352 samples, 53.67%)</title><rect x="44.6206%" y="228" width="53.6663%" height="15" fill="rgb(246,89,9)"/><text x="44.8706%" y="238.50">KSPSolve (itfunc.c:889)</text></g><g><title>KSPSolve_Private (itfunc.c:719) (2,412 samples, 38.62%)</title><rect x="59.6702%" y="244" width="38.6167%" height="15" fill="rgb(233,213,13)"/><text x="59.9202%" y="254.50">KSPSolve_Private (itfunc.c:719)</text></g><g><title>solve (firedrake/variational_solver.py:271) (3,940 samples, 63.08%)</title><rect x="35.2546%" y="132" width="63.0804%" height="15" fill="rgb(233,141,41)"/><text x="35.5046%" y="142.50">solve (firedrake/variational_solver.py:271)</text></g><g><title>solve (petsc4py.PETSc.c:201060) (3,940 samples, 63.08%)</title><rect x="35.2546%" y="148" width="63.0804%" height="15" fill="rgb(239,167,4)"/><text x="35.5046%" y="158.50">solve (petsc4py.PETSc.c:201060)</text></g><g><title>solve (petsc4py.PETSc.c:201114) (3,940 samples, 63.08%)</title><rect x="35.2546%" y="164" width="63.0804%" height="15" fill="rgb(209,217,16)"/><text x="35.5046%" y="174.50">solve (petsc4py.PETSc.c:201114)</text></g><g><title>PETSc_CHKERR (petsc4py.PETSc.c:10267) (3,940 samples, 63.08%)</title><rect x="35.2546%" y="180" width="63.0804%" height="15" fill="rgb(219,88,35)"/><text x="35.5046%" y="190.50">PETSc_CHKERR (petsc4py.PETSc.c:10267)</text></g><g><title>SNESSolve (snes.c:4567) (3,940 samples, 63.08%)</title><rect x="35.2546%" y="196" width="63.0804%" height="15" fill="rgb(220,193,23)"/><text x="35.5046%" y="206.50">SNESSolve (snes.c:4567)</text></g><g><title>&lt;module&gt; (mod.py:61) (5,375 samples, 86.06%)</title><rect x="12.2959%" y="52" width="86.0551%" height="15" fill="rgb(230,90,52)"/><text x="12.5459%" y="62.50">&lt;module&gt; (mod.py:61)</text></g><g><title>wrapper (firedrake/adjoint/solving.py:50) (5,374 samples, 86.04%)</title><rect x="12.3119%" y="68" width="86.0391%" height="15" fill="rgb(252,106,19)"/><text x="12.5619%" y="78.50">wrapper (firedrake/adjoint/solving.py:50)</text></g><g><title>solve (firedrake/solving.py:129) (5,374 samples, 86.04%)</title><rect x="12.3119%" y="84" width="86.0391%" height="15" fill="rgb(206,74,20)"/><text x="12.5619%" y="94.50">solve (firedrake/solving.py:129)</text></g><g><title>_solve_varproblem (firedrake/solving.py:161) (3,949 samples, 63.22%)</title><rect x="35.1265%" y="100" width="63.2245%" height="15" fill="rgb(230,138,44)"/><text x="35.3765%" y="110.50">_solve_varproblem (firedrake/solving.py:161)</text></g><g><title>wrapper (firedrake/adjoint/variational_solver.py:75) (3,949 samples, 63.22%)</title><rect x="35.1265%" y="116" width="63.2245%" height="15" fill="rgb(235,182,43)"/><text x="35.3765%" y="126.50">wrapper (firedrake/adjoint/variational_solver.py:75)</text></g><g><title>clone (libc-2.31.so) (82 samples, 1.31%)</title><rect x="98.6551%" y="52" width="1.3128%" height="15" fill="rgb(242,16,51)"/><text x="98.9051%" y="62.50"></text></g><g><title>_bootstrap (threading.py:890) (82 samples, 1.31%)</title><rect x="98.6551%" y="68" width="1.3128%" height="15" fill="rgb(248,9,4)"/><text x="98.9051%" y="78.50"></text></g><g><title>_bootstrap_inner (threading.py:932) (82 samples, 1.31%)</title><rect x="98.6551%" y="84" width="1.3128%" height="15" fill="rgb(210,31,22)"/><text x="98.9051%" y="94.50"></text></g><g><title>run (threading.py:870) (82 samples, 1.31%)</title><rect x="98.6551%" y="100" width="1.3128%" height="15" fill="rgb(239,54,39)"/><text x="98.9051%" y="110.50"></text></g><g><title>_log_start_if_long (pytools/__init__.py:2424) (82 samples, 1.31%)</title><rect x="98.6551%" y="116" width="1.3128%" height="15" fill="rgb(230,99,41)"/><text x="98.9051%" y="126.50"></text></g><g><title>select (libc-2.31.so) (78 samples, 1.25%)</title><rect x="98.7192%" y="132" width="1.2488%" height="15" fill="rgb(253,106,12)"/><text x="98.9692%" y="142.50"></text></g><g><title>all (6,246 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(213,46,41)"/><text x="0.2500%" y="46.50"></text></g></svg></svg>
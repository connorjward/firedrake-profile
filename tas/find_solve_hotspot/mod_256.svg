<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1189.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1189.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;module&gt; (numpy/__init__.py:140) (27 samples, 1.06%)</title><rect x="0.1173%" y="532" width="1.0559%" height="15" fill="rgb(227,0,7)"/><text x="0.3673%" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (27 samples, 1.06%)</title><rect x="0.1173%" y="548" width="1.0559%" height="15" fill="rgb(217,0,24)"/><text x="0.3673%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (27 samples, 1.06%)</title><rect x="0.1173%" y="564" width="1.0559%" height="15" fill="rgb(221,193,54)"/><text x="0.3673%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (27 samples, 1.06%)</title><rect x="0.1173%" y="580" width="1.0559%" height="15" fill="rgb(248,212,6)"/><text x="0.3673%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (27 samples, 1.06%)</title><rect x="0.1173%" y="596" width="1.0559%" height="15" fill="rgb(208,68,35)"/><text x="0.3673%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (27 samples, 1.06%)</title><rect x="0.1173%" y="612" width="1.0559%" height="15" fill="rgb(232,128,0)"/><text x="0.3673%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (27 samples, 1.06%)</title><rect x="0.1173%" y="628" width="1.0559%" height="15" fill="rgb(207,160,47)"/><text x="0.3673%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (27 samples, 1.06%)</title><rect x="0.1173%" y="644" width="1.0559%" height="15" fill="rgb(228,23,34)"/><text x="0.3673%" y="654.50"></text></g><g><title>&lt;module&gt; (firedrake/__init__.py:19) (33 samples, 1.29%)</title><rect x="0.0391%" y="148" width="1.2906%" height="15" fill="rgb(218,30,26)"/><text x="0.2891%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (33 samples, 1.29%)</title><rect x="0.0391%" y="164" width="1.2906%" height="15" fill="rgb(220,122,19)"/><text x="0.2891%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (33 samples, 1.29%)</title><rect x="0.0391%" y="180" width="1.2906%" height="15" fill="rgb(250,228,42)"/><text x="0.2891%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (33 samples, 1.29%)</title><rect x="0.0391%" y="196" width="1.2906%" height="15" fill="rgb(240,193,28)"/><text x="0.2891%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (33 samples, 1.29%)</title><rect x="0.0391%" y="212" width="1.2906%" height="15" fill="rgb(216,20,37)"/><text x="0.2891%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (33 samples, 1.29%)</title><rect x="0.0391%" y="228" width="1.2906%" height="15" fill="rgb(206,188,39)"/><text x="0.2891%" y="238.50"></text></g><g><title>&lt;module&gt; (firedrake/petsc.py:4) (33 samples, 1.29%)</title><rect x="0.0391%" y="244" width="1.2906%" height="15" fill="rgb(217,207,13)"/><text x="0.2891%" y="254.50"></text></g><g><title>init (petsc4py/__init__.py:42) (33 samples, 1.29%)</title><rect x="0.0391%" y="260" width="1.2906%" height="15" fill="rgb(231,73,38)"/><text x="0.2891%" y="270.50"></text></g><g><title>ImportPETSc (petsc4py/lib/__init__.py:29) (33 samples, 1.29%)</title><rect x="0.0391%" y="276" width="1.2906%" height="15" fill="rgb(225,20,46)"/><text x="0.2891%" y="286.50"></text></g><g><title>Import (petsc4py/lib/__init__.py:73) (33 samples, 1.29%)</title><rect x="0.0391%" y="292" width="1.2906%" height="15" fill="rgb(210,31,41)"/><text x="0.2891%" y="302.50"></text></g><g><title>import_module (petsc4py/lib/__init__.py:58) (33 samples, 1.29%)</title><rect x="0.0391%" y="308" width="1.2906%" height="15" fill="rgb(221,200,47)"/><text x="0.2891%" y="318.50"></text></g><g><title>load_module (imp.py:242) (33 samples, 1.29%)</title><rect x="0.0391%" y="324" width="1.2906%" height="15" fill="rgb(226,26,5)"/><text x="0.2891%" y="334.50"></text></g><g><title>load_dynamic (imp.py:342) (33 samples, 1.29%)</title><rect x="0.0391%" y="340" width="1.2906%" height="15" fill="rgb(249,33,26)"/><text x="0.2891%" y="350.50"></text></g><g><title>_load (&lt;frozen importlib._bootstrap&gt;:702) (33 samples, 1.29%)</title><rect x="0.0391%" y="356" width="1.2906%" height="15" fill="rgb(235,183,28)"/><text x="0.2891%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (32 samples, 1.25%)</title><rect x="0.0782%" y="372" width="1.2515%" height="15" fill="rgb(221,5,38)"/><text x="0.3282%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (32 samples, 1.25%)</title><rect x="0.0782%" y="388" width="1.2515%" height="15" fill="rgb(247,18,42)"/><text x="0.3282%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (32 samples, 1.25%)</title><rect x="0.0782%" y="404" width="1.2515%" height="15" fill="rgb(241,131,45)"/><text x="0.3282%" y="414.50"></text></g><g><title>__pyx_pymod_exec_PETSc (petsc4py.PETSc.c:326339) (31 samples, 1.21%)</title><rect x="0.1173%" y="420" width="1.2124%" height="15" fill="rgb(249,31,29)"/><text x="0.3673%" y="430.50"></text></g><g><title>__Pyx_modinit_type_init_code (petsc4py.PETSc.c:325821) (31 samples, 1.21%)</title><rect x="0.1173%" y="436" width="1.2124%" height="15" fill="rgb(225,111,53)"/><text x="0.3673%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (31 samples, 1.21%)</title><rect x="0.1173%" y="452" width="1.2124%" height="15" fill="rgb(238,160,17)"/><text x="0.3673%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (31 samples, 1.21%)</title><rect x="0.1173%" y="468" width="1.2124%" height="15" fill="rgb(214,148,48)"/><text x="0.3673%" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (31 samples, 1.21%)</title><rect x="0.1173%" y="484" width="1.2124%" height="15" fill="rgb(232,36,49)"/><text x="0.3673%" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (31 samples, 1.21%)</title><rect x="0.1173%" y="500" width="1.2124%" height="15" fill="rgb(209,103,24)"/><text x="0.3673%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (31 samples, 1.21%)</title><rect x="0.1173%" y="516" width="1.2124%" height="15" fill="rgb(229,88,8)"/><text x="0.3673%" y="526.50"></text></g><g><title>&lt;module&gt; (pyop2/__init__.py:4) (35 samples, 1.37%)</title><rect x="2.2292%" y="244" width="1.3688%" height="15" fill="rgb(213,181,19)"/><text x="2.4792%" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (35 samples, 1.37%)</title><rect x="2.2292%" y="260" width="1.3688%" height="15" fill="rgb(254,191,54)"/><text x="2.4792%" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (35 samples, 1.37%)</title><rect x="2.2292%" y="276" width="1.3688%" height="15" fill="rgb(241,83,37)"/><text x="2.4792%" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (35 samples, 1.37%)</title><rect x="2.2292%" y="292" width="1.3688%" height="15" fill="rgb(233,36,39)"/><text x="2.4792%" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (35 samples, 1.37%)</title><rect x="2.2292%" y="308" width="1.3688%" height="15" fill="rgb(226,3,54)"/><text x="2.4792%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (35 samples, 1.37%)</title><rect x="2.2292%" y="324" width="1.3688%" height="15" fill="rgb(245,192,40)"/><text x="2.4792%" y="334.50"></text></g><g><title>&lt;module&gt; (pyop2/op2.py:42) (35 samples, 1.37%)</title><rect x="2.2292%" y="340" width="1.3688%" height="15" fill="rgb(238,167,29)"/><text x="2.4792%" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (35 samples, 1.37%)</title><rect x="2.2292%" y="356" width="1.3688%" height="15" fill="rgb(232,182,51)"/><text x="2.4792%" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (35 samples, 1.37%)</title><rect x="2.2292%" y="372" width="1.3688%" height="15" fill="rgb(231,60,39)"/><text x="2.4792%" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (35 samples, 1.37%)</title><rect x="2.2292%" y="388" width="1.3688%" height="15" fill="rgb(208,69,12)"/><text x="2.4792%" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (35 samples, 1.37%)</title><rect x="2.2292%" y="404" width="1.3688%" height="15" fill="rgb(235,93,37)"/><text x="2.4792%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (35 samples, 1.37%)</title><rect x="2.2292%" y="420" width="1.3688%" height="15" fill="rgb(213,116,39)"/><text x="2.4792%" y="430.50"></text></g><g><title>&lt;module&gt; (pyop2/sequential.py:42) (35 samples, 1.37%)</title><rect x="2.2292%" y="436" width="1.3688%" height="15" fill="rgb(222,207,29)"/><text x="2.4792%" y="446.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (35 samples, 1.37%)</title><rect x="2.2292%" y="452" width="1.3688%" height="15" fill="rgb(206,96,30)"/><text x="2.4792%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (35 samples, 1.37%)</title><rect x="2.2292%" y="468" width="1.3688%" height="15" fill="rgb(218,138,4)"/><text x="2.4792%" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (35 samples, 1.37%)</title><rect x="2.2292%" y="484" width="1.3688%" height="15" fill="rgb(250,191,14)"/><text x="2.4792%" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (35 samples, 1.37%)</title><rect x="2.2292%" y="500" width="1.3688%" height="15" fill="rgb(239,60,40)"/><text x="2.4792%" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (35 samples, 1.37%)</title><rect x="2.2292%" y="516" width="1.3688%" height="15" fill="rgb(206,27,48)"/><text x="2.4792%" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (35 samples, 1.37%)</title><rect x="2.2292%" y="532" width="1.3688%" height="15" fill="rgb(225,35,8)"/><text x="2.4792%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (35 samples, 1.37%)</title><rect x="2.2292%" y="548" width="1.3688%" height="15" fill="rgb(250,213,24)"/><text x="2.4792%" y="558.50"></text></g><g><title>&lt;module&gt; (pyop2/base.py:64) (34 samples, 1.33%)</title><rect x="2.2683%" y="564" width="1.3297%" height="15" fill="rgb(247,123,22)"/><text x="2.5183%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (34 samples, 1.33%)</title><rect x="2.2683%" y="580" width="1.3297%" height="15" fill="rgb(231,138,38)"/><text x="2.5183%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (34 samples, 1.33%)</title><rect x="2.2683%" y="596" width="1.3297%" height="15" fill="rgb(231,145,46)"/><text x="2.5183%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (34 samples, 1.33%)</title><rect x="2.2683%" y="612" width="1.3297%" height="15" fill="rgb(251,118,11)"/><text x="2.5183%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (34 samples, 1.33%)</title><rect x="2.2683%" y="628" width="1.3297%" height="15" fill="rgb(217,147,25)"/><text x="2.5183%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (34 samples, 1.33%)</title><rect x="2.2683%" y="644" width="1.3297%" height="15" fill="rgb(247,81,37)"/><text x="2.5183%" y="654.50"></text></g><g><title>&lt;module&gt; (firedrake/__init__.py:54) (36 samples, 1.41%)</title><rect x="2.2292%" y="148" width="1.4079%" height="15" fill="rgb(209,12,38)"/><text x="2.4792%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (36 samples, 1.41%)</title><rect x="2.2292%" y="164" width="1.4079%" height="15" fill="rgb(227,1,9)"/><text x="2.4792%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (36 samples, 1.41%)</title><rect x="2.2292%" y="180" width="1.4079%" height="15" fill="rgb(248,47,43)"/><text x="2.4792%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (36 samples, 1.41%)</title><rect x="2.2292%" y="196" width="1.4079%" height="15" fill="rgb(221,10,30)"/><text x="2.4792%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (36 samples, 1.41%)</title><rect x="2.2292%" y="212" width="1.4079%" height="15" fill="rgb(210,229,1)"/><text x="2.4792%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (36 samples, 1.41%)</title><rect x="2.2292%" y="228" width="1.4079%" height="15" fill="rgb(222,148,37)"/><text x="2.4792%" y="238.50"></text></g><g><title>&lt;module&gt; (FIAT/polynomial_set.py:19) (45 samples, 1.76%)</title><rect x="3.6762%" y="852" width="1.7599%" height="15" fill="rgb(234,67,33)"/><text x="3.9262%" y="862.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (45 samples, 1.76%)</title><rect x="3.6762%" y="868" width="1.7599%" height="15" fill="rgb(247,98,35)"/><text x="3.9262%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (45 samples, 1.76%)</title><rect x="3.6762%" y="884" width="1.7599%" height="15" fill="rgb(247,138,52)"/><text x="3.9262%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (45 samples, 1.76%)</title><rect x="3.6762%" y="900" width="1.7599%" height="15" fill="rgb(213,79,30)"/><text x="3.9262%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (44 samples, 1.72%)</title><rect x="3.7153%" y="916" width="1.7208%" height="15" fill="rgb(246,177,23)"/><text x="3.9653%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (44 samples, 1.72%)</title><rect x="3.7153%" y="932" width="1.7208%" height="15" fill="rgb(230,62,27)"/><text x="3.9653%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (44 samples, 1.72%)</title><rect x="3.7153%" y="948" width="1.7208%" height="15" fill="rgb(216,154,8)"/><text x="3.9653%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (44 samples, 1.72%)</title><rect x="3.7153%" y="964" width="1.7208%" height="15" fill="rgb(244,35,45)"/><text x="3.9653%" y="974.50"></text></g><g><title>&lt;module&gt; (FIAT/expansions.py:12) (44 samples, 1.72%)</title><rect x="3.7153%" y="980" width="1.7208%" height="15" fill="rgb(251,115,12)"/><text x="3.9653%" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (44 samples, 1.72%)</title><rect x="3.7153%" y="996" width="1.7208%" height="15" fill="rgb(240,54,50)"/><text x="3.9653%" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (44 samples, 1.72%)</title><rect x="3.7153%" y="1012" width="1.7208%" height="15" fill="rgb(233,84,52)"/><text x="3.9653%" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (44 samples, 1.72%)</title><rect x="3.7153%" y="1028" width="1.7208%" height="15" fill="rgb(207,117,47)"/><text x="3.9653%" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (44 samples, 1.72%)</title><rect x="3.7153%" y="1044" width="1.7208%" height="15" fill="rgb(249,43,39)"/><text x="3.9653%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (44 samples, 1.72%)</title><rect x="3.7153%" y="1060" width="1.7208%" height="15" fill="rgb(209,38,44)"/><text x="3.9653%" y="1070.50"></text></g><g><title>&lt;module&gt; (sympy/__init__.py:72) (26 samples, 1.02%)</title><rect x="4.4192%" y="1076" width="1.0168%" height="15" fill="rgb(236,212,23)"/><text x="4.6692%" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (26 samples, 1.02%)</title><rect x="4.4192%" y="1092" width="1.0168%" height="15" fill="rgb(242,79,21)"/><text x="4.6692%" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (26 samples, 1.02%)</title><rect x="4.4192%" y="1108" width="1.0168%" height="15" fill="rgb(211,96,35)"/><text x="4.6692%" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (26 samples, 1.02%)</title><rect x="4.4192%" y="1124" width="1.0168%" height="15" fill="rgb(253,215,40)"/><text x="4.6692%" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (26 samples, 1.02%)</title><rect x="4.4192%" y="1140" width="1.0168%" height="15" fill="rgb(211,81,21)"/><text x="4.6692%" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (26 samples, 1.02%)</title><rect x="4.4192%" y="1156" width="1.0168%" height="15" fill="rgb(208,190,38)"/><text x="4.6692%" y="1166.50"></text></g><g><title>&lt;module&gt; (tsfc/driver.py:21) (48 samples, 1.88%)</title><rect x="3.6371%" y="564" width="1.8772%" height="15" fill="rgb(235,213,38)"/><text x="3.8871%" y="574.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (48 samples, 1.88%)</title><rect x="3.6371%" y="580" width="1.8772%" height="15" fill="rgb(237,122,38)"/><text x="3.8871%" y="590.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (48 samples, 1.88%)</title><rect x="3.6371%" y="596" width="1.8772%" height="15" fill="rgb(244,218,35)"/><text x="3.8871%" y="606.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (48 samples, 1.88%)</title><rect x="3.6371%" y="612" width="1.8772%" height="15" fill="rgb(240,68,47)"/><text x="3.8871%" y="622.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (48 samples, 1.88%)</title><rect x="3.6371%" y="628" width="1.8772%" height="15" fill="rgb(210,16,53)"/><text x="3.8871%" y="638.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (48 samples, 1.88%)</title><rect x="3.6371%" y="644" width="1.8772%" height="15" fill="rgb(235,124,12)"/><text x="3.8871%" y="654.50">_..</text></g><g><title>&lt;module&gt; (FIAT/__init__.py:8) (47 samples, 1.84%)</title><rect x="3.6762%" y="660" width="1.8381%" height="15" fill="rgb(224,169,11)"/><text x="3.9262%" y="670.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (47 samples, 1.84%)</title><rect x="3.6762%" y="676" width="1.8381%" height="15" fill="rgb(250,166,2)"/><text x="3.9262%" y="686.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (47 samples, 1.84%)</title><rect x="3.6762%" y="692" width="1.8381%" height="15" fill="rgb(242,216,29)"/><text x="3.9262%" y="702.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (47 samples, 1.84%)</title><rect x="3.6762%" y="708" width="1.8381%" height="15" fill="rgb(230,116,27)"/><text x="3.9262%" y="718.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (47 samples, 1.84%)</title><rect x="3.6762%" y="724" width="1.8381%" height="15" fill="rgb(228,99,48)"/><text x="3.9262%" y="734.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (47 samples, 1.84%)</title><rect x="3.6762%" y="740" width="1.8381%" height="15" fill="rgb(253,11,6)"/><text x="3.9262%" y="750.50">_..</text></g><g><title>&lt;module&gt; (FIAT/finite_element.py:13) (47 samples, 1.84%)</title><rect x="3.6762%" y="756" width="1.8381%" height="15" fill="rgb(247,143,39)"/><text x="3.9262%" y="766.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (47 samples, 1.84%)</title><rect x="3.6762%" y="772" width="1.8381%" height="15" fill="rgb(236,97,10)"/><text x="3.9262%" y="782.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (47 samples, 1.84%)</title><rect x="3.6762%" y="788" width="1.8381%" height="15" fill="rgb(233,208,19)"/><text x="3.9262%" y="798.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (47 samples, 1.84%)</title><rect x="3.6762%" y="804" width="1.8381%" height="15" fill="rgb(216,164,2)"/><text x="3.9262%" y="814.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (47 samples, 1.84%)</title><rect x="3.6762%" y="820" width="1.8381%" height="15" fill="rgb(220,129,5)"/><text x="3.9262%" y="830.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (47 samples, 1.84%)</title><rect x="3.6762%" y="836" width="1.8381%" height="15" fill="rgb(242,17,10)"/><text x="3.9262%" y="846.50">_..</text></g><g><title>&lt;module&gt; (firedrake/assemble.py:10) (63 samples, 2.46%)</title><rect x="3.6371%" y="244" width="2.4638%" height="15" fill="rgb(242,107,0)"/><text x="3.8871%" y="254.50">&lt;m..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (63 samples, 2.46%)</title><rect x="3.6371%" y="260" width="2.4638%" height="15" fill="rgb(251,28,31)"/><text x="3.8871%" y="270.50">_h..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (63 samples, 2.46%)</title><rect x="3.6371%" y="276" width="2.4638%" height="15" fill="rgb(233,223,10)"/><text x="3.8871%" y="286.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (63 samples, 2.46%)</title><rect x="3.6371%" y="292" width="2.4638%" height="15" fill="rgb(215,21,27)"/><text x="3.8871%" y="302.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (63 samples, 2.46%)</title><rect x="3.6371%" y="308" width="2.4638%" height="15" fill="rgb(232,23,21)"/><text x="3.8871%" y="318.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (63 samples, 2.46%)</title><rect x="3.6371%" y="324" width="2.4638%" height="15" fill="rgb(244,5,23)"/><text x="3.8871%" y="334.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (63 samples, 2.46%)</title><rect x="3.6371%" y="340" width="2.4638%" height="15" fill="rgb(226,81,46)"/><text x="3.8871%" y="350.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (63 samples, 2.46%)</title><rect x="3.6371%" y="356" width="2.4638%" height="15" fill="rgb(247,70,30)"/><text x="3.8871%" y="366.50">_c..</text></g><g><title>&lt;module&gt; (firedrake/assemble_expressions.py:15) (63 samples, 2.46%)</title><rect x="3.6371%" y="372" width="2.4638%" height="15" fill="rgb(212,68,19)"/><text x="3.8871%" y="382.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (63 samples, 2.46%)</title><rect x="3.6371%" y="388" width="2.4638%" height="15" fill="rgb(240,187,13)"/><text x="3.8871%" y="398.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (63 samples, 2.46%)</title><rect x="3.6371%" y="404" width="2.4638%" height="15" fill="rgb(223,113,26)"/><text x="3.8871%" y="414.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (63 samples, 2.46%)</title><rect x="3.6371%" y="420" width="2.4638%" height="15" fill="rgb(206,192,2)"/><text x="3.8871%" y="430.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (63 samples, 2.46%)</title><rect x="3.6371%" y="436" width="2.4638%" height="15" fill="rgb(241,108,4)"/><text x="3.8871%" y="446.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (63 samples, 2.46%)</title><rect x="3.6371%" y="452" width="2.4638%" height="15" fill="rgb(247,173,49)"/><text x="3.8871%" y="462.50">_c..</text></g><g><title>&lt;module&gt; (tsfc/__init__.py:1) (63 samples, 2.46%)</title><rect x="3.6371%" y="468" width="2.4638%" height="15" fill="rgb(224,114,35)"/><text x="3.8871%" y="478.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (63 samples, 2.46%)</title><rect x="3.6371%" y="484" width="2.4638%" height="15" fill="rgb(245,159,27)"/><text x="3.8871%" y="494.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (63 samples, 2.46%)</title><rect x="3.6371%" y="500" width="2.4638%" height="15" fill="rgb(245,172,44)"/><text x="3.8871%" y="510.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (63 samples, 2.46%)</title><rect x="3.6371%" y="516" width="2.4638%" height="15" fill="rgb(236,23,11)"/><text x="3.8871%" y="526.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (63 samples, 2.46%)</title><rect x="3.6371%" y="532" width="2.4638%" height="15" fill="rgb(205,117,38)"/><text x="3.8871%" y="542.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (63 samples, 2.46%)</title><rect x="3.6371%" y="548" width="2.4638%" height="15" fill="rgb(237,72,25)"/><text x="3.8871%" y="558.50">_c..</text></g><g><title>&lt;module&gt; (firedrake/__init__.py:57) (64 samples, 2.50%)</title><rect x="3.6371%" y="148" width="2.5029%" height="15" fill="rgb(244,70,9)"/><text x="3.8871%" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (64 samples, 2.50%)</title><rect x="3.6371%" y="164" width="2.5029%" height="15" fill="rgb(217,125,39)"/><text x="3.8871%" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (64 samples, 2.50%)</title><rect x="3.6371%" y="180" width="2.5029%" height="15" fill="rgb(235,36,10)"/><text x="3.8871%" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (64 samples, 2.50%)</title><rect x="3.6371%" y="196" width="2.5029%" height="15" fill="rgb(251,123,47)"/><text x="3.8871%" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (64 samples, 2.50%)</title><rect x="3.6371%" y="212" width="2.5029%" height="15" fill="rgb(221,13,13)"/><text x="3.8871%" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (64 samples, 2.50%)</title><rect x="3.6371%" y="228" width="2.5029%" height="15" fill="rgb(238,131,9)"/><text x="3.8871%" y="238.50">_c..</text></g><g><title>&lt;module&gt; (firedrake/__init__.py:79) (28 samples, 1.10%)</title><rect x="6.2573%" y="148" width="1.0950%" height="15" fill="rgb(211,50,8)"/><text x="6.5073%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (28 samples, 1.10%)</title><rect x="6.2573%" y="164" width="1.0950%" height="15" fill="rgb(245,182,24)"/><text x="6.5073%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (28 samples, 1.10%)</title><rect x="6.2573%" y="180" width="1.0950%" height="15" fill="rgb(242,14,37)"/><text x="6.5073%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (28 samples, 1.10%)</title><rect x="6.2573%" y="196" width="1.0950%" height="15" fill="rgb(246,228,12)"/><text x="6.5073%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (28 samples, 1.10%)</title><rect x="6.2573%" y="212" width="1.0950%" height="15" fill="rgb(213,55,15)"/><text x="6.5073%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (28 samples, 1.10%)</title><rect x="6.2573%" y="228" width="1.0950%" height="15" fill="rgb(209,9,3)"/><text x="6.5073%" y="238.50"></text></g><g><title>&lt;module&gt; (firedrake/plot.py:3) (28 samples, 1.10%)</title><rect x="6.2573%" y="244" width="1.0950%" height="15" fill="rgb(230,59,30)"/><text x="6.5073%" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (28 samples, 1.10%)</title><rect x="6.2573%" y="260" width="1.0950%" height="15" fill="rgb(209,121,21)"/><text x="6.5073%" y="270.50"></text></g><g><title>&lt;module&gt; (mod.py:1) (192 samples, 7.51%)</title><rect x="0.0000%" y="52" width="7.5088%" height="15" fill="rgb(220,109,13)"/><text x="0.2500%" y="62.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (192 samples, 7.51%)</title><rect x="0.0000%" y="68" width="7.5088%" height="15" fill="rgb(232,18,1)"/><text x="0.2500%" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (192 samples, 7.51%)</title><rect x="0.0000%" y="84" width="7.5088%" height="15" fill="rgb(215,41,42)"/><text x="0.2500%" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (192 samples, 7.51%)</title><rect x="0.0000%" y="100" width="7.5088%" height="15" fill="rgb(224,123,36)"/><text x="0.2500%" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (192 samples, 7.51%)</title><rect x="0.0000%" y="116" width="7.5088%" height="15" fill="rgb(240,125,3)"/><text x="0.2500%" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (192 samples, 7.51%)</title><rect x="0.0000%" y="132" width="7.5088%" height="15" fill="rgb(205,98,50)"/><text x="0.2500%" y="142.50">_call_with..</text></g><g><title>DMPlexInterpolate (plexinterpolate.c:1322) (36 samples, 1.41%)</title><rect x="8.1345%" y="212" width="1.4079%" height="15" fill="rgb(205,185,37)"/><text x="8.3845%" y="222.50"></text></g><g><title>RectangleMesh (firedrake/utility_meshes.py:392) (59 samples, 2.31%)</title><rect x="7.7434%" y="100" width="2.3074%" height="15" fill="rgb(238,207,15)"/><text x="7.9934%" y="110.50">R..</text></g><g><title>_from_cell_list (firedrake/mesh.py:326) (59 samples, 2.31%)</title><rect x="7.7434%" y="116" width="2.3074%" height="15" fill="rgb(213,199,42)"/><text x="7.9934%" y="126.50">_..</text></g><g><title>createFromCellList (petsc4py.PETSc.c:261917) (59 samples, 2.31%)</title><rect x="7.7434%" y="132" width="2.3074%" height="15" fill="rgb(235,201,11)"/><text x="7.9934%" y="142.50">c..</text></g><g><title>createFromCellList (petsc4py.PETSc.c:262225) (59 samples, 2.31%)</title><rect x="7.7434%" y="148" width="2.3074%" height="15" fill="rgb(207,46,11)"/><text x="7.9934%" y="158.50">c..</text></g><g><title>PETSc_CHKERR (petsc4py.PETSc.c:10267) (59 samples, 2.31%)</title><rect x="7.7434%" y="164" width="2.3074%" height="15" fill="rgb(241,35,35)"/><text x="7.9934%" y="174.50">P..</text></g><g><title>DMPlexCreateFromCellList (plexcreate.c:3391) (59 samples, 2.31%)</title><rect x="7.7434%" y="180" width="2.3074%" height="15" fill="rgb(243,32,47)"/><text x="7.9934%" y="190.50">D..</text></g><g><title>DMPlexCreateFromCellListPetsc (plexcreate.c:3350) (49 samples, 1.92%)</title><rect x="8.1345%" y="196" width="1.9163%" height="15" fill="rgb(247,202,23)"/><text x="8.3845%" y="206.50">D..</text></g><g><title>&lt;module&gt; (mod.py:14) (81 samples, 3.17%)</title><rect x="7.5088%" y="52" width="3.1678%" height="15" fill="rgb(219,102,11)"/><text x="7.7588%" y="62.50">&lt;mo..</text></g><g><title>UnitSquareMesh (firedrake/utility_meshes.py:459) (81 samples, 3.17%)</title><rect x="7.5088%" y="68" width="3.1678%" height="15" fill="rgb(243,110,44)"/><text x="7.7588%" y="78.50">Uni..</text></g><g><title>SquareMesh (firedrake/utility_meshes.py:435) (81 samples, 3.17%)</title><rect x="7.5088%" y="84" width="3.1678%" height="15" fill="rgb(222,74,54)"/><text x="7.7588%" y="94.50">Squ..</text></g><g><title>callback (firedrake/mesh.py:1672) (27 samples, 1.06%)</title><rect x="10.6766%" y="148" width="1.0559%" height="15" fill="rgb(216,99,12)"/><text x="10.9266%" y="158.50"></text></g><g><title>init (&lt;decorator-gen-26&gt;:2) (27 samples, 1.06%)</title><rect x="10.6766%" y="164" width="1.0559%" height="15" fill="rgb(226,22,26)"/><text x="10.9266%" y="174.50"></text></g><g><title>wrapper (pyop2/profiling.py:60) (27 samples, 1.06%)</title><rect x="10.6766%" y="180" width="1.0559%" height="15" fill="rgb(217,163,10)"/><text x="10.9266%" y="190.50"></text></g><g><title>init (firedrake/mesh.py:387) (27 samples, 1.06%)</title><rect x="10.6766%" y="196" width="1.0559%" height="15" fill="rgb(213,25,53)"/><text x="10.9266%" y="206.50"></text></g><g><title>closure_ordering (firedrake/cython/dmcommon.pyx:446) (26 samples, 1.02%)</title><rect x="12.8275%" y="420" width="1.0168%" height="15" fill="rgb(252,105,26)"/><text x="13.0775%" y="430.50"></text></g><g><title>_facets (firedrake/mesh.py:857) (38 samples, 1.49%)</title><rect x="12.4364%" y="356" width="1.4861%" height="15" fill="rgb(220,39,43)"/><text x="12.6864%" y="366.50"></text></g><g><title>__get__ (pyop2/utils.py:62) (38 samples, 1.49%)</title><rect x="12.4364%" y="372" width="1.4861%" height="15" fill="rgb(229,68,48)"/><text x="12.6864%" y="382.50"></text></g><g><title>cell_closure (firedrake/mesh.py:802) (37 samples, 1.45%)</title><rect x="12.4756%" y="388" width="1.4470%" height="15" fill="rgb(252,8,32)"/><text x="12.7256%" y="398.50"></text></g><g><title>closure_ordering (firedrake/cython/dmcommon.pyx:301) (37 samples, 1.45%)</title><rect x="12.4756%" y="404" width="1.4470%" height="15" fill="rgb(223,20,43)"/><text x="12.7256%" y="414.50"></text></g><g><title>get_map_cache (firedrake/functionspacedata.py:179) (47 samples, 1.84%)</title><rect x="12.1236%" y="308" width="1.8381%" height="15" fill="rgb(229,81,49)"/><text x="12.3736%" y="318.50">g..</text></g><g><title>__get__ (pyop2/utils.py:62) (47 samples, 1.84%)</title><rect x="12.1236%" y="324" width="1.8381%" height="15" fill="rgb(236,28,36)"/><text x="12.3736%" y="334.50">_..</text></g><g><title>interior_facets (firedrake/mesh.py:873) (47 samples, 1.84%)</title><rect x="12.1236%" y="340" width="1.8381%" height="15" fill="rgb(249,185,26)"/><text x="12.3736%" y="350.50">i..</text></g><g><title>__init__ (firedrake/functionspacedata.py:420) (48 samples, 1.88%)</title><rect x="12.1236%" y="260" width="1.8772%" height="15" fill="rgb(249,174,33)"/><text x="12.3736%" y="270.50">_..</text></g><g><title>get_map_cache (&lt;decorator-gen-34&gt;:2) (48 samples, 1.88%)</title><rect x="12.1236%" y="276" width="1.8772%" height="15" fill="rgb(233,201,37)"/><text x="12.3736%" y="286.50">g..</text></g><g><title>cached (firedrake/functionspacedata.py:53) (48 samples, 1.88%)</title><rect x="12.1236%" y="292" width="1.8772%" height="15" fill="rgb(221,78,26)"/><text x="12.3736%" y="302.50">c..</text></g><g><title>&lt;module&gt; (mod.py:15) (86 samples, 3.36%)</title><rect x="10.6766%" y="52" width="3.3633%" height="15" fill="rgb(250,127,30)"/><text x="10.9266%" y="62.50">&lt;mo..</text></g><g><title>FunctionSpace (&lt;decorator-gen-24&gt;:2) (86 samples, 3.36%)</title><rect x="10.6766%" y="68" width="3.3633%" height="15" fill="rgb(230,49,44)"/><text x="10.9266%" y="78.50">Fun..</text></g><g><title>wrapper (pyop2/profiling.py:60) (86 samples, 3.36%)</title><rect x="10.6766%" y="84" width="3.3633%" height="15" fill="rgb(229,67,23)"/><text x="10.9266%" y="94.50">wra..</text></g><g><title>FunctionSpace (firedrake/functionspace.py:117) (86 samples, 3.36%)</title><rect x="10.6766%" y="100" width="3.3633%" height="15" fill="rgb(249,83,47)"/><text x="10.9266%" y="110.50">Fun..</text></g><g><title>make_scalar_element (firedrake/functionspace.py:40) (86 samples, 3.36%)</title><rect x="10.6766%" y="116" width="3.3633%" height="15" fill="rgb(215,43,3)"/><text x="10.9266%" y="126.50">mak..</text></g><g><title>init (firedrake/mesh.py:1295) (86 samples, 3.36%)</title><rect x="10.6766%" y="132" width="3.3633%" height="15" fill="rgb(238,154,13)"/><text x="10.9266%" y="142.50">ini..</text></g><g><title>callback (firedrake/mesh.py:1674) (59 samples, 2.31%)</title><rect x="11.7325%" y="148" width="2.3074%" height="15" fill="rgb(219,56,2)"/><text x="11.9825%" y="158.50">c..</text></g><g><title>VectorFunctionSpace (firedrake/functionspace.py:180) (59 samples, 2.31%)</title><rect x="11.7325%" y="164" width="2.3074%" height="15" fill="rgb(233,0,4)"/><text x="11.9825%" y="174.50">V..</text></g><g><title>FunctionSpace (&lt;decorator-gen-24&gt;:2) (59 samples, 2.31%)</title><rect x="11.7325%" y="180" width="2.3074%" height="15" fill="rgb(235,30,7)"/><text x="11.9825%" y="190.50">F..</text></g><g><title>wrapper (pyop2/profiling.py:60) (59 samples, 2.31%)</title><rect x="11.7325%" y="196" width="2.3074%" height="15" fill="rgb(250,79,13)"/><text x="11.9825%" y="206.50">w..</text></g><g><title>FunctionSpace (firedrake/functionspace.py:140) (59 samples, 2.31%)</title><rect x="11.7325%" y="212" width="2.3074%" height="15" fill="rgb(211,146,34)"/><text x="11.9825%" y="222.50">F..</text></g><g><title>__init__ (firedrake/functionspaceimpl.py:283) (51 samples, 1.99%)</title><rect x="12.0454%" y="228" width="1.9945%" height="15" fill="rgb(228,22,38)"/><text x="12.2954%" y="238.50">_..</text></g><g><title>get_shared_data (firedrake/functionspacedata.py:503) (51 samples, 1.99%)</title><rect x="12.0454%" y="244" width="1.9945%" height="15" fill="rgb(235,168,5)"/><text x="12.2954%" y="254.50">g..</text></g><g><title>numpy_lambdify (FIAT/expansions.py:54) (27 samples, 1.06%)</title><rect x="14.4310%" y="276" width="1.0559%" height="15" fill="rgb(221,155,16)"/><text x="14.6810%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (FIAT/expansions.py:54) (27 samples, 1.06%)</title><rect x="14.4310%" y="292" width="1.0559%" height="15" fill="rgb(215,215,53)"/><text x="14.6810%" y="302.50"></text></g><g><title>numpy_lambdify (FIAT/expansions.py:60) (27 samples, 1.06%)</title><rect x="14.4310%" y="308" width="1.0559%" height="15" fill="rgb(223,4,10)"/><text x="14.6810%" y="318.50"></text></g><g><title>_tabulate_dpts (FIAT/expansions.py:85) (41 samples, 1.60%)</title><rect x="14.4310%" y="260" width="1.6034%" height="15" fill="rgb(234,103,6)"/><text x="14.6810%" y="270.50"></text></g><g><title>form_derivative (FIAT/expansions.py:37) (36 samples, 1.41%)</title><rect x="16.0344%" y="276" width="1.4079%" height="15" fill="rgb(227,97,0)"/><text x="16.2844%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (FIAT/expansions.py:37) (36 samples, 1.41%)</title><rect x="16.0344%" y="292" width="1.4079%" height="15" fill="rgb(234,150,53)"/><text x="16.2844%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (sympy/core/mul.py:933) (34 samples, 1.33%)</title><rect x="17.5205%" y="564" width="1.3297%" height="15" fill="rgb(228,201,54)"/><text x="17.7705%" y="574.50"></text></g><g><title>diff (sympy/core/expr.py:3474) (34 samples, 1.33%)</title><rect x="17.5205%" y="580" width="1.3297%" height="15" fill="rgb(222,22,37)"/><text x="17.7705%" y="590.50"></text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (32 samples, 1.25%)</title><rect x="17.5987%" y="596" width="1.2515%" height="15" fill="rgb(237,53,32)"/><text x="17.8487%" y="606.50"></text></g><g><title>_eval_derivative_n_times (sympy/core/mul.py:933) (49 samples, 1.92%)</title><rect x="17.5205%" y="548" width="1.9163%" height="15" fill="rgb(233,25,53)"/><text x="17.7705%" y="558.50">_..</text></g><g><title>__new__ (sympy/core/function.py:1468) (51 samples, 1.99%)</title><rect x="17.5205%" y="500" width="1.9945%" height="15" fill="rgb(210,40,34)"/><text x="17.7705%" y="510.50">_..</text></g><g><title>_dispatch_eval_derivative_n_times (sympy/core/function.py:1931) (51 samples, 1.99%)</title><rect x="17.5205%" y="516" width="1.9945%" height="15" fill="rgb(241,220,44)"/><text x="17.7705%" y="526.50">_..</text></g><g><title>wrapper (sympy/core/cache.py:72) (51 samples, 1.99%)</title><rect x="17.5205%" y="532" width="1.9945%" height="15" fill="rgb(235,28,35)"/><text x="17.7705%" y="542.50">w..</text></g><g><title>&lt;listcomp&gt; (sympy/core/add.py:403) (62 samples, 2.42%)</title><rect x="17.4423%" y="452" width="2.4247%" height="15" fill="rgb(210,56,17)"/><text x="17.6923%" y="462.50">&lt;l..</text></g><g><title>diff (sympy/core/expr.py:3474) (62 samples, 2.42%)</title><rect x="17.4423%" y="468" width="2.4247%" height="15" fill="rgb(224,130,29)"/><text x="17.6923%" y="478.50">di..</text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (62 samples, 2.42%)</title><rect x="17.4423%" y="484" width="2.4247%" height="15" fill="rgb(235,212,8)"/><text x="17.6923%" y="494.50">_d..</text></g><g><title>_eval_derivative_n_times (sympy/core/basic.py:1705) (65 samples, 2.54%)</title><rect x="17.4423%" y="404" width="2.5420%" height="15" fill="rgb(223,33,50)"/><text x="17.6923%" y="414.50">_e..</text></g><g><title>wrapper (sympy/core/cache.py:72) (65 samples, 2.54%)</title><rect x="17.4423%" y="420" width="2.5420%" height="15" fill="rgb(219,149,13)"/><text x="17.6923%" y="430.50">wr..</text></g><g><title>_eval_derivative (sympy/core/add.py:403) (65 samples, 2.54%)</title><rect x="17.4423%" y="436" width="2.5420%" height="15" fill="rgb(250,156,29)"/><text x="17.6923%" y="446.50">_e..</text></g><g><title>__new__ (sympy/core/function.py:1468) (70 samples, 2.74%)</title><rect x="17.4423%" y="372" width="2.7376%" height="15" fill="rgb(216,193,19)"/><text x="17.6923%" y="382.50">__..</text></g><g><title>_dispatch_eval_derivative_n_times (sympy/core/function.py:1931) (70 samples, 2.74%)</title><rect x="17.4423%" y="388" width="2.7376%" height="15" fill="rgb(216,135,14)"/><text x="17.6923%" y="398.50">_d..</text></g><g><title>__init__ (firedrake/functionspaceimpl.py:277) (162 samples, 6.34%)</title><rect x="14.0399%" y="116" width="6.3355%" height="15" fill="rgb(241,47,5)"/><text x="14.2899%" y="126.50">__init__..</text></g><g><title>create_element (tsfc/finatinterface.py:275) (162 samples, 6.34%)</title><rect x="14.0399%" y="132" width="6.3355%" height="15" fill="rgb(233,42,35)"/><text x="14.2899%" y="142.50">create_e..</text></g><g><title>_create_element (tsfc/finatinterface.py:305) (162 samples, 6.34%)</title><rect x="14.0399%" y="148" width="6.3355%" height="15" fill="rgb(231,13,6)"/><text x="14.2899%" y="158.50">_create_..</text></g><g><title>wrapper (functools.py:875) (162 samples, 6.34%)</title><rect x="14.0399%" y="164" width="6.3355%" height="15" fill="rgb(207,181,40)"/><text x="14.2899%" y="174.50">wrapper ..</text></g><g><title>convert_finiteelement (tsfc/finatinterface.py:177) (162 samples, 6.34%)</title><rect x="14.0399%" y="180" width="6.3355%" height="15" fill="rgb(254,173,49)"/><text x="14.2899%" y="190.50">convert_..</text></g><g><title>__init__ (finat/fiat_elements.py:333) (162 samples, 6.34%)</title><rect x="14.0399%" y="196" width="6.3355%" height="15" fill="rgb(221,1,38)"/><text x="14.2899%" y="206.50">__init__..</text></g><g><title>__init__ (FIAT/lagrange.py:43) (162 samples, 6.34%)</title><rect x="14.0399%" y="212" width="6.3355%" height="15" fill="rgb(206,124,46)"/><text x="14.2899%" y="222.50">__init__..</text></g><g><title>__init__ (FIAT/polynomial_set.py:168) (162 samples, 6.34%)</title><rect x="14.0399%" y="228" width="6.3355%" height="15" fill="rgb(249,21,11)"/><text x="14.2899%" y="238.50">__init__..</text></g><g><title>tabulate_derivatives (FIAT/expansions.py:277) (162 samples, 6.34%)</title><rect x="14.0399%" y="244" width="6.3355%" height="15" fill="rgb(222,201,40)"/><text x="14.2899%" y="254.50">tabulate..</text></g><g><title>_tabulate_dpts (FIAT/expansions.py:91) (111 samples, 4.34%)</title><rect x="16.0344%" y="260" width="4.3410%" height="15" fill="rgb(235,61,29)"/><text x="16.2844%" y="270.50">_tabu..</text></g><g><title>form_derivative (FIAT/expansions.py:43) (75 samples, 2.93%)</title><rect x="17.4423%" y="276" width="2.9331%" height="15" fill="rgb(219,207,3)"/><text x="17.6923%" y="286.50">fo..</text></g><g><title>form_derivative (FIAT/expansions.py:37) (75 samples, 2.93%)</title><rect x="17.4423%" y="292" width="2.9331%" height="15" fill="rgb(222,56,46)"/><text x="17.6923%" y="302.50">fo..</text></g><g><title>&lt;listcomp&gt; (FIAT/expansions.py:37) (75 samples, 2.93%)</title><rect x="17.4423%" y="308" width="2.9331%" height="15" fill="rgb(239,76,54)"/><text x="17.6923%" y="318.50">&lt;l..</text></g><g><title>diff (sympy/core/function.py:2492) (75 samples, 2.93%)</title><rect x="17.4423%" y="324" width="2.9331%" height="15" fill="rgb(231,124,27)"/><text x="17.6923%" y="334.50">di..</text></g><g><title>diff (sympy/core/expr.py:3474) (75 samples, 2.93%)</title><rect x="17.4423%" y="340" width="2.9331%" height="15" fill="rgb(249,195,6)"/><text x="17.6923%" y="350.50">di..</text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (75 samples, 2.93%)</title><rect x="17.4423%" y="356" width="2.9331%" height="15" fill="rgb(237,174,47)"/><text x="17.6923%" y="366.50">_d..</text></g><g><title>&lt;module&gt; (mod.py:16) (175 samples, 6.84%)</title><rect x="14.0399%" y="52" width="6.8440%" height="15" fill="rgb(206,201,31)"/><text x="14.2899%" y="62.50">&lt;module&gt; ..</text></g><g><title>FunctionSpace (&lt;decorator-gen-24&gt;:2) (175 samples, 6.84%)</title><rect x="14.0399%" y="68" width="6.8440%" height="15" fill="rgb(231,57,52)"/><text x="14.2899%" y="78.50">FunctionS..</text></g><g><title>wrapper (pyop2/profiling.py:60) (175 samples, 6.84%)</title><rect x="14.0399%" y="84" width="6.8440%" height="15" fill="rgb(248,177,22)"/><text x="14.2899%" y="94.50">wrapper (..</text></g><g><title>FunctionSpace (firedrake/functionspace.py:140) (175 samples, 6.84%)</title><rect x="14.0399%" y="100" width="6.8440%" height="15" fill="rgb(215,211,37)"/><text x="14.2899%" y="110.50">FunctionS..</text></g><g><title>create_parloops (firedrake/assemble.py:520) (53 samples, 2.07%)</title><rect x="22.4482%" y="212" width="2.0727%" height="15" fill="rgb(241,128,51)"/><text x="22.6982%" y="222.50">c..</text></g><g><title>compile_form (firedrake/tsfc_interface.py:228) (52 samples, 2.03%)</title><rect x="22.4873%" y="228" width="2.0336%" height="15" fill="rgb(227,165,31)"/><text x="22.7373%" y="238.50">c..</text></g><g><title>__new__ (pyop2/caching.py:197) (51 samples, 1.99%)</title><rect x="22.5264%" y="244" width="1.9945%" height="15" fill="rgb(228,167,24)"/><text x="22.7764%" y="254.50">_..</text></g><g><title>_cache_lookup (firedrake/tsfc_interface.py:68) (51 samples, 1.99%)</title><rect x="22.5264%" y="260" width="1.9945%" height="15" fill="rgb(228,143,12)"/><text x="22.7764%" y="270.50">_..</text></g><g><title>_read_from_disk (firedrake/tsfc_interface.py:90) (45 samples, 1.76%)</title><rect x="22.7610%" y="276" width="1.7599%" height="15" fill="rgb(249,149,8)"/><text x="23.0110%" y="286.50"></text></g><g><title>_assemble (firedrake/assemble.py:745) (60 samples, 2.35%)</title><rect x="22.4482%" y="196" width="2.3465%" height="15" fill="rgb(243,35,44)"/><text x="22.6982%" y="206.50">_..</text></g><g><title>__init__ (firedrake/variational_solver.py:188) (62 samples, 2.42%)</title><rect x="22.4091%" y="148" width="2.4247%" height="15" fill="rgb(246,89,9)"/><text x="22.6591%" y="158.50">__..</text></g><g><title>__init__ (firedrake/solving_utils.py:234) (61 samples, 2.39%)</title><rect x="22.4482%" y="164" width="2.3856%" height="15" fill="rgb(233,213,13)"/><text x="22.6982%" y="174.50">__..</text></g><g><title>create_assembly_callable (firedrake/assemble.py:177) (61 samples, 2.39%)</title><rect x="22.4482%" y="180" width="2.3856%" height="15" fill="rgb(233,141,41)"/><text x="22.6982%" y="190.50">cr..</text></g><g><title>MatSetValuesLocal (matrix.c:2234) (30 samples, 1.17%)</title><rect x="26.5937%" y="356" width="1.1732%" height="15" fill="rgb(239,167,4)"/><text x="26.8437%" y="366.50"></text></g><g><title>MatSetValues (matrix.c:1393) (28 samples, 1.10%)</title><rect x="26.6719%" y="372" width="1.0950%" height="15" fill="rgb(209,217,16)"/><text x="26.9219%" y="382.50"></text></g><g><title>fill_with_zeros (pyop2/sparsity.pyx:209) (49 samples, 1.92%)</title><rect x="26.1244%" y="324" width="1.9163%" height="15" fill="rgb(219,88,35)"/><text x="26.3744%" y="334.50">f..</text></g><g><title>sparsity_CHKERR (pyop2/sparsity.pyx:86) (48 samples, 1.88%)</title><rect x="26.1635%" y="340" width="1.8772%" height="15" fill="rgb(220,193,23)"/><text x="26.4135%" y="350.50">s..</text></g><g><title>MatSetValues (matrix.c:1393) (93 samples, 3.64%)</title><rect x="30.1134%" y="388" width="3.6371%" height="15" fill="rgb(230,90,52)"/><text x="30.3634%" y="398.50">MatS..</text></g><g><title>MatSetValuesBlocked (matrix.c:1869) (95 samples, 3.72%)</title><rect x="30.0743%" y="372" width="3.7153%" height="15" fill="rgb(252,106,19)"/><text x="30.3243%" y="382.50">MatS..</text></g><g><title>MatSetValuesBlockedLocal (matrix.c:2328) (117 samples, 4.58%)</title><rect x="29.3704%" y="356" width="4.5757%" height="15" fill="rgb(206,74,20)"/><text x="29.6204%" y="366.50">MatSe..</text></g><g><title>fill_with_zeros (pyop2/sparsity.pyx:231) (159 samples, 6.22%)</title><rect x="28.0407%" y="324" width="6.2182%" height="15" fill="rgb(230,138,44)"/><text x="28.2907%" y="334.50">fill_wit..</text></g><g><title>sparsity_CHKERR (pyop2/sparsity.pyx:86) (157 samples, 6.14%)</title><rect x="28.1189%" y="340" width="6.1400%" height="15" fill="rgb(235,182,43)"/><text x="28.3689%" y="350.50">sparsity..</text></g><g><title>_init_block (pyop2/petsc_base.py:761) (210 samples, 8.21%)</title><rect x="26.0853%" y="292" width="8.2127%" height="15" fill="rgb(242,16,51)"/><text x="26.3353%" y="302.50">_init_block..</text></g><g><title>fill_with_zeros (pyop2/sparsity.pyx:175) (210 samples, 8.21%)</title><rect x="26.0853%" y="308" width="8.2127%" height="15" fill="rgb(248,9,4)"/><text x="26.3353%" y="318.50">fill_with_z..</text></g><g><title>__init__ (firedrake/variational_solver.py:207) (238 samples, 9.31%)</title><rect x="25.1467%" y="148" width="9.3078%" height="15" fill="rgb(210,31,22)"/><text x="25.3967%" y="158.50">__init__ (fir..</text></g><g><title>set_jacobian (firedrake/solving_utils.py:301) (238 samples, 9.31%)</title><rect x="25.1467%" y="164" width="9.3078%" height="15" fill="rgb(239,54,39)"/><text x="25.3967%" y="174.50">set_jacobian ..</text></g><g><title>__get__ (pyop2/utils.py:62) (238 samples, 9.31%)</title><rect x="25.1467%" y="180" width="9.3078%" height="15" fill="rgb(230,99,41)"/><text x="25.3967%" y="190.50">__get__ (pyop..</text></g><g><title>_jac (firedrake/solving_utils.py:502) (238 samples, 9.31%)</title><rect x="25.1467%" y="196" width="9.3078%" height="15" fill="rgb(253,106,12)"/><text x="25.3967%" y="206.50">_jac (firedra..</text></g><g><title>allocate_matrix (firedrake/assemble.py:145) (238 samples, 9.31%)</title><rect x="25.1467%" y="212" width="9.3078%" height="15" fill="rgb(213,46,41)"/><text x="25.3967%" y="222.50">allocate_matr..</text></g><g><title>get_matrix (firedrake/assemble.py:280) (222 samples, 8.68%)</title><rect x="25.7724%" y="228" width="8.6820%" height="15" fill="rgb(215,133,35)"/><text x="26.0224%" y="238.50">get_matrix (..</text></g><g><title>__init__ (firedrake/matrix.py:99) (221 samples, 8.64%)</title><rect x="25.8115%" y="244" width="8.6429%" height="15" fill="rgb(213,28,5)"/><text x="26.0615%" y="254.50">__init__ (fi..</text></g><g><title>__init__ (pyop2/petsc_base.py:603) (221 samples, 8.64%)</title><rect x="25.8115%" y="260" width="8.6429%" height="15" fill="rgb(215,77,49)"/><text x="26.0615%" y="270.50">__init__ (py..</text></g><g><title>_init (pyop2/petsc_base.py:628) (221 samples, 8.64%)</title><rect x="25.8115%" y="276" width="8.6429%" height="15" fill="rgb(248,100,22)"/><text x="26.0615%" y="286.50">_init (pyop2..</text></g><g><title>_solve_varproblem (firedrake/solving.py:155) (311 samples, 12.16%)</title><rect x="22.4091%" y="100" width="12.1627%" height="15" fill="rgb(208,67,9)"/><text x="22.6591%" y="110.50">_solve_varproblem ..</text></g><g><title>wrapper (pyadjoint/tape.py:46) (311 samples, 12.16%)</title><rect x="22.4091%" y="116" width="12.1627%" height="15" fill="rgb(219,133,21)"/><text x="22.6591%" y="126.50">wrapper (pyadjoint..</text></g><g><title>wrapper (firedrake/adjoint/variational_solver.py:34) (311 samples, 12.16%)</title><rect x="22.4091%" y="132" width="12.1627%" height="15" fill="rgb(246,46,29)"/><text x="22.6591%" y="142.50">wrapper (firedrake..</text></g><g><title>zero (pyop2/base.py:1558) (52 samples, 2.03%)</title><rect x="36.3707%" y="292" width="2.0336%" height="15" fill="rgb(246,185,52)"/><text x="36.6207%" y="302.50">z..</text></g><g><title>make_function (loopy/kernel/creation.py:2353) (52 samples, 2.03%)</title><rect x="36.3707%" y="308" width="2.0336%" height="15" fill="rgb(252,136,11)"/><text x="36.6207%" y="318.50">m..</text></g><g><title>SNESSolve_KSPONLY (ksponly.c:28) (105 samples, 4.11%)</title><rect x="34.8455%" y="212" width="4.1064%" height="15" fill="rgb(219,138,53)"/><text x="35.0955%" y="222.50">SNES..</text></g><g><title>SNESComputeFunction (snes.c:2381) (105 samples, 4.11%)</title><rect x="34.8455%" y="228" width="4.1064%" height="15" fill="rgb(211,51,23)"/><text x="35.0955%" y="238.50">SNES..</text></g><g><title>PETSc_SNES_Function (petsc4py.PETSc.c:38905) (105 samples, 4.11%)</title><rect x="34.8455%" y="244" width="4.1064%" height="15" fill="rgb(247,221,28)"/><text x="35.0955%" y="254.50">PETS..</text></g><g><title>form_function (firedrake/solving_utils.py:413) (105 samples, 4.11%)</title><rect x="34.8455%" y="260" width="4.1064%" height="15" fill="rgb(251,222,45)"/><text x="35.0955%" y="270.50">form..</text></g><g><title>thunk (firedrake/assemble.py:181) (105 samples, 4.11%)</title><rect x="34.8455%" y="276" width="4.1064%" height="15" fill="rgb(217,162,53)"/><text x="35.0955%" y="286.50">thun..</text></g><g><title>MatSetValues (matrix.c:1393) (93 samples, 3.64%)</title><rect x="41.6504%" y="452" width="3.6371%" height="15" fill="rgb(229,93,14)"/><text x="41.9004%" y="462.50">MatS..</text></g><g><title>MatSetValuesBlocked (matrix.c:1869) (99 samples, 3.87%)</title><rect x="41.4939%" y="436" width="3.8717%" height="15" fill="rgb(209,67,49)"/><text x="41.7439%" y="446.50">MatS..</text></g><g><title>MatSetValuesBlockedLocal (matrix.c:2328) (144 samples, 5.63%)</title><rect x="40.2034%" y="420" width="5.6316%" height="15" fill="rgb(213,87,29)"/><text x="40.4534%" y="430.50">MatSetV..</text></g><g><title>wrap_form00_cell_integral_otherwise (073b3cf74c5149dc75de4412398ed2_p7162.c:59) (177 samples, 6.92%)</title><rect x="39.3039%" y="404" width="6.9222%" height="15" fill="rgb(205,151,52)"/><text x="39.5539%" y="414.50">wrap_form..</text></g><g><title>compute (pyop2/base.py:3572) (205 samples, 8.02%)</title><rect x="39.2257%" y="292" width="8.0172%" height="15" fill="rgb(253,215,39)"/><text x="39.4757%" y="302.50">compute (py..</text></g><g><title>_compute (pyop2/sequential.py:218) (205 samples, 8.02%)</title><rect x="39.2257%" y="308" width="8.0172%" height="15" fill="rgb(221,220,41)"/><text x="39.4757%" y="318.50">_compute (p..</text></g><g><title>__call__ (pyop2/sequential.py:106) (204 samples, 7.98%)</title><rect x="39.2648%" y="324" width="7.9781%" height="15" fill="rgb(218,133,21)"/><text x="39.5148%" y="334.50">__call__ (p..</text></g><g><title>0x7f2d50f38894 (_ctypes.cpython-38-x86_64-linux-gnu.so) (204 samples, 7.98%)</title><rect x="39.2648%" y="340" width="7.9781%" height="15" fill="rgb(221,193,43)"/><text x="39.5148%" y="350.50">0x7f2d50f38..</text></g><g><title>_ctypes_callproc (_ctypes.cpython-38-x86_64-linux-gnu.so) (204 samples, 7.98%)</title><rect x="39.2648%" y="356" width="7.9781%" height="15" fill="rgb(240,128,52)"/><text x="39.5148%" y="366.50">_ctypes_cal..</text></g><g><title>0x7f2d50f1f40a (libffi.so.7.1.0) (204 samples, 7.98%)</title><rect x="39.2648%" y="372" width="7.9781%" height="15" fill="rgb(253,114,12)"/><text x="39.5148%" y="382.50">0x7f2d50f1f..</text></g><g><title>0x7f2d50f1fff5 (libffi.so.7.1.0) (204 samples, 7.98%)</title><rect x="39.2648%" y="388" width="7.9781%" height="15" fill="rgb(215,223,47)"/><text x="39.5148%" y="398.50">0x7f2d50f1f..</text></g><g><title>SNESSolve_KSPONLY (ksponly.c:43) (216 samples, 8.45%)</title><rect x="38.9519%" y="212" width="8.4474%" height="15" fill="rgb(248,225,23)"/><text x="39.2019%" y="222.50">SNESSolve_KS..</text></g><g><title>SNESComputeJacobian (snes.c:2715) (216 samples, 8.45%)</title><rect x="38.9519%" y="228" width="8.4474%" height="15" fill="rgb(250,108,0)"/><text x="39.2019%" y="238.50">SNESComputeJ..</text></g><g><title>PETSc_SNES_Jacobian (petsc4py.PETSc.c:39428) (216 samples, 8.45%)</title><rect x="38.9519%" y="244" width="8.4474%" height="15" fill="rgb(228,208,7)"/><text x="39.2019%" y="254.50">PETSc_SNES_J..</text></g><g><title>form_jacobian (firedrake/solving_utils.py:452) (215 samples, 8.41%)</title><rect x="38.9910%" y="260" width="8.4083%" height="15" fill="rgb(244,45,10)"/><text x="39.2410%" y="270.50">form_jacobia..</text></g><g><title>thunk (firedrake/assemble.py:181) (210 samples, 8.21%)</title><rect x="39.1865%" y="276" width="8.2127%" height="15" fill="rgb(207,125,25)"/><text x="39.4365%" y="286.50">thunk (fire..</text></g><g><title>PCSetUp_HYPRE (hypre.c:231) (29 samples, 1.13%)</title><rect x="47.3993%" y="292" width="1.1341%" height="15" fill="rgb(210,195,18)"/><text x="47.6493%" y="302.50"></text></g><g><title>MatConvert (matrix.c:4254) (29 samples, 1.13%)</title><rect x="47.3993%" y="308" width="1.1341%" height="15" fill="rgb(249,80,12)"/><text x="47.6493%" y="318.50"></text></g><g><title>hypre_BoomerAMGCoarsenFalgout (par_coarsen.c:2005) (69 samples, 2.70%)</title><rect x="49.4329%" y="340" width="2.6985%" height="15" fill="rgb(221,65,9)"/><text x="49.6829%" y="350.50">hy..</text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:1224) (88 samples, 3.44%)</title><rect x="49.4329%" y="324" width="3.4415%" height="15" fill="rgb(235,49,36)"/><text x="49.6829%" y="334.50">hyp..</text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:2165) (86 samples, 3.36%)</title><rect x="52.8745%" y="324" width="3.3633%" height="15" fill="rgb(225,32,20)"/><text x="53.1245%" y="334.50">hyp..</text></g><g><title>KSPSolve_Private (itfunc.c:658) (334 samples, 13.06%)</title><rect x="47.3993%" y="244" width="13.0622%" height="15" fill="rgb(215,141,46)"/><text x="47.6493%" y="254.50">KSPSolve_Private (it..</text></g><g><title>KSPSetUp (itfunc.c:406) (334 samples, 13.06%)</title><rect x="47.3993%" y="260" width="13.0622%" height="15" fill="rgb(250,160,47)"/><text x="47.6493%" y="270.50">KSPSetUp (itfunc.c:4..</text></g><g><title>PCSetUp (precon.c:1009) (334 samples, 13.06%)</title><rect x="47.3993%" y="276" width="13.0622%" height="15" fill="rgb(216,222,40)"/><text x="47.6493%" y="286.50">PCSetUp (precon.c:10..</text></g><g><title>PCSetUp_HYPRE (hypre.c:408) (305 samples, 11.93%)</title><rect x="48.5334%" y="292" width="11.9280%" height="15" fill="rgb(234,217,39)"/><text x="48.7834%" y="302.50">PCSetUp_HYPRE (hyp..</text></g><g><title>HYPRE_BoomerAMGSetup (HYPRE_parcsr_amg.c:51) (305 samples, 11.93%)</title><rect x="48.5334%" y="308" width="11.9280%" height="15" fill="rgb(207,178,40)"/><text x="48.7834%" y="318.50">HYPRE_BoomerAMGSet..</text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:2748) (108 samples, 4.22%)</title><rect x="56.2378%" y="324" width="4.2237%" height="15" fill="rgb(221,136,13)"/><text x="56.4878%" y="334.50">hypre..</text></g><g><title>hypre_BoomerAMGCycle (par_cycle.c:589) (50 samples, 1.96%)</title><rect x="60.5006%" y="356" width="1.9554%" height="15" fill="rgb(249,199,10)"/><text x="60.7506%" y="366.50">h..</text></g><g><title>hypre_BoomerAMGRelaxIF (par_relax_interface.c:49) (50 samples, 1.96%)</title><rect x="60.5006%" y="372" width="1.9554%" height="15" fill="rgb(249,222,13)"/><text x="60.7506%" y="382.50">h..</text></g><g><title>KSPSolve_CG (cg.c:133) (58 samples, 2.27%)</title><rect x="60.5006%" y="260" width="2.2683%" height="15" fill="rgb(244,185,38)"/><text x="60.7506%" y="270.50">K..</text></g><g><title>KSP_PCApply (kspimpl.h:283) (58 samples, 2.27%)</title><rect x="60.5006%" y="276" width="2.2683%" height="15" fill="rgb(236,202,9)"/><text x="60.7506%" y="286.50">K..</text></g><g><title>PCApply (precon.c:444) (58 samples, 2.27%)</title><rect x="60.5006%" y="292" width="2.2683%" height="15" fill="rgb(250,229,37)"/><text x="60.7506%" y="302.50">P..</text></g><g><title>PCApply_HYPRE (hypre.c:434) (58 samples, 2.27%)</title><rect x="60.5006%" y="308" width="2.2683%" height="15" fill="rgb(206,174,23)"/><text x="60.7506%" y="318.50">P..</text></g><g><title>HYPRE_BoomerAMGSolve (HYPRE_parcsr_amg.c:69) (58 samples, 2.27%)</title><rect x="60.5006%" y="324" width="2.2683%" height="15" fill="rgb(211,33,43)"/><text x="60.7506%" y="334.50">H..</text></g><g><title>hypre_BoomerAMGSolve (par_amg_solve.c:250) (58 samples, 2.27%)</title><rect x="60.5006%" y="340" width="2.2683%" height="15" fill="rgb(245,58,50)"/><text x="60.7506%" y="350.50">h..</text></g><g><title>KSPSolve_CG (cg.c:194) (38 samples, 1.49%)</title><rect x="63.0035%" y="260" width="1.4861%" height="15" fill="rgb(244,68,36)"/><text x="63.2535%" y="270.50"></text></g><g><title>KSP_MatMult (kspimpl.h:264) (38 samples, 1.49%)</title><rect x="63.0035%" y="276" width="1.4861%" height="15" fill="rgb(232,229,15)"/><text x="63.2535%" y="286.50"></text></g><g><title>MatMult (matrix.c:2421) (38 samples, 1.49%)</title><rect x="63.0035%" y="292" width="1.4861%" height="15" fill="rgb(254,30,23)"/><text x="63.2535%" y="302.50"></text></g><g><title>MatMult_SeqAIJ (aij.c:1515) (34 samples, 1.33%)</title><rect x="63.1600%" y="308" width="1.3297%" height="15" fill="rgb(235,160,14)"/><text x="63.4100%" y="318.50"></text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1932) (59 samples, 2.31%)</title><rect x="67.3837%" y="388" width="2.3074%" height="15" fill="rgb(212,155,44)"/><text x="67.6337%" y="398.50">h..</text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1935) (55 samples, 2.15%)</title><rect x="69.6910%" y="388" width="2.1510%" height="15" fill="rgb(226,2,50)"/><text x="69.9410%" y="398.50">h..</text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1942) (27 samples, 1.06%)</title><rect x="72.1158%" y="388" width="1.0559%" height="15" fill="rgb(234,177,6)"/><text x="72.3658%" y="398.50"></text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1955) (44 samples, 1.72%)</title><rect x="74.0321%" y="388" width="1.7208%" height="15" fill="rgb(217,24,9)"/><text x="74.2821%" y="398.50"></text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1958) (56 samples, 2.19%)</title><rect x="75.7919%" y="388" width="2.1901%" height="15" fill="rgb(220,13,46)"/><text x="76.0419%" y="398.50">h..</text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1961) (75 samples, 2.93%)</title><rect x="77.9820%" y="388" width="2.9331%" height="15" fill="rgb(239,221,27)"/><text x="78.2320%" y="398.50">hy..</text></g><g><title>hypre_BoomerAMGCycle (par_cycle.c:589) (426 samples, 16.66%)</title><rect x="65.4673%" y="356" width="16.6601%" height="15" fill="rgb(222,198,25)"/><text x="65.7173%" y="366.50">hypre_BoomerAMGCycle (par_..</text></g><g><title>hypre_BoomerAMGRelaxIF (par_relax_interface.c:49) (425 samples, 16.62%)</title><rect x="65.5065%" y="372" width="16.6210%" height="15" fill="rgb(211,99,13)"/><text x="65.7565%" y="382.50">hypre_BoomerAMGRelaxIF (pa..</text></g><g><title>hypre_BoomerAMGRelax (par_relax.c:1968) (30 samples, 1.17%)</title><rect x="80.9542%" y="388" width="1.1732%" height="15" fill="rgb(232,111,31)"/><text x="81.2042%" y="398.50"></text></g><g><title>hypre_CSRMatrixMatvecOutOfPlace (csr_matvec.c:298) (32 samples, 1.25%)</title><rect x="82.3621%" y="388" width="1.2515%" height="15" fill="rgb(245,82,37)"/><text x="82.6121%" y="398.50"></text></g><g><title>hypre_BoomerAMGCycle (par_cycle.c:681) (51 samples, 1.99%)</title><rect x="82.2448%" y="356" width="1.9945%" height="15" fill="rgb(227,149,46)"/><text x="82.4948%" y="366.50">h..</text></g><g><title>hypre_ParCSRMatrixMatvecOutOfPlace (par_csr_matvec.c:298) (51 samples, 1.99%)</title><rect x="82.2448%" y="372" width="1.9945%" height="15" fill="rgb(218,36,50)"/><text x="82.4948%" y="382.50">h..</text></g><g><title>PCApply_HYPRE (hypre.c:434) (527 samples, 20.61%)</title><rect x="65.3891%" y="308" width="20.6101%" height="15" fill="rgb(226,80,48)"/><text x="65.6391%" y="318.50">PCApply_HYPRE (hypre.c:434)</text></g><g><title>HYPRE_BoomerAMGSolve (HYPRE_parcsr_amg.c:69) (527 samples, 20.61%)</title><rect x="65.3891%" y="324" width="20.6101%" height="15" fill="rgb(238,224,15)"/><text x="65.6391%" y="334.50">HYPRE_BoomerAMGSolve (HYPRE_parc..</text></g><g><title>hypre_BoomerAMGSolve (par_amg_solve.c:250) (527 samples, 20.61%)</title><rect x="65.3891%" y="340" width="20.6101%" height="15" fill="rgb(241,136,10)"/><text x="65.6391%" y="350.50">hypre_BoomerAMGSolve (par_amg_so..</text></g><g><title>KSPSolve_CG (cg.c:210) (528 samples, 20.65%)</title><rect x="65.3891%" y="260" width="20.6492%" height="15" fill="rgb(208,32,45)"/><text x="65.6391%" y="270.50">KSPSolve_CG (cg.c:210)</text></g><g><title>KSP_PCApply (kspimpl.h:283) (528 samples, 20.65%)</title><rect x="65.3891%" y="276" width="20.6492%" height="15" fill="rgb(207,135,9)"/><text x="65.6391%" y="286.50">KSP_PCApply (kspimpl.h:283)</text></g><g><title>PCApply (precon.c:444) (528 samples, 20.65%)</title><rect x="65.3891%" y="292" width="20.6492%" height="15" fill="rgb(206,86,44)"/><text x="65.6391%" y="302.50">PCApply (precon.c:444)</text></g><g><title>&lt;module&gt; (mod.py:61) (1,641 samples, 64.18%)</title><rect x="22.2135%" y="52" width="64.1768%" height="15" fill="rgb(245,177,15)"/><text x="22.4635%" y="62.50">&lt;module&gt; (mod.py:61)</text></g><g><title>wrapper (firedrake/adjoint/solving.py:50) (1,641 samples, 64.18%)</title><rect x="22.2135%" y="68" width="64.1768%" height="15" fill="rgb(206,64,50)"/><text x="22.4635%" y="78.50">wrapper (firedrake/adjoint/solving.py:50)</text></g><g><title>solve (firedrake/solving.py:129) (1,641 samples, 64.18%)</title><rect x="22.2135%" y="84" width="64.1768%" height="15" fill="rgb(234,36,40)"/><text x="22.4635%" y="94.50">solve (firedrake/solving.py:129)</text></g><g><title>_solve_varproblem (firedrake/solving.py:161) (1,325 samples, 51.82%)</title><rect x="34.5718%" y="100" width="51.8185%" height="15" fill="rgb(213,64,8)"/><text x="34.8218%" y="110.50">_solve_varproblem (firedrake/solving.py:161)</text></g><g><title>wrapper (firedrake/adjoint/variational_solver.py:75) (1,325 samples, 51.82%)</title><rect x="34.5718%" y="116" width="51.8185%" height="15" fill="rgb(210,75,36)"/><text x="34.8218%" y="126.50">wrapper (firedrake/adjoint/variational_solver.py:75)</text></g><g><title>solve (firedrake/variational_solver.py:271) (1,319 samples, 51.58%)</title><rect x="34.8064%" y="132" width="51.5839%" height="15" fill="rgb(229,88,21)"/><text x="35.0564%" y="142.50">solve (firedrake/variational_solver.py:271)</text></g><g><title>solve (petsc4py.PETSc.c:201060) (1,318 samples, 51.54%)</title><rect x="34.8455%" y="148" width="51.5448%" height="15" fill="rgb(252,204,47)"/><text x="35.0955%" y="158.50">solve (petsc4py.PETSc.c:201060)</text></g><g><title>solve (petsc4py.PETSc.c:201114) (1,318 samples, 51.54%)</title><rect x="34.8455%" y="164" width="51.5448%" height="15" fill="rgb(208,77,27)"/><text x="35.0955%" y="174.50">solve (petsc4py.PETSc.c:201114)</text></g><g><title>PETSc_CHKERR (petsc4py.PETSc.c:10267) (1,318 samples, 51.54%)</title><rect x="34.8455%" y="180" width="51.5448%" height="15" fill="rgb(221,76,26)"/><text x="35.0955%" y="190.50">PETSc_CHKERR (petsc4py.PETSc.c:10267)</text></g><g><title>SNESSolve (snes.c:4567) (1,318 samples, 51.54%)</title><rect x="34.8455%" y="196" width="51.5448%" height="15" fill="rgb(225,139,18)"/><text x="35.0955%" y="206.50">SNESSolve (snes.c:4567)</text></g><g><title>SNESSolve_KSPONLY (ksponly.c:51) (997 samples, 38.99%)</title><rect x="47.3993%" y="212" width="38.9910%" height="15" fill="rgb(230,137,11)"/><text x="47.6493%" y="222.50">SNESSolve_KSPONLY (ksponly.c:51)</text></g><g><title>KSPSolve (itfunc.c:889) (997 samples, 38.99%)</title><rect x="47.3993%" y="228" width="38.9910%" height="15" fill="rgb(212,28,1)"/><text x="47.6493%" y="238.50">KSPSolve (itfunc.c:889)</text></g><g><title>KSPSolve_Private (itfunc.c:719) (662 samples, 25.89%)</title><rect x="60.5006%" y="244" width="25.8897%" height="15" fill="rgb(248,164,17)"/><text x="60.7506%" y="254.50">KSPSolve_Private (itfunc.c:719)</text></g><g><title>all (2,557 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(222,171,42)"/><text x="0.2500%" y="46.50"></text></g><g><title>clone (libc-2.31.so) (336 samples, 13.14%)</title><rect x="86.8596%" y="52" width="13.1404%" height="15" fill="rgb(243,84,45)"/><text x="87.1096%" y="62.50">clone (libc-2.31.so)</text></g><g><title>_bootstrap (threading.py:890) (336 samples, 13.14%)</title><rect x="86.8596%" y="68" width="13.1404%" height="15" fill="rgb(252,49,23)"/><text x="87.1096%" y="78.50">_bootstrap (threadin..</text></g><g><title>_bootstrap_inner (threading.py:932) (336 samples, 13.14%)</title><rect x="86.8596%" y="84" width="13.1404%" height="15" fill="rgb(215,19,7)"/><text x="87.1096%" y="94.50">_bootstrap_inner (th..</text></g><g><title>run (threading.py:870) (336 samples, 13.14%)</title><rect x="86.8596%" y="100" width="13.1404%" height="15" fill="rgb(238,81,41)"/><text x="87.1096%" y="110.50">run (threading.py:87..</text></g><g><title>_log_start_if_long (pytools/__init__.py:2424) (336 samples, 13.14%)</title><rect x="86.8596%" y="116" width="13.1404%" height="15" fill="rgb(210,199,37)"/><text x="87.1096%" y="126.50">_log_start_if_long (..</text></g><g><title>select (libc-2.31.so) (326 samples, 12.75%)</title><rect x="87.2507%" y="132" width="12.7493%" height="15" fill="rgb(244,192,49)"/><text x="87.5007%" y="142.50">select (libc-2.31.s..</text></g></svg></svg>
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1430" onload="init(evt)" viewBox="0 0 1200 1430" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1430" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1413.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1413.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;module&gt; (firedrake/__init__.py:19) (54 samples, 1.81%)</title><rect x="0.0335%" y="148" width="1.8072%" height="15" fill="rgb(227,0,7)"/><text x="0.2835%" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (54 samples, 1.81%)</title><rect x="0.0335%" y="164" width="1.8072%" height="15" fill="rgb(217,0,24)"/><text x="0.2835%" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (54 samples, 1.81%)</title><rect x="0.0335%" y="180" width="1.8072%" height="15" fill="rgb(221,193,54)"/><text x="0.2835%" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (54 samples, 1.81%)</title><rect x="0.0335%" y="196" width="1.8072%" height="15" fill="rgb(248,212,6)"/><text x="0.2835%" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (54 samples, 1.81%)</title><rect x="0.0335%" y="212" width="1.8072%" height="15" fill="rgb(208,68,35)"/><text x="0.2835%" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (54 samples, 1.81%)</title><rect x="0.0335%" y="228" width="1.8072%" height="15" fill="rgb(232,128,0)"/><text x="0.2835%" y="238.50">_..</text></g><g><title>&lt;module&gt; (firedrake/petsc.py:4) (54 samples, 1.81%)</title><rect x="0.0335%" y="244" width="1.8072%" height="15" fill="rgb(207,160,47)"/><text x="0.2835%" y="254.50">&lt;..</text></g><g><title>&lt;module&gt; (sympy/__init__.py:51) (31 samples, 1.04%)</title><rect x="4.8193%" y="1076" width="1.0375%" height="15" fill="rgb(228,23,34)"/><text x="5.0693%" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (31 samples, 1.04%)</title><rect x="4.8193%" y="1092" width="1.0375%" height="15" fill="rgb(218,30,26)"/><text x="5.0693%" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (31 samples, 1.04%)</title><rect x="4.8193%" y="1108" width="1.0375%" height="15" fill="rgb(220,122,19)"/><text x="5.0693%" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (31 samples, 1.04%)</title><rect x="4.8193%" y="1124" width="1.0375%" height="15" fill="rgb(250,228,42)"/><text x="5.0693%" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (31 samples, 1.04%)</title><rect x="4.8193%" y="1140" width="1.0375%" height="15" fill="rgb(240,193,28)"/><text x="5.0693%" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (31 samples, 1.04%)</title><rect x="4.8193%" y="1156" width="1.0375%" height="15" fill="rgb(216,20,37)"/><text x="5.0693%" y="1166.50"></text></g><g><title>&lt;module&gt; (tsfc/driver.py:21) (99 samples, 3.31%)</title><rect x="3.4471%" y="564" width="3.3133%" height="15" fill="rgb(206,188,39)"/><text x="3.6971%" y="574.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (99 samples, 3.31%)</title><rect x="3.4471%" y="580" width="3.3133%" height="15" fill="rgb(217,207,13)"/><text x="3.6971%" y="590.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (99 samples, 3.31%)</title><rect x="3.4471%" y="596" width="3.3133%" height="15" fill="rgb(231,73,38)"/><text x="3.6971%" y="606.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (99 samples, 3.31%)</title><rect x="3.4471%" y="612" width="3.3133%" height="15" fill="rgb(225,20,46)"/><text x="3.6971%" y="622.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (99 samples, 3.31%)</title><rect x="3.4471%" y="628" width="3.3133%" height="15" fill="rgb(210,31,41)"/><text x="3.6971%" y="638.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (99 samples, 3.31%)</title><rect x="3.4471%" y="644" width="3.3133%" height="15" fill="rgb(221,200,47)"/><text x="3.6971%" y="654.50">_ca..</text></g><g><title>&lt;module&gt; (FIAT/__init__.py:8) (99 samples, 3.31%)</title><rect x="3.4471%" y="660" width="3.3133%" height="15" fill="rgb(226,26,5)"/><text x="3.6971%" y="670.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (99 samples, 3.31%)</title><rect x="3.4471%" y="676" width="3.3133%" height="15" fill="rgb(249,33,26)"/><text x="3.6971%" y="686.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (99 samples, 3.31%)</title><rect x="3.4471%" y="692" width="3.3133%" height="15" fill="rgb(235,183,28)"/><text x="3.6971%" y="702.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (99 samples, 3.31%)</title><rect x="3.4471%" y="708" width="3.3133%" height="15" fill="rgb(221,5,38)"/><text x="3.6971%" y="718.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (99 samples, 3.31%)</title><rect x="3.4471%" y="724" width="3.3133%" height="15" fill="rgb(247,18,42)"/><text x="3.6971%" y="734.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (99 samples, 3.31%)</title><rect x="3.4471%" y="740" width="3.3133%" height="15" fill="rgb(241,131,45)"/><text x="3.6971%" y="750.50">_ca..</text></g><g><title>&lt;module&gt; (FIAT/finite_element.py:13) (99 samples, 3.31%)</title><rect x="3.4471%" y="756" width="3.3133%" height="15" fill="rgb(249,31,29)"/><text x="3.6971%" y="766.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (99 samples, 3.31%)</title><rect x="3.4471%" y="772" width="3.3133%" height="15" fill="rgb(225,111,53)"/><text x="3.6971%" y="782.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (99 samples, 3.31%)</title><rect x="3.4471%" y="788" width="3.3133%" height="15" fill="rgb(238,160,17)"/><text x="3.6971%" y="798.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (99 samples, 3.31%)</title><rect x="3.4471%" y="804" width="3.3133%" height="15" fill="rgb(214,148,48)"/><text x="3.6971%" y="814.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (99 samples, 3.31%)</title><rect x="3.4471%" y="820" width="3.3133%" height="15" fill="rgb(232,36,49)"/><text x="3.6971%" y="830.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (99 samples, 3.31%)</title><rect x="3.4471%" y="836" width="3.3133%" height="15" fill="rgb(209,103,24)"/><text x="3.6971%" y="846.50">_ca..</text></g><g><title>&lt;module&gt; (FIAT/polynomial_set.py:19) (99 samples, 3.31%)</title><rect x="3.4471%" y="852" width="3.3133%" height="15" fill="rgb(229,88,8)"/><text x="3.6971%" y="862.50">&lt;mo..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1023) (99 samples, 3.31%)</title><rect x="3.4471%" y="868" width="3.3133%" height="15" fill="rgb(213,181,19)"/><text x="3.6971%" y="878.50">_ha..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (99 samples, 3.31%)</title><rect x="3.4471%" y="884" width="3.3133%" height="15" fill="rgb(254,191,54)"/><text x="3.6971%" y="894.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (99 samples, 3.31%)</title><rect x="3.4471%" y="900" width="3.3133%" height="15" fill="rgb(241,83,37)"/><text x="3.6971%" y="910.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (99 samples, 3.31%)</title><rect x="3.4471%" y="916" width="3.3133%" height="15" fill="rgb(233,36,39)"/><text x="3.6971%" y="926.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (99 samples, 3.31%)</title><rect x="3.4471%" y="932" width="3.3133%" height="15" fill="rgb(226,3,54)"/><text x="3.6971%" y="942.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (99 samples, 3.31%)</title><rect x="3.4471%" y="948" width="3.3133%" height="15" fill="rgb(245,192,40)"/><text x="3.6971%" y="958.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (99 samples, 3.31%)</title><rect x="3.4471%" y="964" width="3.3133%" height="15" fill="rgb(238,167,29)"/><text x="3.6971%" y="974.50">_ca..</text></g><g><title>&lt;module&gt; (FIAT/expansions.py:12) (99 samples, 3.31%)</title><rect x="3.4471%" y="980" width="3.3133%" height="15" fill="rgb(232,182,51)"/><text x="3.6971%" y="990.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (99 samples, 3.31%)</title><rect x="3.4471%" y="996" width="3.3133%" height="15" fill="rgb(231,60,39)"/><text x="3.6971%" y="1006.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (99 samples, 3.31%)</title><rect x="3.4471%" y="1012" width="3.3133%" height="15" fill="rgb(208,69,12)"/><text x="3.6971%" y="1022.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (99 samples, 3.31%)</title><rect x="3.4471%" y="1028" width="3.3133%" height="15" fill="rgb(235,93,37)"/><text x="3.6971%" y="1038.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (99 samples, 3.31%)</title><rect x="3.4471%" y="1044" width="3.3133%" height="15" fill="rgb(213,116,39)"/><text x="3.6971%" y="1054.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (99 samples, 3.31%)</title><rect x="3.4471%" y="1060" width="3.3133%" height="15" fill="rgb(222,207,29)"/><text x="3.6971%" y="1070.50">_ca..</text></g><g><title>&lt;module&gt; (pytest/__init__.py:5) (31 samples, 1.04%)</title><rect x="7.4297%" y="1236" width="1.0375%" height="15" fill="rgb(206,96,30)"/><text x="7.6797%" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (31 samples, 1.04%)</title><rect x="7.4297%" y="1252" width="1.0375%" height="15" fill="rgb(218,138,4)"/><text x="7.6797%" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (31 samples, 1.04%)</title><rect x="7.4297%" y="1268" width="1.0375%" height="15" fill="rgb(250,191,14)"/><text x="7.6797%" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (31 samples, 1.04%)</title><rect x="7.4297%" y="1284" width="1.0375%" height="15" fill="rgb(239,60,40)"/><text x="7.6797%" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (31 samples, 1.04%)</title><rect x="7.4297%" y="1300" width="1.0375%" height="15" fill="rgb(206,27,48)"/><text x="7.6797%" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (31 samples, 1.04%)</title><rect x="7.4297%" y="1316" width="1.0375%" height="15" fill="rgb(225,35,8)"/><text x="7.6797%" y="1326.50"></text></g><g><title>&lt;module&gt; (_pytest/assertion/__init__.py:9) (31 samples, 1.04%)</title><rect x="7.4297%" y="1332" width="1.0375%" height="15" fill="rgb(250,213,24)"/><text x="7.6797%" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1023) (31 samples, 1.04%)</title><rect x="7.4297%" y="1348" width="1.0375%" height="15" fill="rgb(247,123,22)"/><text x="7.6797%" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (31 samples, 1.04%)</title><rect x="7.4297%" y="1364" width="1.0375%" height="15" fill="rgb(231,138,38)"/><text x="7.6797%" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (31 samples, 1.04%)</title><rect x="7.4297%" y="1380" width="1.0375%" height="15" fill="rgb(231,145,46)"/><text x="7.6797%" y="1390.50"></text></g><g><title>&lt;module&gt; (symengine/__init__.py:21) (50 samples, 1.67%)</title><rect x="6.8608%" y="996" width="1.6734%" height="15" fill="rgb(251,118,11)"/><text x="7.1108%" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (50 samples, 1.67%)</title><rect x="6.8608%" y="1012" width="1.6734%" height="15" fill="rgb(217,147,25)"/><text x="7.1108%" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (50 samples, 1.67%)</title><rect x="6.8608%" y="1028" width="1.6734%" height="15" fill="rgb(247,81,37)"/><text x="7.1108%" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (50 samples, 1.67%)</title><rect x="6.8608%" y="1044" width="1.6734%" height="15" fill="rgb(209,12,38)"/><text x="7.1108%" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (50 samples, 1.67%)</title><rect x="6.8608%" y="1060" width="1.6734%" height="15" fill="rgb(227,1,9)"/><text x="7.1108%" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (50 samples, 1.67%)</title><rect x="6.8608%" y="1076" width="1.6734%" height="15" fill="rgb(248,47,43)"/><text x="7.1108%" y="1086.50"></text></g><g><title>&lt;module&gt; (symengine/utilities.py:247) (48 samples, 1.61%)</title><rect x="6.9277%" y="1092" width="1.6064%" height="15" fill="rgb(221,10,30)"/><text x="7.1777%" y="1102.50"></text></g><g><title>__getattribute__ (py/_vendored_packages/apipkg/__init__.py:199) (48 samples, 1.61%)</title><rect x="6.9277%" y="1108" width="1.6064%" height="15" fill="rgb(210,229,1)"/><text x="7.1777%" y="1118.50"></text></g><g><title>getmod (py/_vendored_packages/apipkg/__init__.py:183) (48 samples, 1.61%)</title><rect x="6.9277%" y="1124" width="1.6064%" height="15" fill="rgb(222,148,37)"/><text x="7.1777%" y="1134.50"></text></g><g><title>importobj (py/_vendored_packages/apipkg/__init__.py:72) (48 samples, 1.61%)</title><rect x="6.9277%" y="1140" width="1.6064%" height="15" fill="rgb(234,67,33)"/><text x="7.1777%" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (48 samples, 1.61%)</title><rect x="6.9277%" y="1156" width="1.6064%" height="15" fill="rgb(247,98,35)"/><text x="7.1777%" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (48 samples, 1.61%)</title><rect x="6.9277%" y="1172" width="1.6064%" height="15" fill="rgb(247,138,52)"/><text x="7.1777%" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (48 samples, 1.61%)</title><rect x="6.9277%" y="1188" width="1.6064%" height="15" fill="rgb(213,79,30)"/><text x="7.1777%" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (48 samples, 1.61%)</title><rect x="6.9277%" y="1204" width="1.6064%" height="15" fill="rgb(246,177,23)"/><text x="7.1777%" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (48 samples, 1.61%)</title><rect x="6.9277%" y="1220" width="1.6064%" height="15" fill="rgb(230,62,27)"/><text x="7.1777%" y="1230.50"></text></g><g><title>&lt;module&gt; (finat/sympy2gem.py:4) (54 samples, 1.81%)</title><rect x="6.7938%" y="900" width="1.8072%" height="15" fill="rgb(216,154,8)"/><text x="7.0438%" y="910.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (54 samples, 1.81%)</title><rect x="6.7938%" y="916" width="1.8072%" height="15" fill="rgb(244,35,45)"/><text x="7.0438%" y="926.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (54 samples, 1.81%)</title><rect x="6.7938%" y="932" width="1.8072%" height="15" fill="rgb(251,115,12)"/><text x="7.0438%" y="942.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (54 samples, 1.81%)</title><rect x="6.7938%" y="948" width="1.8072%" height="15" fill="rgb(240,54,50)"/><text x="7.0438%" y="958.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (53 samples, 1.77%)</title><rect x="6.8273%" y="964" width="1.7738%" height="15" fill="rgb(233,84,52)"/><text x="7.0773%" y="974.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (53 samples, 1.77%)</title><rect x="6.8273%" y="980" width="1.7738%" height="15" fill="rgb(207,117,47)"/><text x="7.0773%" y="990.50">_..</text></g><g><title>&lt;module&gt; (finat/__init__.py:1) (56 samples, 1.87%)</title><rect x="6.7604%" y="708" width="1.8742%" height="15" fill="rgb(249,43,39)"/><text x="7.0104%" y="718.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (56 samples, 1.87%)</title><rect x="6.7604%" y="724" width="1.8742%" height="15" fill="rgb(209,38,44)"/><text x="7.0104%" y="734.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (56 samples, 1.87%)</title><rect x="6.7604%" y="740" width="1.8742%" height="15" fill="rgb(236,212,23)"/><text x="7.0104%" y="750.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (56 samples, 1.87%)</title><rect x="6.7604%" y="756" width="1.8742%" height="15" fill="rgb(242,79,21)"/><text x="7.0104%" y="766.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (56 samples, 1.87%)</title><rect x="6.7604%" y="772" width="1.8742%" height="15" fill="rgb(211,96,35)"/><text x="7.0104%" y="782.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (56 samples, 1.87%)</title><rect x="6.7604%" y="788" width="1.8742%" height="15" fill="rgb(253,215,40)"/><text x="7.0104%" y="798.50">_..</text></g><g><title>&lt;module&gt; (finat/fiat_elements.py:11) (55 samples, 1.84%)</title><rect x="6.7938%" y="804" width="1.8407%" height="15" fill="rgb(211,81,21)"/><text x="7.0438%" y="814.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (55 samples, 1.84%)</title><rect x="6.7938%" y="820" width="1.8407%" height="15" fill="rgb(208,190,38)"/><text x="7.0438%" y="830.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (55 samples, 1.84%)</title><rect x="6.7938%" y="836" width="1.8407%" height="15" fill="rgb(235,213,38)"/><text x="7.0438%" y="846.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (55 samples, 1.84%)</title><rect x="6.7938%" y="852" width="1.8407%" height="15" fill="rgb(237,122,38)"/><text x="7.0438%" y="862.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (55 samples, 1.84%)</title><rect x="6.7938%" y="868" width="1.8407%" height="15" fill="rgb(244,218,35)"/><text x="7.0438%" y="878.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (55 samples, 1.84%)</title><rect x="6.7938%" y="884" width="1.8407%" height="15" fill="rgb(240,68,47)"/><text x="7.0438%" y="894.50">_..</text></g><g><title>&lt;module&gt; (firedrake/assemble_expressions.py:15) (156 samples, 5.22%)</title><rect x="3.4471%" y="372" width="5.2209%" height="15" fill="rgb(210,16,53)"/><text x="3.6971%" y="382.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (156 samples, 5.22%)</title><rect x="3.4471%" y="388" width="5.2209%" height="15" fill="rgb(235,124,12)"/><text x="3.6971%" y="398.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (156 samples, 5.22%)</title><rect x="3.4471%" y="404" width="5.2209%" height="15" fill="rgb(224,169,11)"/><text x="3.6971%" y="414.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (156 samples, 5.22%)</title><rect x="3.4471%" y="420" width="5.2209%" height="15" fill="rgb(250,166,2)"/><text x="3.6971%" y="430.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (156 samples, 5.22%)</title><rect x="3.4471%" y="436" width="5.2209%" height="15" fill="rgb(242,216,29)"/><text x="3.6971%" y="446.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (156 samples, 5.22%)</title><rect x="3.4471%" y="452" width="5.2209%" height="15" fill="rgb(230,116,27)"/><text x="3.6971%" y="462.50">_call_..</text></g><g><title>&lt;module&gt; (tsfc/__init__.py:1) (156 samples, 5.22%)</title><rect x="3.4471%" y="468" width="5.2209%" height="15" fill="rgb(228,99,48)"/><text x="3.6971%" y="478.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (156 samples, 5.22%)</title><rect x="3.4471%" y="484" width="5.2209%" height="15" fill="rgb(253,11,6)"/><text x="3.6971%" y="494.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (156 samples, 5.22%)</title><rect x="3.4471%" y="500" width="5.2209%" height="15" fill="rgb(247,143,39)"/><text x="3.6971%" y="510.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (156 samples, 5.22%)</title><rect x="3.4471%" y="516" width="5.2209%" height="15" fill="rgb(236,97,10)"/><text x="3.6971%" y="526.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (156 samples, 5.22%)</title><rect x="3.4471%" y="532" width="5.2209%" height="15" fill="rgb(233,208,19)"/><text x="3.6971%" y="542.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (156 samples, 5.22%)</title><rect x="3.4471%" y="548" width="5.2209%" height="15" fill="rgb(216,164,2)"/><text x="3.6971%" y="558.50">_call_..</text></g><g><title>&lt;module&gt; (tsfc/driver.py:25) (57 samples, 1.91%)</title><rect x="6.7604%" y="564" width="1.9076%" height="15" fill="rgb(220,129,5)"/><text x="7.0104%" y="574.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (57 samples, 1.91%)</title><rect x="6.7604%" y="580" width="1.9076%" height="15" fill="rgb(242,17,10)"/><text x="7.0104%" y="590.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:941) (57 samples, 1.91%)</title><rect x="6.7604%" y="596" width="1.9076%" height="15" fill="rgb(242,107,0)"/><text x="7.0104%" y="606.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (57 samples, 1.91%)</title><rect x="6.7604%" y="612" width="1.9076%" height="15" fill="rgb(251,28,31)"/><text x="7.0104%" y="622.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (57 samples, 1.91%)</title><rect x="6.7604%" y="628" width="1.9076%" height="15" fill="rgb(233,223,10)"/><text x="7.0104%" y="638.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (57 samples, 1.91%)</title><rect x="6.7604%" y="644" width="1.9076%" height="15" fill="rgb(215,21,27)"/><text x="7.0104%" y="654.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (57 samples, 1.91%)</title><rect x="6.7604%" y="660" width="1.9076%" height="15" fill="rgb(232,23,21)"/><text x="7.0104%" y="670.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (57 samples, 1.91%)</title><rect x="6.7604%" y="676" width="1.9076%" height="15" fill="rgb(244,5,23)"/><text x="7.0104%" y="686.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (57 samples, 1.91%)</title><rect x="6.7604%" y="692" width="1.9076%" height="15" fill="rgb(226,81,46)"/><text x="7.0104%" y="702.50">_..</text></g><g><title>&lt;module&gt; (firedrake/assemble.py:10) (185 samples, 6.19%)</title><rect x="3.4137%" y="244" width="6.1914%" height="15" fill="rgb(247,70,30)"/><text x="3.6637%" y="254.50">&lt;module&gt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1023) (185 samples, 6.19%)</title><rect x="3.4137%" y="260" width="6.1914%" height="15" fill="rgb(212,68,19)"/><text x="3.6637%" y="270.50">_handle_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (185 samples, 6.19%)</title><rect x="3.4137%" y="276" width="6.1914%" height="15" fill="rgb(240,187,13)"/><text x="3.6637%" y="286.50">_call_wi..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (185 samples, 6.19%)</title><rect x="3.4137%" y="292" width="6.1914%" height="15" fill="rgb(223,113,26)"/><text x="3.6637%" y="302.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (185 samples, 6.19%)</title><rect x="3.4137%" y="308" width="6.1914%" height="15" fill="rgb(206,192,2)"/><text x="3.6637%" y="318.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (185 samples, 6.19%)</title><rect x="3.4137%" y="324" width="6.1914%" height="15" fill="rgb(241,108,4)"/><text x="3.6637%" y="334.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (185 samples, 6.19%)</title><rect x="3.4137%" y="340" width="6.1914%" height="15" fill="rgb(247,173,49)"/><text x="3.6637%" y="350.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (185 samples, 6.19%)</title><rect x="3.4137%" y="356" width="6.1914%" height="15" fill="rgb(224,114,35)"/><text x="3.6637%" y="366.50">_call_wi..</text></g><g><title>&lt;module&gt; (firedrake/__init__.py:57) (192 samples, 6.43%)</title><rect x="3.4137%" y="148" width="6.4257%" height="15" fill="rgb(245,159,27)"/><text x="3.6637%" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (192 samples, 6.43%)</title><rect x="3.4137%" y="164" width="6.4257%" height="15" fill="rgb(245,172,44)"/><text x="3.6637%" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (192 samples, 6.43%)</title><rect x="3.4137%" y="180" width="6.4257%" height="15" fill="rgb(236,23,11)"/><text x="3.6637%" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (192 samples, 6.43%)</title><rect x="3.4137%" y="196" width="6.4257%" height="15" fill="rgb(205,117,38)"/><text x="3.6637%" y="206.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (192 samples, 6.43%)</title><rect x="3.4137%" y="212" width="6.4257%" height="15" fill="rgb(237,72,25)"/><text x="3.6637%" y="222.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (192 samples, 6.43%)</title><rect x="3.4137%" y="228" width="6.4257%" height="15" fill="rgb(244,70,9)"/><text x="3.6637%" y="238.50">_call_wi..</text></g><g><title>&lt;module&gt; (firedrake/__init__.py:79) (34 samples, 1.14%)</title><rect x="10.7095%" y="148" width="1.1379%" height="15" fill="rgb(217,125,39)"/><text x="10.9595%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (34 samples, 1.14%)</title><rect x="10.7095%" y="164" width="1.1379%" height="15" fill="rgb(235,36,10)"/><text x="10.9595%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (34 samples, 1.14%)</title><rect x="10.7095%" y="180" width="1.1379%" height="15" fill="rgb(251,123,47)"/><text x="10.9595%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (34 samples, 1.14%)</title><rect x="10.7095%" y="196" width="1.1379%" height="15" fill="rgb(221,13,13)"/><text x="10.9595%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (34 samples, 1.14%)</title><rect x="10.7095%" y="212" width="1.1379%" height="15" fill="rgb(238,131,9)"/><text x="10.9595%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (34 samples, 1.14%)</title><rect x="10.7095%" y="228" width="1.1379%" height="15" fill="rgb(211,50,8)"/><text x="10.9595%" y="238.50"></text></g><g><title>&lt;module&gt; (firedrake/plot.py:3) (34 samples, 1.14%)</title><rect x="10.7095%" y="244" width="1.1379%" height="15" fill="rgb(245,182,24)"/><text x="10.9595%" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (34 samples, 1.14%)</title><rect x="10.7095%" y="260" width="1.1379%" height="15" fill="rgb(242,14,37)"/><text x="10.9595%" y="270.50"></text></g><g><title>&lt;module&gt; (solve_repeats.py:1) (374 samples, 12.52%)</title><rect x="0.0000%" y="52" width="12.5167%" height="15" fill="rgb(246,228,12)"/><text x="0.2500%" y="62.50">&lt;module&gt; (solve_rep..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (374 samples, 12.52%)</title><rect x="0.0000%" y="68" width="12.5167%" height="15" fill="rgb(213,55,15)"/><text x="0.2500%" y="78.50">_find_and_load (&lt;fr..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (374 samples, 12.52%)</title><rect x="0.0000%" y="84" width="12.5167%" height="15" fill="rgb(209,9,3)"/><text x="0.2500%" y="94.50">_find_and_load_unlo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (374 samples, 12.52%)</title><rect x="0.0000%" y="100" width="12.5167%" height="15" fill="rgb(230,59,30)"/><text x="0.2500%" y="110.50">_load_unlocked (&lt;fr..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (374 samples, 12.52%)</title><rect x="0.0000%" y="116" width="12.5167%" height="15" fill="rgb(209,121,21)"/><text x="0.2500%" y="126.50">exec_module (&lt;froze..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (374 samples, 12.52%)</title><rect x="0.0000%" y="132" width="12.5167%" height="15" fill="rgb(220,109,13)"/><text x="0.2500%" y="142.50">_call_with_frames_r..</text></g><g><title>&lt;module&gt; (solve_repeats.py:14) (31 samples, 1.04%)</title><rect x="12.5167%" y="52" width="1.0375%" height="15" fill="rgb(232,18,1)"/><text x="12.7667%" y="62.50"></text></g><g><title>UnitSquareMesh (firedrake/utility_meshes.py:463) (31 samples, 1.04%)</title><rect x="12.5167%" y="68" width="1.0375%" height="15" fill="rgb(215,41,42)"/><text x="12.7667%" y="78.50"></text></g><g><title>SquareMesh (firedrake/utility_meshes.py:439) (31 samples, 1.04%)</title><rect x="12.5167%" y="84" width="1.0375%" height="15" fill="rgb(224,123,36)"/><text x="12.7667%" y="94.50"></text></g><g><title>_tabulate_dpts (FIAT/expansions.py:74) (33 samples, 1.10%)</title><rect x="13.9558%" y="260" width="1.1044%" height="15" fill="rgb(240,125,3)"/><text x="14.2058%" y="270.50"></text></g><g><title>numpy_lambdify (FIAT/expansions.py:54) (35 samples, 1.17%)</title><rect x="15.0602%" y="276" width="1.1714%" height="15" fill="rgb(205,98,50)"/><text x="15.3102%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (FIAT/expansions.py:54) (35 samples, 1.17%)</title><rect x="15.0602%" y="292" width="1.1714%" height="15" fill="rgb(205,185,37)"/><text x="15.3102%" y="302.50"></text></g><g><title>numpy_lambdify (FIAT/expansions.py:60) (35 samples, 1.17%)</title><rect x="15.0602%" y="308" width="1.1714%" height="15" fill="rgb(238,207,15)"/><text x="15.3102%" y="318.50"></text></g><g><title>_tabulate_dpts (FIAT/expansions.py:85) (45 samples, 1.51%)</title><rect x="15.0602%" y="260" width="1.5060%" height="15" fill="rgb(213,199,42)"/><text x="15.3102%" y="270.50"></text></g><g><title>_eval_derivative_n_times (sympy/core/basic.py:1705) (41 samples, 1.37%)</title><rect x="16.5663%" y="388" width="1.3722%" height="15" fill="rgb(235,201,11)"/><text x="16.8163%" y="398.50"></text></g><g><title>wrapper (sympy/core/cache.py:72) (41 samples, 1.37%)</title><rect x="16.5663%" y="404" width="1.3722%" height="15" fill="rgb(207,46,11)"/><text x="16.8163%" y="414.50"></text></g><g><title>_eval_derivative (sympy/core/add.py:403) (41 samples, 1.37%)</title><rect x="16.5663%" y="420" width="1.3722%" height="15" fill="rgb(241,35,35)"/><text x="16.8163%" y="430.50"></text></g><g><title>&lt;listcomp&gt; (sympy/core/add.py:403) (41 samples, 1.37%)</title><rect x="16.5663%" y="436" width="1.3722%" height="15" fill="rgb(243,32,47)"/><text x="16.8163%" y="446.50"></text></g><g><title>diff (sympy/core/expr.py:3474) (41 samples, 1.37%)</title><rect x="16.5663%" y="452" width="1.3722%" height="15" fill="rgb(247,202,23)"/><text x="16.8163%" y="462.50"></text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (41 samples, 1.37%)</title><rect x="16.5663%" y="468" width="1.3722%" height="15" fill="rgb(219,102,11)"/><text x="16.8163%" y="478.50"></text></g><g><title>__new__ (sympy/core/function.py:1468) (42 samples, 1.41%)</title><rect x="16.5663%" y="356" width="1.4056%" height="15" fill="rgb(243,110,44)"/><text x="16.8163%" y="366.50"></text></g><g><title>_dispatch_eval_derivative_n_times (sympy/core/function.py:1931) (42 samples, 1.41%)</title><rect x="16.5663%" y="372" width="1.4056%" height="15" fill="rgb(222,74,54)"/><text x="16.8163%" y="382.50"></text></g><g><title>diff (sympy/core/function.py:2492) (53 samples, 1.77%)</title><rect x="16.5663%" y="308" width="1.7738%" height="15" fill="rgb(216,99,12)"/><text x="16.8163%" y="318.50">d..</text></g><g><title>diff (sympy/core/expr.py:3474) (53 samples, 1.77%)</title><rect x="16.5663%" y="324" width="1.7738%" height="15" fill="rgb(226,22,26)"/><text x="16.8163%" y="334.50">d..</text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (53 samples, 1.77%)</title><rect x="16.5663%" y="340" width="1.7738%" height="15" fill="rgb(217,163,10)"/><text x="16.8163%" y="350.50">_..</text></g><g><title>form_derivative (FIAT/expansions.py:37) (60 samples, 2.01%)</title><rect x="16.5663%" y="276" width="2.0080%" height="15" fill="rgb(213,25,53)"/><text x="16.8163%" y="286.50">f..</text></g><g><title>&lt;listcomp&gt; (FIAT/expansions.py:37) (60 samples, 2.01%)</title><rect x="16.5663%" y="292" width="2.0080%" height="15" fill="rgb(252,105,26)"/><text x="16.8163%" y="302.50">&lt;..</text></g><g><title>_eval_derivative_n_times (sympy/core/mul.py:933) (72 samples, 2.41%)</title><rect x="18.6412%" y="548" width="2.4096%" height="15" fill="rgb(220,39,43)"/><text x="18.8912%" y="558.50">_e..</text></g><g><title>prod (sympy/core/mul.py:1954) (43 samples, 1.44%)</title><rect x="19.6118%" y="564" width="1.4391%" height="15" fill="rgb(229,68,48)"/><text x="19.8618%" y="574.50"></text></g><g><title>__new__ (sympy/core/function.py:1468) (74 samples, 2.48%)</title><rect x="18.6412%" y="500" width="2.4766%" height="15" fill="rgb(252,8,32)"/><text x="18.8912%" y="510.50">__..</text></g><g><title>_dispatch_eval_derivative_n_times (sympy/core/function.py:1931) (74 samples, 2.48%)</title><rect x="18.6412%" y="516" width="2.4766%" height="15" fill="rgb(223,20,43)"/><text x="18.8912%" y="526.50">_d..</text></g><g><title>wrapper (sympy/core/cache.py:72) (74 samples, 2.48%)</title><rect x="18.6412%" y="532" width="2.4766%" height="15" fill="rgb(229,81,49)"/><text x="18.8912%" y="542.50">wr..</text></g><g><title>&lt;listcomp&gt; (sympy/core/add.py:403) (94 samples, 3.15%)</title><rect x="18.6412%" y="452" width="3.1459%" height="15" fill="rgb(236,28,36)"/><text x="18.8912%" y="462.50">&lt;li..</text></g><g><title>diff (sympy/core/expr.py:3474) (94 samples, 3.15%)</title><rect x="18.6412%" y="468" width="3.1459%" height="15" fill="rgb(249,185,26)"/><text x="18.8912%" y="478.50">dif..</text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (94 samples, 3.15%)</title><rect x="18.6412%" y="484" width="3.1459%" height="15" fill="rgb(249,174,33)"/><text x="18.8912%" y="494.50">_de..</text></g><g><title>_eval_derivative_n_times (sympy/core/basic.py:1705) (95 samples, 3.18%)</title><rect x="18.6412%" y="404" width="3.1794%" height="15" fill="rgb(233,201,37)"/><text x="18.8912%" y="414.50">_ev..</text></g><g><title>wrapper (sympy/core/cache.py:72) (95 samples, 3.18%)</title><rect x="18.6412%" y="420" width="3.1794%" height="15" fill="rgb(221,78,26)"/><text x="18.8912%" y="430.50">wra..</text></g><g><title>_eval_derivative (sympy/core/add.py:403) (95 samples, 3.18%)</title><rect x="18.6412%" y="436" width="3.1794%" height="15" fill="rgb(250,127,30)"/><text x="18.8912%" y="446.50">_ev..</text></g><g><title>__new__ (sympy/core/function.py:1468) (120 samples, 4.02%)</title><rect x="18.6412%" y="372" width="4.0161%" height="15" fill="rgb(230,49,44)"/><text x="18.8912%" y="382.50">__ne..</text></g><g><title>_dispatch_eval_derivative_n_times (sympy/core/function.py:1931) (120 samples, 4.02%)</title><rect x="18.6412%" y="388" width="4.0161%" height="15" fill="rgb(229,67,23)"/><text x="18.8912%" y="398.50">_dis..</text></g><g><title>&lt;module&gt; (solve_repeats.py:16) (278 samples, 9.30%)</title><rect x="13.9558%" y="52" width="9.3039%" height="15" fill="rgb(249,83,47)"/><text x="14.2058%" y="62.50">&lt;module&gt; (sol..</text></g><g><title>FunctionSpace (&lt;decorator-gen-24&gt;:2) (278 samples, 9.30%)</title><rect x="13.9558%" y="68" width="9.3039%" height="15" fill="rgb(215,43,3)"/><text x="14.2058%" y="78.50">FunctionSpace..</text></g><g><title>wrapper (pyop2/profiling.py:60) (278 samples, 9.30%)</title><rect x="13.9558%" y="84" width="9.3039%" height="15" fill="rgb(238,154,13)"/><text x="14.2058%" y="94.50">wrapper (pyop..</text></g><g><title>FunctionSpace (firedrake/functionspace.py:140) (278 samples, 9.30%)</title><rect x="13.9558%" y="100" width="9.3039%" height="15" fill="rgb(219,56,2)"/><text x="14.2058%" y="110.50">FunctionSpace..</text></g><g><title>__init__ (firedrake/functionspaceimpl.py:277) (278 samples, 9.30%)</title><rect x="13.9558%" y="116" width="9.3039%" height="15" fill="rgb(233,0,4)"/><text x="14.2058%" y="126.50">__init__ (fir..</text></g><g><title>create_element (tsfc/finatinterface.py:278) (278 samples, 9.30%)</title><rect x="13.9558%" y="132" width="9.3039%" height="15" fill="rgb(235,30,7)"/><text x="14.2058%" y="142.50">create_elemen..</text></g><g><title>_create_element (tsfc/finatinterface.py:305) (278 samples, 9.30%)</title><rect x="13.9558%" y="148" width="9.3039%" height="15" fill="rgb(250,79,13)"/><text x="14.2058%" y="158.50">_create_eleme..</text></g><g><title>wrapper (functools.py:807) (278 samples, 9.30%)</title><rect x="13.9558%" y="164" width="9.3039%" height="15" fill="rgb(211,146,34)"/><text x="14.2058%" y="174.50">wrapper (func..</text></g><g><title>convert_finiteelement (tsfc/finatinterface.py:177) (278 samples, 9.30%)</title><rect x="13.9558%" y="180" width="9.3039%" height="15" fill="rgb(228,22,38)"/><text x="14.2058%" y="190.50">convert_finit..</text></g><g><title>__init__ (finat/fiat_elements.py:333) (278 samples, 9.30%)</title><rect x="13.9558%" y="196" width="9.3039%" height="15" fill="rgb(235,168,5)"/><text x="14.2058%" y="206.50">__init__ (fin..</text></g><g><title>__init__ (FIAT/lagrange.py:43) (278 samples, 9.30%)</title><rect x="13.9558%" y="212" width="9.3039%" height="15" fill="rgb(221,155,16)"/><text x="14.2058%" y="222.50">__init__ (FIA..</text></g><g><title>__init__ (FIAT/polynomial_set.py:168) (278 samples, 9.30%)</title><rect x="13.9558%" y="228" width="9.3039%" height="15" fill="rgb(215,215,53)"/><text x="14.2058%" y="238.50">__init__ (FIA..</text></g><g><title>tabulate_derivatives (FIAT/expansions.py:277) (278 samples, 9.30%)</title><rect x="13.9558%" y="244" width="9.3039%" height="15" fill="rgb(223,4,10)"/><text x="14.2058%" y="254.50">tabulate_deri..</text></g><g><title>_tabulate_dpts (FIAT/expansions.py:91) (200 samples, 6.69%)</title><rect x="16.5663%" y="260" width="6.6934%" height="15" fill="rgb(234,103,6)"/><text x="16.8163%" y="270.50">_tabulate..</text></g><g><title>form_derivative (FIAT/expansions.py:43) (140 samples, 4.69%)</title><rect x="18.5743%" y="276" width="4.6854%" height="15" fill="rgb(227,97,0)"/><text x="18.8243%" y="286.50">form_..</text></g><g><title>form_derivative (FIAT/expansions.py:37) (140 samples, 4.69%)</title><rect x="18.5743%" y="292" width="4.6854%" height="15" fill="rgb(234,150,53)"/><text x="18.8243%" y="302.50">form_..</text></g><g><title>&lt;listcomp&gt; (FIAT/expansions.py:37) (140 samples, 4.69%)</title><rect x="18.5743%" y="308" width="4.6854%" height="15" fill="rgb(228,201,54)"/><text x="18.8243%" y="318.50">&lt;list..</text></g><g><title>diff (sympy/core/function.py:2492) (139 samples, 4.65%)</title><rect x="18.6078%" y="324" width="4.6519%" height="15" fill="rgb(222,22,37)"/><text x="18.8578%" y="334.50">diff ..</text></g><g><title>diff (sympy/core/expr.py:3474) (139 samples, 4.65%)</title><rect x="18.6078%" y="340" width="4.6519%" height="15" fill="rgb(237,53,32)"/><text x="18.8578%" y="350.50">diff ..</text></g><g><title>_derivative_dispatch (sympy/core/function.py:1942) (139 samples, 4.65%)</title><rect x="18.6078%" y="356" width="4.6519%" height="15" fill="rgb(233,25,53)"/><text x="18.8578%" y="366.50">_deri..</text></g><g><title>__sub__ (ufl/form.py:302) (39 samples, 1.31%)</title><rect x="25.1004%" y="132" width="1.3052%" height="15" fill="rgb(210,40,34)"/><text x="25.3504%" y="142.50"></text></g><g><title>&lt;lambda&gt; (ufl/algorithms/map_integrands.py:46) (40 samples, 1.34%)</title><rect x="26.5395%" y="260" width="1.3387%" height="15" fill="rgb(241,220,44)"/><text x="26.7895%" y="270.50"></text></g><g><title>map_expr_dag (ufl/corealg/map_dag.py:26) (40 samples, 1.34%)</title><rect x="26.5395%" y="276" width="1.3387%" height="15" fill="rgb(235,28,35)"/><text x="26.7895%" y="286.50"></text></g><g><title>map_integrands (ufl/algorithms/map_integrands.py:28) (41 samples, 1.37%)</title><rect x="26.5395%" y="212" width="1.3722%" height="15" fill="rgb(210,56,17)"/><text x="26.7895%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (ufl/algorithms/map_integrands.py:28) (41 samples, 1.37%)</title><rect x="26.5395%" y="228" width="1.3722%" height="15" fill="rgb(224,130,29)"/><text x="26.7895%" y="238.50"></text></g><g><title>map_integrands (ufl/algorithms/map_integrands.py:35) (41 samples, 1.37%)</title><rect x="26.5395%" y="244" width="1.3722%" height="15" fill="rgb(235,212,8)"/><text x="26.7895%" y="254.50"></text></g><g><title>expand_derivatives (ufl/algorithms/ad.py:31) (52 samples, 1.74%)</title><rect x="26.4391%" y="164" width="1.7403%" height="15" fill="rgb(223,33,50)"/><text x="26.6891%" y="174.50"></text></g><g><title>apply_algebra_lowering (ufl/algorithms/apply_algebra_lowering.py:175) (52 samples, 1.74%)</title><rect x="26.4391%" y="180" width="1.7403%" height="15" fill="rgb(219,149,13)"/><text x="26.6891%" y="190.50"></text></g><g><title>map_integrand_dags (ufl/algorithms/map_integrands.py:47) (49 samples, 1.64%)</title><rect x="26.5395%" y="196" width="1.6399%" height="15" fill="rgb(250,156,29)"/><text x="26.7895%" y="206.50"></text></g><g><title>map_expr_dags (ufl/corealg/map_dag.py:75) (30 samples, 1.00%)</title><rect x="29.0495%" y="292" width="1.0040%" height="15" fill="rgb(216,193,19)"/><text x="29.2995%" y="302.50"></text></g><g><title>map_integrands (ufl/algorithms/map_integrands.py:28) (51 samples, 1.71%)</title><rect x="28.5141%" y="212" width="1.7068%" height="15" fill="rgb(216,135,14)"/><text x="28.7641%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (ufl/algorithms/map_integrands.py:28) (50 samples, 1.67%)</title><rect x="28.5475%" y="228" width="1.6734%" height="15" fill="rgb(241,47,5)"/><text x="28.7975%" y="238.50"></text></g><g><title>map_integrands (ufl/algorithms/map_integrands.py:35) (50 samples, 1.67%)</title><rect x="28.5475%" y="244" width="1.6734%" height="15" fill="rgb(233,42,35)"/><text x="28.7975%" y="254.50"></text></g><g><title>&lt;lambda&gt; (ufl/algorithms/map_integrands.py:46) (50 samples, 1.67%)</title><rect x="28.5475%" y="260" width="1.6734%" height="15" fill="rgb(231,13,6)"/><text x="28.7975%" y="270.50"></text></g><g><title>map_expr_dag (ufl/corealg/map_dag.py:26) (50 samples, 1.67%)</title><rect x="28.5475%" y="276" width="1.6734%" height="15" fill="rgb(207,181,40)"/><text x="28.7975%" y="286.50"></text></g><g><title>action (ufl/formoperators.py:109) (125 samples, 4.18%)</title><rect x="26.4391%" y="148" width="4.1834%" height="15" fill="rgb(254,173,49)"/><text x="26.6891%" y="158.50">actio..</text></g><g><title>expand_derivatives (ufl/algorithms/ad.py:34) (73 samples, 2.44%)</title><rect x="28.1794%" y="164" width="2.4431%" height="15" fill="rgb(221,1,38)"/><text x="28.4294%" y="174.50">ex..</text></g><g><title>apply_derivatives (ufl/algorithms/apply_derivatives.py:1095) (63 samples, 2.11%)</title><rect x="28.5141%" y="180" width="2.1084%" height="15" fill="rgb(206,124,46)"/><text x="28.7641%" y="190.50">a..</text></g><g><title>map_integrand_dags (ufl/algorithms/map_integrands.py:47) (63 samples, 2.11%)</title><rect x="28.5141%" y="196" width="2.1084%" height="15" fill="rgb(249,21,11)"/><text x="28.7641%" y="206.50">m..</text></g><g><title>__init__ (firedrake/variational_solver.py:308) (222 samples, 7.43%)</title><rect x="25.1004%" y="116" width="7.4297%" height="15" fill="rgb(222,201,40)"/><text x="25.3504%" y="126.50">__init__ (..</text></g><g><title>action (firedrake/ufl_expr.py:203) (182 samples, 6.09%)</title><rect x="26.4391%" y="132" width="6.0910%" height="15" fill="rgb(235,61,29)"/><text x="26.6891%" y="142.50">action (..</text></g><g><title>action (ufl/formoperators.py:110) (57 samples, 1.91%)</title><rect x="30.6225%" y="148" width="1.9076%" height="15" fill="rgb(219,207,3)"/><text x="30.8725%" y="158.50">a..</text></g><g><title>compute_form_action (ufl/algorithms/formtransformations.py:418) (49 samples, 1.64%)</title><rect x="30.8902%" y="164" width="1.6399%" height="15" fill="rgb(222,56,46)"/><text x="31.1402%" y="174.50"></text></g><g><title>replace (ufl/algorithms/replace.py:61) (44 samples, 1.47%)</title><rect x="31.0576%" y="180" width="1.4726%" height="15" fill="rgb(239,76,54)"/><text x="31.3076%" y="190.50"></text></g><g><title>map_integrand_dags (ufl/algorithms/map_integrands.py:47) (36 samples, 1.20%)</title><rect x="31.3253%" y="196" width="1.2048%" height="15" fill="rgb(231,124,27)"/><text x="31.5753%" y="206.50"></text></g><g><title>_solve_varproblem (firedrake/solving.py:153) (236 samples, 7.90%)</title><rect x="25.0669%" y="100" width="7.8983%" height="15" fill="rgb(249,195,6)"/><text x="25.3169%" y="110.50">_solve_varp..</text></g><g><title>fill_with_zeros (pyop2/sparsity.pyx:231) (35 samples, 1.17%)</title><rect x="35.7095%" y="324" width="1.1714%" height="15" fill="rgb(237,174,47)"/><text x="35.9595%" y="334.50"></text></g><g><title>sparsity_CHKERR (pyop2/sparsity.pyx:86) (35 samples, 1.17%)</title><rect x="35.7095%" y="340" width="1.1714%" height="15" fill="rgb(206,201,31)"/><text x="35.9595%" y="350.50"></text></g><g><title>_init_block (pyop2/petsc_base.py:763) (42 samples, 1.41%)</title><rect x="35.5087%" y="292" width="1.4056%" height="15" fill="rgb(231,57,52)"/><text x="35.7587%" y="302.50"></text></g><g><title>fill_with_zeros (pyop2/sparsity.pyx:175) (42 samples, 1.41%)</title><rect x="35.5087%" y="308" width="1.4056%" height="15" fill="rgb(248,177,22)"/><text x="35.7587%" y="318.50"></text></g><g><title>set_jacobian (firedrake/solving_utils.py:296) (84 samples, 2.81%)</title><rect x="34.2704%" y="164" width="2.8112%" height="15" fill="rgb(215,211,37)"/><text x="34.5204%" y="174.50">se..</text></g><g><title>__get__ (pyop2/utils.py:62) (84 samples, 2.81%)</title><rect x="34.2704%" y="180" width="2.8112%" height="15" fill="rgb(241,128,51)"/><text x="34.5204%" y="190.50">__..</text></g><g><title>_jac (firedrake/solving_utils.py:509) (83 samples, 2.78%)</title><rect x="34.3039%" y="196" width="2.7778%" height="15" fill="rgb(227,165,31)"/><text x="34.5539%" y="206.50">_j..</text></g><g><title>allocate_matrix (firedrake/assemble.py:149) (82 samples, 2.74%)</title><rect x="34.3373%" y="212" width="2.7443%" height="15" fill="rgb(228,167,24)"/><text x="34.5873%" y="222.50">al..</text></g><g><title>get_matrix (firedrake/assemble.py:281) (69 samples, 2.31%)</title><rect x="34.7724%" y="228" width="2.3092%" height="15" fill="rgb(228,143,12)"/><text x="35.0224%" y="238.50">g..</text></g><g><title>__init__ (firedrake/matrix.py:99) (68 samples, 2.28%)</title><rect x="34.8059%" y="244" width="2.2758%" height="15" fill="rgb(249,149,8)"/><text x="35.0559%" y="254.50">_..</text></g><g><title>__init__ (pyop2/petsc_base.py:603) (63 samples, 2.11%)</title><rect x="34.9732%" y="260" width="2.1084%" height="15" fill="rgb(243,35,44)"/><text x="35.2232%" y="270.50">_..</text></g><g><title>_init (pyop2/petsc_base.py:628) (62 samples, 2.07%)</title><rect x="35.0067%" y="276" width="2.0750%" height="15" fill="rgb(246,89,9)"/><text x="35.2567%" y="286.50">_..</text></g><g><title>__init__ (firedrake/variational_solver.py:207) (88 samples, 2.95%)</title><rect x="34.2369%" y="148" width="2.9451%" height="15" fill="rgb(233,213,13)"/><text x="34.4869%" y="158.50">__..</text></g><g><title>KSPSetFromOptions (itcl.c:334) (34 samples, 1.14%)</title><rect x="38.0522%" y="244" width="1.1379%" height="15" fill="rgb(233,141,41)"/><text x="38.3022%" y="254.50"></text></g><g><title>SNESSetFromOptions (snes.c:1116) (73 samples, 2.44%)</title><rect x="38.0522%" y="228" width="2.4431%" height="15" fill="rgb(239,167,4)"/><text x="38.3022%" y="238.50">SN..</text></g><g><title>set_from_options (firedrake/petsc.py:184) (89 samples, 2.98%)</title><rect x="37.9518%" y="164" width="2.9786%" height="15" fill="rgb(209,217,16)"/><text x="38.2018%" y="174.50">set..</text></g><g><title>setFromOptions (petsc4py.PETSc.c:191728) (89 samples, 2.98%)</title><rect x="37.9518%" y="180" width="2.9786%" height="15" fill="rgb(219,88,35)"/><text x="38.2018%" y="190.50">set..</text></g><g><title>setFromOptions (petsc4py.PETSc.c:191751) (89 samples, 2.98%)</title><rect x="37.9518%" y="196" width="2.9786%" height="15" fill="rgb(220,193,23)"/><text x="38.2018%" y="206.50">set..</text></g><g><title>PETSc_CHKERR (petsc4py.PETSc.c:10267) (89 samples, 2.98%)</title><rect x="37.9518%" y="212" width="2.9786%" height="15" fill="rgb(230,90,52)"/><text x="38.2018%" y="222.50">PET..</text></g><g><title>_solve_varproblem (firedrake/solving.py:160) (245 samples, 8.20%)</title><rect x="32.9987%" y="100" width="8.1995%" height="15" fill="rgb(252,106,19)"/><text x="33.2487%" y="110.50">_solve_varp..</text></g><g><title>wrapper (pyadjoint/tape.py:46) (244 samples, 8.17%)</title><rect x="33.0321%" y="116" width="8.1660%" height="15" fill="rgb(206,74,20)"/><text x="33.2821%" y="126.50">wrapper (py..</text></g><g><title>wrapper (firedrake/adjoint/variational_solver.py:34) (243 samples, 8.13%)</title><rect x="33.0656%" y="132" width="8.1325%" height="15" fill="rgb(230,138,44)"/><text x="33.3156%" y="142.50">wrapper (fi..</text></g><g><title>__init__ (firedrake/variational_solver.py:224) (115 samples, 3.85%)</title><rect x="37.3494%" y="148" width="3.8487%" height="15" fill="rgb(235,182,43)"/><text x="37.5994%" y="158.50">__in..</text></g><g><title>solve (firedrake/variational_solver.py:256) (49 samples, 1.64%)</title><rect x="41.2651%" y="132" width="1.6399%" height="15" fill="rgb(242,16,51)"/><text x="41.5151%" y="142.50"></text></g><g><title>apply (&lt;decorator-gen-45&gt;:2) (49 samples, 1.64%)</title><rect x="41.2651%" y="148" width="1.6399%" height="15" fill="rgb(248,9,4)"/><text x="41.5151%" y="158.50"></text></g><g><title>wrapper (pyop2/profiling.py:60) (47 samples, 1.57%)</title><rect x="41.3320%" y="164" width="1.5730%" height="15" fill="rgb(210,31,22)"/><text x="41.5820%" y="174.50"></text></g><g><title>wrapper (firedrake/adjoint/dirichletbc.py:32) (47 samples, 1.57%)</title><rect x="41.3320%" y="180" width="1.5730%" height="15" fill="rgb(239,54,39)"/><text x="41.5820%" y="190.50"></text></g><g><title>apply (firedrake/bcs.py:422) (40 samples, 1.34%)</title><rect x="41.5663%" y="196" width="1.3387%" height="15" fill="rgb(230,99,41)"/><text x="41.8163%" y="206.50"></text></g><g><title>wrapper (firedrake/adjoint/function.py:108) (32 samples, 1.07%)</title><rect x="41.8340%" y="212" width="1.0710%" height="15" fill="rgb(253,106,12)"/><text x="42.0840%" y="222.50"></text></g><g><title>assign (&lt;decorator-gen-40&gt;:2) (32 samples, 1.07%)</title><rect x="41.8340%" y="228" width="1.0710%" height="15" fill="rgb(213,46,41)"/><text x="42.0840%" y="238.50"></text></g><g><title>compile_form (firedrake/tsfc_interface.py:214) (47 samples, 1.57%)</title><rect x="45.3481%" y="356" width="1.5730%" height="15" fill="rgb(215,133,35)"/><text x="45.5981%" y="366.50"></text></g><g><title>compile_form (firedrake/tsfc_interface.py:229) (49 samples, 1.64%)</title><rect x="47.0214%" y="356" width="1.6399%" height="15" fill="rgb(213,28,5)"/><text x="47.2714%" y="366.50"></text></g><g><title>__new__ (pyop2/caching.py:178) (48 samples, 1.61%)</title><rect x="47.0549%" y="372" width="1.6064%" height="15" fill="rgb(215,77,49)"/><text x="47.3049%" y="382.50"></text></g><g><title>_cache_key (firedrake/tsfc_interface.py:121) (48 samples, 1.61%)</title><rect x="47.0549%" y="388" width="1.6064%" height="15" fill="rgb(248,100,22)"/><text x="47.3049%" y="398.50"></text></g><g><title>signature (ufl/form.py:243) (32 samples, 1.07%)</title><rect x="47.5904%" y="404" width="1.0710%" height="15" fill="rgb(208,67,9)"/><text x="47.8404%" y="414.50"></text></g><g><title>_compute_signature (ufl/form.py:487) (31 samples, 1.04%)</title><rect x="47.6238%" y="420" width="1.0375%" height="15" fill="rgb(219,133,21)"/><text x="47.8738%" y="430.50"></text></g><g><title>create_parloops (firedrake/assemble.py:520) (128 samples, 4.28%)</title><rect x="44.5114%" y="340" width="4.2838%" height="15" fill="rgb(246,46,29)"/><text x="44.7614%" y="350.50">creat..</text></g><g><title>__get__ (pyop2/utils.py:62) (203 samples, 6.79%)</title><rect x="43.7751%" y="276" width="6.7938%" height="15" fill="rgb(246,185,52)"/><text x="44.0251%" y="286.50">__get__ (..</text></g><g><title>_assemble_residual (firedrake/solving_utils.py:499) (203 samples, 6.79%)</title><rect x="43.7751%" y="292" width="6.7938%" height="15" fill="rgb(252,136,11)"/><text x="44.0251%" y="302.50">_assemble..</text></g><g><title>create_assembly_callable (firedrake/assemble.py:177) (196 samples, 6.56%)</title><rect x="44.0094%" y="308" width="6.5596%" height="15" fill="rgb(219,138,53)"/><text x="44.2594%" y="318.50">create_as..</text></g><g><title>_assemble (firedrake/assemble.py:748) (182 samples, 6.09%)</title><rect x="44.4779%" y="324" width="6.0910%" height="15" fill="rgb(211,51,23)"/><text x="44.7279%" y="334.50">_assembl..</text></g><g><title>form_function (firedrake/solving_utils.py:408) (281 samples, 9.40%)</title><rect x="43.7751%" y="260" width="9.4043%" height="15" fill="rgb(247,221,28)"/><text x="44.0251%" y="270.50">form_function..</text></g><g><title>thunk (firedrake/assemble.py:181) (78 samples, 2.61%)</title><rect x="50.5689%" y="276" width="2.6104%" height="15" fill="rgb(251,222,45)"/><text x="50.8189%" y="286.50">th..</text></g><g><title>SNESSolve_KSPONLY (ksponly.c:28) (287 samples, 9.61%)</title><rect x="43.6078%" y="212" width="9.6051%" height="15" fill="rgb(217,162,53)"/><text x="43.8578%" y="222.50">SNESSolve_KSPO..</text></g><g><title>SNESComputeFunction (snes.c:2381) (287 samples, 9.61%)</title><rect x="43.6078%" y="228" width="9.6051%" height="15" fill="rgb(229,93,14)"/><text x="43.8578%" y="238.50">SNESComputeFun..</text></g><g><title>PETSc_SNES_Function (petsc4py.PETSc.c:38905) (286 samples, 9.57%)</title><rect x="43.6412%" y="244" width="9.5716%" height="15" fill="rgb(209,67,49)"/><text x="43.8912%" y="254.50">PETSc_SNES_Fun..</text></g><g><title>matrix_arg (firedrake/assemble.py:349) (45 samples, 1.51%)</title><rect x="54.4846%" y="356" width="1.5060%" height="15" fill="rgb(213,87,29)"/><text x="54.7346%" y="366.50"></text></g><g><title>create_parloops (firedrake/assemble.py:599) (73 samples, 2.44%)</title><rect x="54.3173%" y="340" width="2.4431%" height="15" fill="rgb(205,151,52)"/><text x="54.5673%" y="350.50">cr..</text></g><g><title>_assemble (firedrake/assemble.py:748) (106 samples, 3.55%)</title><rect x="54.0495%" y="324" width="3.5475%" height="15" fill="rgb(253,215,39)"/><text x="54.2995%" y="334.50">_ass..</text></g><g><title>__get__ (pyop2/utils.py:62) (157 samples, 5.25%)</title><rect x="53.3133%" y="276" width="5.2544%" height="15" fill="rgb(221,220,41)"/><text x="53.5633%" y="286.50">__get_..</text></g><g><title>_assemble_jac (firedrake/solving_utils.py:519) (152 samples, 5.09%)</title><rect x="53.4806%" y="292" width="5.0870%" height="15" fill="rgb(218,133,21)"/><text x="53.7306%" y="302.50">_assem..</text></g><g><title>create_assembly_callable (firedrake/assemble.py:177) (143 samples, 4.79%)</title><rect x="53.7818%" y="308" width="4.7858%" height="15" fill="rgb(221,193,43)"/><text x="54.0318%" y="318.50">create..</text></g><g><title>MatSetValuesBlockedLocal (matrix.c:2328) (34 samples, 1.14%)</title><rect x="59.7724%" y="420" width="1.1379%" height="15" fill="rgb(240,128,52)"/><text x="60.0224%" y="430.50"></text></g><g><title>wrap_form00_cell_integral_otherwise (1bae92a712eccece08635b11f28682_p11029.c:59) (44 samples, 1.47%)</title><rect x="59.5716%" y="404" width="1.4726%" height="15" fill="rgb(253,114,12)"/><text x="59.8216%" y="414.50"></text></g><g><title>compute (pyop2/base.py:3579) (58 samples, 1.94%)</title><rect x="59.1365%" y="292" width="1.9411%" height="15" fill="rgb(215,223,47)"/><text x="59.3865%" y="302.50">c..</text></g><g><title>_compute (pyop2/sequential.py:218) (50 samples, 1.67%)</title><rect x="59.4043%" y="308" width="1.6734%" height="15" fill="rgb(248,225,23)"/><text x="59.6543%" y="318.50"></text></g><g><title>__call__ (pyop2/sequential.py:106) (48 samples, 1.61%)</title><rect x="59.4712%" y="324" width="1.6064%" height="15" fill="rgb(250,108,0)"/><text x="59.7212%" y="334.50"></text></g><g><title>0x7fdaa9f19d54 (_ctypes.cpython-36m-x86_64-linux-gnu.so) (48 samples, 1.61%)</title><rect x="59.4712%" y="340" width="1.6064%" height="15" fill="rgb(228,208,7)"/><text x="59.7212%" y="350.50"></text></g><g><title>_ctypes_callproc (_ctypes.cpython-36m-x86_64-linux-gnu.so) (48 samples, 1.61%)</title><rect x="59.4712%" y="356" width="1.6064%" height="15" fill="rgb(244,45,10)"/><text x="59.7212%" y="366.50"></text></g><g><title>ffi_call (libffi.so.6.0.4) (46 samples, 1.54%)</title><rect x="59.5382%" y="372" width="1.5395%" height="15" fill="rgb(207,125,25)"/><text x="59.7882%" y="382.50"></text></g><g><title>ffi_call_unix64 (libffi.so.6.0.4) (46 samples, 1.54%)</title><rect x="59.5382%" y="388" width="1.5395%" height="15" fill="rgb(210,195,18)"/><text x="59.7882%" y="398.50"></text></g><g><title>form_jacobian (firedrake/solving_utils.py:447) (252 samples, 8.43%)</title><rect x="53.3133%" y="260" width="8.4337%" height="15" fill="rgb(249,80,12)"/><text x="53.5633%" y="270.50">form_jacobia..</text></g><g><title>thunk (firedrake/assemble.py:181) (95 samples, 3.18%)</title><rect x="58.5676%" y="276" width="3.1794%" height="15" fill="rgb(221,65,9)"/><text x="58.8176%" y="286.50">thu..</text></g><g><title>SNESComputeJacobian (snes.c:2715) (256 samples, 8.57%)</title><rect x="53.2129%" y="228" width="8.5676%" height="15" fill="rgb(235,49,36)"/><text x="53.4629%" y="238.50">SNESComputeJ..</text></g><g><title>PETSc_SNES_Jacobian (petsc4py.PETSc.c:39428) (256 samples, 8.57%)</title><rect x="53.2129%" y="244" width="8.5676%" height="15" fill="rgb(225,32,20)"/><text x="53.4629%" y="254.50">PETSc_SNES_J..</text></g><g><title>SNESSolve_KSPONLY (ksponly.c:43) (267 samples, 8.94%)</title><rect x="53.2129%" y="212" width="8.9357%" height="15" fill="rgb(215,141,46)"/><text x="53.4629%" y="222.50">SNESSolve_KSP..</text></g><g><title>hypre_BoomerAMGCoarsenFalgout (par_coarsen.c:2005) (38 samples, 1.27%)</title><rect x="63.6881%" y="340" width="1.2718%" height="15" fill="rgb(250,160,47)"/><text x="63.9381%" y="350.50"></text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:1224) (57 samples, 1.91%)</title><rect x="63.6881%" y="324" width="1.9076%" height="15" fill="rgb(216,222,40)"/><text x="63.9381%" y="334.50">h..</text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:2165) (36 samples, 1.20%)</title><rect x="65.6292%" y="324" width="1.2048%" height="15" fill="rgb(234,217,39)"/><text x="65.8792%" y="334.50"></text></g><g><title>hypre_BoomerAMGSetup (par_amg_setup.c:2748) (64 samples, 2.14%)</title><rect x="66.9009%" y="324" width="2.1419%" height="15" fill="rgb(207,178,40)"/><text x="67.1509%" y="334.50">h..</text></g><g><title>KSPSolve_Private (itfunc.c:658) (212 samples, 7.10%)</title><rect x="62.1486%" y="244" width="7.0950%" height="15" fill="rgb(221,136,13)"/><text x="62.3986%" y="254.50">KSPSolve_P..</text></g><g><title>KSPSetUp (itfunc.c:406) (206 samples, 6.89%)</title><rect x="62.3494%" y="260" width="6.8942%" height="15" fill="rgb(249,199,10)"/><text x="62.5994%" y="270.50">KSPSetUp ..</text></g><g><title>PCSetUp (precon.c:1009) (206 samples, 6.89%)</title><rect x="62.3494%" y="276" width="6.8942%" height="15" fill="rgb(249,222,13)"/><text x="62.5994%" y="286.50">PCSetUp (..</text></g><g><title>PCSetUp_HYPRE (hypre.c:408) (179 samples, 5.99%)</title><rect x="63.2530%" y="292" width="5.9906%" height="15" fill="rgb(244,185,38)"/><text x="63.5030%" y="302.50">PCSetUp_..</text></g><g><title>HYPRE_BoomerAMGSetup (HYPRE_parcsr_amg.c:51) (178 samples, 5.96%)</title><rect x="63.2865%" y="308" width="5.9572%" height="15" fill="rgb(236,202,9)"/><text x="63.5365%" y="318.50">HYPRE_Bo..</text></g><g><title>hypre_BoomerAMGCycle (par_cycle.c:589) (32 samples, 1.07%)</title><rect x="70.2142%" y="356" width="1.0710%" height="15" fill="rgb(250,229,37)"/><text x="70.4642%" y="366.50"></text></g><g><title>hypre_BoomerAMGRelaxIF (par_relax_interface.c:49) (32 samples, 1.07%)</title><rect x="70.2142%" y="372" width="1.0710%" height="15" fill="rgb(206,174,23)"/><text x="70.4642%" y="382.50"></text></g><g><title>PCApply_HYPRE (hypre.c:434) (52 samples, 1.74%)</title><rect x="70.1807%" y="308" width="1.7403%" height="15" fill="rgb(211,33,43)"/><text x="70.4307%" y="318.50"></text></g><g><title>HYPRE_BoomerAMGSolve (HYPRE_parcsr_amg.c:69) (52 samples, 1.74%)</title><rect x="70.1807%" y="324" width="1.7403%" height="15" fill="rgb(245,58,50)"/><text x="70.4307%" y="334.50"></text></g><g><title>hypre_BoomerAMGSolve (par_amg_solve.c:250) (52 samples, 1.74%)</title><rect x="70.1807%" y="340" width="1.7403%" height="15" fill="rgb(244,68,36)"/><text x="70.4307%" y="350.50"></text></g><g><title>KSPSolve_Private (itfunc.c:719) (80 samples, 2.68%)</title><rect x="69.2771%" y="244" width="2.6774%" height="15" fill="rgb(232,229,15)"/><text x="69.5271%" y="254.50">KS..</text></g><g><title>KSPSolve_CG (cg.c:210) (54 samples, 1.81%)</title><rect x="70.1473%" y="260" width="1.8072%" height="15" fill="rgb(254,30,23)"/><text x="70.3973%" y="270.50">K..</text></g><g><title>KSP_PCApply (kspimpl.h:283) (54 samples, 1.81%)</title><rect x="70.1473%" y="276" width="1.8072%" height="15" fill="rgb(235,160,14)"/><text x="70.3973%" y="286.50">K..</text></g><g><title>PCApply (precon.c:444) (54 samples, 1.81%)</title><rect x="70.1473%" y="292" width="1.8072%" height="15" fill="rgb(212,155,44)"/><text x="70.3973%" y="302.50">P..</text></g><g><title>SNESSolve_KSPONLY (ksponly.c:51) (304 samples, 10.17%)</title><rect x="62.1486%" y="212" width="10.1740%" height="15" fill="rgb(226,2,50)"/><text x="62.3986%" y="222.50">SNESSolve_KSPON..</text></g><g><title>KSPSolve (itfunc.c:889) (304 samples, 10.17%)</title><rect x="62.1486%" y="228" width="10.1740%" height="15" fill="rgb(234,177,6)"/><text x="62.3986%" y="238.50">KSPSolve (itfun..</text></g><g><title>SNESSolve (snes.c:4567) (859 samples, 28.75%)</title><rect x="43.6078%" y="196" width="28.7483%" height="15" fill="rgb(217,24,9)"/><text x="43.8578%" y="206.50">SNESSolve (snes.c:4567)</text></g><g><title>solve (firedrake/variational_solver.py:271) (877 samples, 29.35%)</title><rect x="43.1392%" y="132" width="29.3507%" height="15" fill="rgb(220,13,46)"/><text x="43.3892%" y="142.50">solve (firedrake/variational_solver.py:271)</text></g><g><title>solve (petsc4py.PETSc.c:201060) (868 samples, 29.05%)</title><rect x="43.4404%" y="148" width="29.0495%" height="15" fill="rgb(239,221,27)"/><text x="43.6904%" y="158.50">solve (petsc4py.PETSc.c:201060)</text></g><g><title>solve (petsc4py.PETSc.c:201114) (868 samples, 29.05%)</title><rect x="43.4404%" y="164" width="29.0495%" height="15" fill="rgb(222,198,25)"/><text x="43.6904%" y="174.50">solve (petsc4py.PETSc.c:201114)</text></g><g><title>PETSc_CHKERR (petsc4py.PETSc.c:10267) (868 samples, 29.05%)</title><rect x="43.4404%" y="180" width="29.0495%" height="15" fill="rgb(211,99,13)"/><text x="43.6904%" y="190.50">PETSc_CHKERR (petsc4py.PETSc.c:10267)</text></g><g><title>&lt;module&gt; (solve_repeats.py:63) (1,435 samples, 48.03%)</title><rect x="24.5649%" y="52" width="48.0254%" height="15" fill="rgb(232,111,31)"/><text x="24.8149%" y="62.50">&lt;module&gt; (solve_repeats.py:63)</text></g><g><title>wrapper (firedrake/adjoint/solving.py:50) (1,433 samples, 47.96%)</title><rect x="24.6319%" y="68" width="47.9585%" height="15" fill="rgb(245,82,37)"/><text x="24.8819%" y="78.50">wrapper (firedrake/adjoint/solving.py:50)</text></g><g><title>solve (firedrake/solving.py:129) (1,433 samples, 47.96%)</title><rect x="24.6319%" y="84" width="47.9585%" height="15" fill="rgb(227,149,46)"/><text x="24.8819%" y="94.50">solve (firedrake/solving.py:129)</text></g><g><title>_solve_varproblem (firedrake/solving.py:161) (938 samples, 31.39%)</title><rect x="41.1981%" y="100" width="31.3922%" height="15" fill="rgb(218,36,50)"/><text x="41.4481%" y="110.50">_solve_varproblem (firedrake/solving.py:161)</text></g><g><title>wrapper (firedrake/adjoint/variational_solver.py:75) (936 samples, 31.33%)</title><rect x="41.2651%" y="116" width="31.3253%" height="15" fill="rgb(226,80,48)"/><text x="41.5151%" y="126.50">wrapper (firedrake/adjoint/variational_solver.py:75)</text></g><g><title>_bootstrap (threading.py:884) (807 samples, 27.01%)</title><rect x="72.9585%" y="52" width="27.0080%" height="15" fill="rgb(238,224,15)"/><text x="73.2085%" y="62.50">_bootstrap (threading.py:884)</text></g><g><title>_bootstrap_inner (threading.py:916) (807 samples, 27.01%)</title><rect x="72.9585%" y="68" width="27.0080%" height="15" fill="rgb(241,136,10)"/><text x="73.2085%" y="78.50">_bootstrap_inner (threading.py:916)</text></g><g><title>run (threading.py:864) (807 samples, 27.01%)</title><rect x="72.9585%" y="84" width="27.0080%" height="15" fill="rgb(208,32,45)"/><text x="73.2085%" y="94.50">run (threading.py:864)</text></g><g><title>_log_start_if_long (pytools/__init__.py:2424) (807 samples, 27.01%)</title><rect x="72.9585%" y="100" width="27.0080%" height="15" fill="rgb(207,135,9)"/><text x="73.2085%" y="110.50">_log_start_if_long (pytools/__init__.py:242..</text></g><g><title>select (libc-2.27.so) (807 samples, 27.01%)</title><rect x="72.9585%" y="116" width="27.0080%" height="15" fill="rgb(206,86,44)"/><text x="73.2085%" y="126.50">select (libc-2.27.so)</text></g><g><title>all (2,988 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(245,177,15)"/><text x="0.2500%" y="46.50"></text></g></svg></svg>